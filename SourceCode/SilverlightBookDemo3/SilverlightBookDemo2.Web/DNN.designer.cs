#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SilverlightBookDemo2.Web
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DNN6")]
	public partial class DNNDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void Insertdnn_WorkflowState(dnn_WorkflowState instance);
    partial void Updatednn_WorkflowState(dnn_WorkflowState instance);
    partial void Deletednn_WorkflowState(dnn_WorkflowState instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertdnn_Affiliate(dnn_Affiliate instance);
    partial void Updatednn_Affiliate(dnn_Affiliate instance);
    partial void Deletednn_Affiliate(dnn_Affiliate instance);
    partial void Insertdnn_AnonymousUser(dnn_AnonymousUser instance);
    partial void Updatednn_AnonymousUser(dnn_AnonymousUser instance);
    partial void Deletednn_AnonymousUser(dnn_AnonymousUser instance);
    partial void Insertdnn_Assembly(dnn_Assembly instance);
    partial void Updatednn_Assembly(dnn_Assembly instance);
    partial void Deletednn_Assembly(dnn_Assembly instance);
    partial void Insertdnn_Authentication(dnn_Authentication instance);
    partial void Updatednn_Authentication(dnn_Authentication instance);
    partial void Deletednn_Authentication(dnn_Authentication instance);
    partial void Insertdnn_Banner(dnn_Banner instance);
    partial void Updatednn_Banner(dnn_Banner instance);
    partial void Deletednn_Banner(dnn_Banner instance);
    partial void Insertdnn_Classification(dnn_Classification instance);
    partial void Updatednn_Classification(dnn_Classification instance);
    partial void Deletednn_Classification(dnn_Classification instance);
    partial void Insertdnn_ContentItem(dnn_ContentItem instance);
    partial void Updatednn_ContentItem(dnn_ContentItem instance);
    partial void Deletednn_ContentItem(dnn_ContentItem instance);
    partial void Insertdnn_ContentItems_MetaData(dnn_ContentItems_MetaData instance);
    partial void Updatednn_ContentItems_MetaData(dnn_ContentItems_MetaData instance);
    partial void Deletednn_ContentItems_MetaData(dnn_ContentItems_MetaData instance);
    partial void Insertdnn_ContentItems_Tag(dnn_ContentItems_Tag instance);
    partial void Updatednn_ContentItems_Tag(dnn_ContentItems_Tag instance);
    partial void Deletednn_ContentItems_Tag(dnn_ContentItems_Tag instance);
    partial void Insertdnn_ContentType(dnn_ContentType instance);
    partial void Updatednn_ContentType(dnn_ContentType instance);
    partial void Deletednn_ContentType(dnn_ContentType instance);
    partial void Insertdnn_Dashboard_Control(dnn_Dashboard_Control instance);
    partial void Updatednn_Dashboard_Control(dnn_Dashboard_Control instance);
    partial void Deletednn_Dashboard_Control(dnn_Dashboard_Control instance);
    partial void Insertdnn_DesktopModulePermission(dnn_DesktopModulePermission instance);
    partial void Updatednn_DesktopModulePermission(dnn_DesktopModulePermission instance);
    partial void Deletednn_DesktopModulePermission(dnn_DesktopModulePermission instance);
    partial void Insertdnn_DesktopModule(dnn_DesktopModule instance);
    partial void Updatednn_DesktopModule(dnn_DesktopModule instance);
    partial void Deletednn_DesktopModule(dnn_DesktopModule instance);
    partial void Insertdnn_EventLog(dnn_EventLog instance);
    partial void Updatednn_EventLog(dnn_EventLog instance);
    partial void Deletednn_EventLog(dnn_EventLog instance);
    partial void Insertdnn_EventLogConfig(dnn_EventLogConfig instance);
    partial void Updatednn_EventLogConfig(dnn_EventLogConfig instance);
    partial void Deletednn_EventLogConfig(dnn_EventLogConfig instance);
    partial void Insertdnn_EventLogType(dnn_EventLogType instance);
    partial void Updatednn_EventLogType(dnn_EventLogType instance);
    partial void Deletednn_EventLogType(dnn_EventLogType instance);
    partial void Insertdnn_EventQueue(dnn_EventQueue instance);
    partial void Updatednn_EventQueue(dnn_EventQueue instance);
    partial void Deletednn_EventQueue(dnn_EventQueue instance);
    partial void Insertdnn_File(dnn_File instance);
    partial void Updatednn_File(dnn_File instance);
    partial void Deletednn_File(dnn_File instance);
    partial void Insertdnn_FolderMapping(dnn_FolderMapping instance);
    partial void Updatednn_FolderMapping(dnn_FolderMapping instance);
    partial void Deletednn_FolderMapping(dnn_FolderMapping instance);
    partial void Insertdnn_FolderMappingsSetting(dnn_FolderMappingsSetting instance);
    partial void Updatednn_FolderMappingsSetting(dnn_FolderMappingsSetting instance);
    partial void Deletednn_FolderMappingsSetting(dnn_FolderMappingsSetting instance);
    partial void Insertdnn_FolderPermission(dnn_FolderPermission instance);
    partial void Updatednn_FolderPermission(dnn_FolderPermission instance);
    partial void Deletednn_FolderPermission(dnn_FolderPermission instance);
    partial void Insertdnn_Folder(dnn_Folder instance);
    partial void Updatednn_Folder(dnn_Folder instance);
    partial void Deletednn_Folder(dnn_Folder instance);
    partial void Insertdnn_HostSetting(dnn_HostSetting instance);
    partial void Updatednn_HostSetting(dnn_HostSetting instance);
    partial void Deletednn_HostSetting(dnn_HostSetting instance);
    partial void Insertdnn_HtmlText(dnn_HtmlText instance);
    partial void Updatednn_HtmlText(dnn_HtmlText instance);
    partial void Deletednn_HtmlText(dnn_HtmlText instance);
    partial void Insertdnn_HtmlTextLog(dnn_HtmlTextLog instance);
    partial void Updatednn_HtmlTextLog(dnn_HtmlTextLog instance);
    partial void Deletednn_HtmlTextLog(dnn_HtmlTextLog instance);
    partial void Insertdnn_HtmlTextUser(dnn_HtmlTextUser instance);
    partial void Updatednn_HtmlTextUser(dnn_HtmlTextUser instance);
    partial void Deletednn_HtmlTextUser(dnn_HtmlTextUser instance);
    partial void Insertdnn_LanguagePack(dnn_LanguagePack instance);
    partial void Updatednn_LanguagePack(dnn_LanguagePack instance);
    partial void Deletednn_LanguagePack(dnn_LanguagePack instance);
    partial void Insertdnn_Language(dnn_Language instance);
    partial void Updatednn_Language(dnn_Language instance);
    partial void Deletednn_Language(dnn_Language instance);
    partial void Insertdnn_Link(dnn_Link instance);
    partial void Updatednn_Link(dnn_Link instance);
    partial void Deletednn_Link(dnn_Link instance);
    partial void Insertdnn_List(dnn_List instance);
    partial void Updatednn_List(dnn_List instance);
    partial void Deletednn_List(dnn_List instance);
    partial void Insertdnn_Messaging_Message(dnn_Messaging_Message instance);
    partial void Updatednn_Messaging_Message(dnn_Messaging_Message instance);
    partial void Deletednn_Messaging_Message(dnn_Messaging_Message instance);
    partial void Insertdnn_MetaData(dnn_MetaData instance);
    partial void Updatednn_MetaData(dnn_MetaData instance);
    partial void Deletednn_MetaData(dnn_MetaData instance);
    partial void Insertdnn_Mobile_PreviewProfile(dnn_Mobile_PreviewProfile instance);
    partial void Updatednn_Mobile_PreviewProfile(dnn_Mobile_PreviewProfile instance);
    partial void Deletednn_Mobile_PreviewProfile(dnn_Mobile_PreviewProfile instance);
    partial void Insertdnn_Mobile_RedirectionRule(dnn_Mobile_RedirectionRule instance);
    partial void Updatednn_Mobile_RedirectionRule(dnn_Mobile_RedirectionRule instance);
    partial void Deletednn_Mobile_RedirectionRule(dnn_Mobile_RedirectionRule instance);
    partial void Insertdnn_Mobile_Redirection(dnn_Mobile_Redirection instance);
    partial void Updatednn_Mobile_Redirection(dnn_Mobile_Redirection instance);
    partial void Deletednn_Mobile_Redirection(dnn_Mobile_Redirection instance);
    partial void Insertdnn_ModuleControl(dnn_ModuleControl instance);
    partial void Updatednn_ModuleControl(dnn_ModuleControl instance);
    partial void Deletednn_ModuleControl(dnn_ModuleControl instance);
    partial void Insertdnn_ModuleDefinition(dnn_ModuleDefinition instance);
    partial void Updatednn_ModuleDefinition(dnn_ModuleDefinition instance);
    partial void Deletednn_ModuleDefinition(dnn_ModuleDefinition instance);
    partial void Insertdnn_ModulePermission(dnn_ModulePermission instance);
    partial void Updatednn_ModulePermission(dnn_ModulePermission instance);
    partial void Deletednn_ModulePermission(dnn_ModulePermission instance);
    partial void Insertdnn_Module(dnn_Module instance);
    partial void Updatednn_Module(dnn_Module instance);
    partial void Deletednn_Module(dnn_Module instance);
    partial void Insertdnn_ModuleSetting(dnn_ModuleSetting instance);
    partial void Updatednn_ModuleSetting(dnn_ModuleSetting instance);
    partial void Deletednn_ModuleSetting(dnn_ModuleSetting instance);
    partial void Insertdnn_MySite_Article(dnn_MySite_Article instance);
    partial void Updatednn_MySite_Article(dnn_MySite_Article instance);
    partial void Deletednn_MySite_Article(dnn_MySite_Article instance);
    partial void Insertdnn_NewNews_Article(dnn_NewNews_Article instance);
    partial void Updatednn_NewNews_Article(dnn_NewNews_Article instance);
    partial void Deletednn_NewNews_Article(dnn_NewNews_Article instance);
    partial void Insertdnn_NewNews_Category(dnn_NewNews_Category instance);
    partial void Updatednn_NewNews_Category(dnn_NewNews_Category instance);
    partial void Deletednn_NewNews_Category(dnn_NewNews_Category instance);
    partial void Insertdnn_Package(dnn_Package instance);
    partial void Updatednn_Package(dnn_Package instance);
    partial void Deletednn_Package(dnn_Package instance);
    partial void Insertdnn_PackageType(dnn_PackageType instance);
    partial void Updatednn_PackageType(dnn_PackageType instance);
    partial void Deletednn_PackageType(dnn_PackageType instance);
    partial void Insertdnn_Permission(dnn_Permission instance);
    partial void Updatednn_Permission(dnn_Permission instance);
    partial void Deletednn_Permission(dnn_Permission instance);
    partial void Insertdnn_PortalAlia(dnn_PortalAlia instance);
    partial void Updatednn_PortalAlia(dnn_PortalAlia instance);
    partial void Deletednn_PortalAlia(dnn_PortalAlia instance);
    partial void Insertdnn_PortalDesktopModule(dnn_PortalDesktopModule instance);
    partial void Updatednn_PortalDesktopModule(dnn_PortalDesktopModule instance);
    partial void Deletednn_PortalDesktopModule(dnn_PortalDesktopModule instance);
    partial void Insertdnn_PortalGroup(dnn_PortalGroup instance);
    partial void Updatednn_PortalGroup(dnn_PortalGroup instance);
    partial void Deletednn_PortalGroup(dnn_PortalGroup instance);
    partial void Insertdnn_PortalLanguage(dnn_PortalLanguage instance);
    partial void Updatednn_PortalLanguage(dnn_PortalLanguage instance);
    partial void Deletednn_PortalLanguage(dnn_PortalLanguage instance);
    partial void Insertdnn_PortalLocalization(dnn_PortalLocalization instance);
    partial void Updatednn_PortalLocalization(dnn_PortalLocalization instance);
    partial void Deletednn_PortalLocalization(dnn_PortalLocalization instance);
    partial void Insertdnn_Portal(dnn_Portal instance);
    partial void Updatednn_Portal(dnn_Portal instance);
    partial void Deletednn_Portal(dnn_Portal instance);
    partial void Insertdnn_PortalSetting(dnn_PortalSetting instance);
    partial void Updatednn_PortalSetting(dnn_PortalSetting instance);
    partial void Deletednn_PortalSetting(dnn_PortalSetting instance);
    partial void Insertdnn_Profile(dnn_Profile instance);
    partial void Updatednn_Profile(dnn_Profile instance);
    partial void Deletednn_Profile(dnn_Profile instance);
    partial void Insertdnn_ProfilePropertyDefinition(dnn_ProfilePropertyDefinition instance);
    partial void Updatednn_ProfilePropertyDefinition(dnn_ProfilePropertyDefinition instance);
    partial void Deletednn_ProfilePropertyDefinition(dnn_ProfilePropertyDefinition instance);
    partial void Insertdnn_RoleGroup(dnn_RoleGroup instance);
    partial void Updatednn_RoleGroup(dnn_RoleGroup instance);
    partial void Deletednn_RoleGroup(dnn_RoleGroup instance);
    partial void Insertdnn_Role(dnn_Role instance);
    partial void Updatednn_Role(dnn_Role instance);
    partial void Deletednn_Role(dnn_Role instance);
    partial void Insertdnn_Schedule(dnn_Schedule instance);
    partial void Updatednn_Schedule(dnn_Schedule instance);
    partial void Deletednn_Schedule(dnn_Schedule instance);
    partial void Insertdnn_ScheduleHistory(dnn_ScheduleHistory instance);
    partial void Updatednn_ScheduleHistory(dnn_ScheduleHistory instance);
    partial void Deletednn_ScheduleHistory(dnn_ScheduleHistory instance);
    partial void Insertdnn_ScheduleItemSetting(dnn_ScheduleItemSetting instance);
    partial void Updatednn_ScheduleItemSetting(dnn_ScheduleItemSetting instance);
    partial void Deletednn_ScheduleItemSetting(dnn_ScheduleItemSetting instance);
    partial void Insertdnn_SearchCommonWord(dnn_SearchCommonWord instance);
    partial void Updatednn_SearchCommonWord(dnn_SearchCommonWord instance);
    partial void Deletednn_SearchCommonWord(dnn_SearchCommonWord instance);
    partial void Insertdnn_SearchIndexer(dnn_SearchIndexer instance);
    partial void Updatednn_SearchIndexer(dnn_SearchIndexer instance);
    partial void Deletednn_SearchIndexer(dnn_SearchIndexer instance);
    partial void Insertdnn_SearchItem(dnn_SearchItem instance);
    partial void Updatednn_SearchItem(dnn_SearchItem instance);
    partial void Deletednn_SearchItem(dnn_SearchItem instance);
    partial void Insertdnn_SearchItemWord(dnn_SearchItemWord instance);
    partial void Updatednn_SearchItemWord(dnn_SearchItemWord instance);
    partial void Deletednn_SearchItemWord(dnn_SearchItemWord instance);
    partial void Insertdnn_SearchItemWordPosition(dnn_SearchItemWordPosition instance);
    partial void Updatednn_SearchItemWordPosition(dnn_SearchItemWordPosition instance);
    partial void Deletednn_SearchItemWordPosition(dnn_SearchItemWordPosition instance);
    partial void Insertdnn_SearchWord(dnn_SearchWord instance);
    partial void Updatednn_SearchWord(dnn_SearchWord instance);
    partial void Deletednn_SearchWord(dnn_SearchWord instance);
    partial void Insertdnn_SiteLog(dnn_SiteLog instance);
    partial void Updatednn_SiteLog(dnn_SiteLog instance);
    partial void Deletednn_SiteLog(dnn_SiteLog instance);
    partial void Insertdnn_SkinControl(dnn_SkinControl instance);
    partial void Updatednn_SkinControl(dnn_SkinControl instance);
    partial void Deletednn_SkinControl(dnn_SkinControl instance);
    partial void Insertdnn_SkinPackage(dnn_SkinPackage instance);
    partial void Updatednn_SkinPackage(dnn_SkinPackage instance);
    partial void Deletednn_SkinPackage(dnn_SkinPackage instance);
    partial void Insertdnn_Skin(dnn_Skin instance);
    partial void Updatednn_Skin(dnn_Skin instance);
    partial void Deletednn_Skin(dnn_Skin instance);
    partial void Insertdnn_SystemMessage(dnn_SystemMessage instance);
    partial void Updatednn_SystemMessage(dnn_SystemMessage instance);
    partial void Deletednn_SystemMessage(dnn_SystemMessage instance);
    partial void Insertdnn_TabModule(dnn_TabModule instance);
    partial void Updatednn_TabModule(dnn_TabModule instance);
    partial void Deletednn_TabModule(dnn_TabModule instance);
    partial void Insertdnn_TabModuleSetting(dnn_TabModuleSetting instance);
    partial void Updatednn_TabModuleSetting(dnn_TabModuleSetting instance);
    partial void Deletednn_TabModuleSetting(dnn_TabModuleSetting instance);
    partial void Insertdnn_TabPermission(dnn_TabPermission instance);
    partial void Updatednn_TabPermission(dnn_TabPermission instance);
    partial void Deletednn_TabPermission(dnn_TabPermission instance);
    partial void Insertdnn_Tab(dnn_Tab instance);
    partial void Updatednn_Tab(dnn_Tab instance);
    partial void Deletednn_Tab(dnn_Tab instance);
    partial void Insertdnn_Taxonomy_ScopeType(dnn_Taxonomy_ScopeType instance);
    partial void Updatednn_Taxonomy_ScopeType(dnn_Taxonomy_ScopeType instance);
    partial void Deletednn_Taxonomy_ScopeType(dnn_Taxonomy_ScopeType instance);
    partial void Insertdnn_Taxonomy_Term(dnn_Taxonomy_Term instance);
    partial void Updatednn_Taxonomy_Term(dnn_Taxonomy_Term instance);
    partial void Deletednn_Taxonomy_Term(dnn_Taxonomy_Term instance);
    partial void Insertdnn_Taxonomy_Vocabulary(dnn_Taxonomy_Vocabulary instance);
    partial void Updatednn_Taxonomy_Vocabulary(dnn_Taxonomy_Vocabulary instance);
    partial void Deletednn_Taxonomy_Vocabulary(dnn_Taxonomy_Vocabulary instance);
    partial void Insertdnn_Taxonomy_VocabularyType(dnn_Taxonomy_VocabularyType instance);
    partial void Updatednn_Taxonomy_VocabularyType(dnn_Taxonomy_VocabularyType instance);
    partial void Deletednn_Taxonomy_VocabularyType(dnn_Taxonomy_VocabularyType instance);
    partial void Insertdnn_UrlLog(dnn_UrlLog instance);
    partial void Updatednn_UrlLog(dnn_UrlLog instance);
    partial void Deletednn_UrlLog(dnn_UrlLog instance);
    partial void Insertdnn_Url(dnn_Url instance);
    partial void Updatednn_Url(dnn_Url instance);
    partial void Deletednn_Url(dnn_Url instance);
    partial void Insertdnn_UrlTracking(dnn_UrlTracking instance);
    partial void Updatednn_UrlTracking(dnn_UrlTracking instance);
    partial void Deletednn_UrlTracking(dnn_UrlTracking instance);
    partial void Insertdnn_UserAuthentication(dnn_UserAuthentication instance);
    partial void Updatednn_UserAuthentication(dnn_UserAuthentication instance);
    partial void Deletednn_UserAuthentication(dnn_UserAuthentication instance);
    partial void Insertdnn_UserPortal(dnn_UserPortal instance);
    partial void Updatednn_UserPortal(dnn_UserPortal instance);
    partial void Deletednn_UserPortal(dnn_UserPortal instance);
    partial void Insertdnn_UserProfile(dnn_UserProfile instance);
    partial void Updatednn_UserProfile(dnn_UserProfile instance);
    partial void Deletednn_UserProfile(dnn_UserProfile instance);
    partial void Insertdnn_UserRole(dnn_UserRole instance);
    partial void Updatednn_UserRole(dnn_UserRole instance);
    partial void Deletednn_UserRole(dnn_UserRole instance);
    partial void Insertdnn_User(dnn_User instance);
    partial void Updatednn_User(dnn_User instance);
    partial void Deletednn_User(dnn_User instance);
    partial void Insertdnn_UsersOnline(dnn_UsersOnline instance);
    partial void Updatednn_UsersOnline(dnn_UsersOnline instance);
    partial void Deletednn_UsersOnline(dnn_UsersOnline instance);
    partial void Insertdnn_VendorClassification(dnn_VendorClassification instance);
    partial void Updatednn_VendorClassification(dnn_VendorClassification instance);
    partial void Deletednn_VendorClassification(dnn_VendorClassification instance);
    partial void Insertdnn_Vendor(dnn_Vendor instance);
    partial void Updatednn_Vendor(dnn_Vendor instance);
    partial void Deletednn_Vendor(dnn_Vendor instance);
    partial void Insertdnn_Version(dnn_Version instance);
    partial void Updatednn_Version(dnn_Version instance);
    partial void Deletednn_Version(dnn_Version instance);
    partial void Insertdnn_WebServer(dnn_WebServer instance);
    partial void Updatednn_WebServer(dnn_WebServer instance);
    partial void Deletednn_WebServer(dnn_WebServer instance);
    partial void Insertdnn_Workflow(dnn_Workflow instance);
    partial void Updatednn_Workflow(dnn_Workflow instance);
    partial void Deletednn_Workflow(dnn_Workflow instance);
    #endregion
		
		public DNNDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNNDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNNDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNNDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<dnn_WorkflowState> dnn_WorkflowStates
		{
			get
			{
				return this.GetTable<dnn_WorkflowState>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Affiliate> dnn_Affiliates
		{
			get
			{
				return this.GetTable<dnn_Affiliate>();
			}
		}
		
		public System.Data.Linq.Table<dnn_AnonymousUser> dnn_AnonymousUsers
		{
			get
			{
				return this.GetTable<dnn_AnonymousUser>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Assembly> dnn_Assemblies
		{
			get
			{
				return this.GetTable<dnn_Assembly>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Authentication> dnn_Authentications
		{
			get
			{
				return this.GetTable<dnn_Authentication>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Banner> dnn_Banners
		{
			get
			{
				return this.GetTable<dnn_Banner>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Classification> dnn_Classifications
		{
			get
			{
				return this.GetTable<dnn_Classification>();
			}
		}
		
		public System.Data.Linq.Table<dnn_ContentItem> dnn_ContentItems
		{
			get
			{
				return this.GetTable<dnn_ContentItem>();
			}
		}
		
		public System.Data.Linq.Table<dnn_ContentItems_MetaData> dnn_ContentItems_MetaDatas
		{
			get
			{
				return this.GetTable<dnn_ContentItems_MetaData>();
			}
		}
		
		public System.Data.Linq.Table<dnn_ContentItems_Tag> dnn_ContentItems_Tags
		{
			get
			{
				return this.GetTable<dnn_ContentItems_Tag>();
			}
		}
		
		public System.Data.Linq.Table<dnn_ContentType> dnn_ContentTypes
		{
			get
			{
				return this.GetTable<dnn_ContentType>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Dashboard_Control> dnn_Dashboard_Controls
		{
			get
			{
				return this.GetTable<dnn_Dashboard_Control>();
			}
		}
		
		public System.Data.Linq.Table<dnn_DesktopModulePermission> dnn_DesktopModulePermissions
		{
			get
			{
				return this.GetTable<dnn_DesktopModulePermission>();
			}
		}
		
		public System.Data.Linq.Table<dnn_DesktopModule> dnn_DesktopModules
		{
			get
			{
				return this.GetTable<dnn_DesktopModule>();
			}
		}
		
		public System.Data.Linq.Table<dnn_EventLog> dnn_EventLogs
		{
			get
			{
				return this.GetTable<dnn_EventLog>();
			}
		}
		
		public System.Data.Linq.Table<dnn_EventLogConfig> dnn_EventLogConfigs
		{
			get
			{
				return this.GetTable<dnn_EventLogConfig>();
			}
		}
		
		public System.Data.Linq.Table<dnn_EventLogType> dnn_EventLogTypes
		{
			get
			{
				return this.GetTable<dnn_EventLogType>();
			}
		}
		
		public System.Data.Linq.Table<dnn_EventQueue> dnn_EventQueues
		{
			get
			{
				return this.GetTable<dnn_EventQueue>();
			}
		}
		
		public System.Data.Linq.Table<dnn_File> dnn_Files
		{
			get
			{
				return this.GetTable<dnn_File>();
			}
		}
		
		public System.Data.Linq.Table<dnn_FolderMapping> dnn_FolderMappings
		{
			get
			{
				return this.GetTable<dnn_FolderMapping>();
			}
		}
		
		public System.Data.Linq.Table<dnn_FolderMappingsSetting> dnn_FolderMappingsSettings
		{
			get
			{
				return this.GetTable<dnn_FolderMappingsSetting>();
			}
		}
		
		public System.Data.Linq.Table<dnn_FolderPermission> dnn_FolderPermissions
		{
			get
			{
				return this.GetTable<dnn_FolderPermission>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Folder> dnn_Folders
		{
			get
			{
				return this.GetTable<dnn_Folder>();
			}
		}
		
		public System.Data.Linq.Table<dnn_HostSetting> dnn_HostSettings
		{
			get
			{
				return this.GetTable<dnn_HostSetting>();
			}
		}
		
		public System.Data.Linq.Table<dnn_HtmlText> dnn_HtmlTexts
		{
			get
			{
				return this.GetTable<dnn_HtmlText>();
			}
		}
		
		public System.Data.Linq.Table<dnn_HtmlTextLog> dnn_HtmlTextLogs
		{
			get
			{
				return this.GetTable<dnn_HtmlTextLog>();
			}
		}
		
		public System.Data.Linq.Table<dnn_HtmlTextUser> dnn_HtmlTextUsers
		{
			get
			{
				return this.GetTable<dnn_HtmlTextUser>();
			}
		}
		
		public System.Data.Linq.Table<dnn_LanguagePack> dnn_LanguagePacks
		{
			get
			{
				return this.GetTable<dnn_LanguagePack>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Language> dnn_Languages
		{
			get
			{
				return this.GetTable<dnn_Language>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Link> dnn_Links
		{
			get
			{
				return this.GetTable<dnn_Link>();
			}
		}
		
		public System.Data.Linq.Table<dnn_List> dnn_Lists
		{
			get
			{
				return this.GetTable<dnn_List>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Messaging_Message> dnn_Messaging_Messages
		{
			get
			{
				return this.GetTable<dnn_Messaging_Message>();
			}
		}
		
		public System.Data.Linq.Table<dnn_MetaData> dnn_MetaDatas
		{
			get
			{
				return this.GetTable<dnn_MetaData>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Mobile_PreviewProfile> dnn_Mobile_PreviewProfiles
		{
			get
			{
				return this.GetTable<dnn_Mobile_PreviewProfile>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Mobile_RedirectionRule> dnn_Mobile_RedirectionRules
		{
			get
			{
				return this.GetTable<dnn_Mobile_RedirectionRule>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Mobile_Redirection> dnn_Mobile_Redirections
		{
			get
			{
				return this.GetTable<dnn_Mobile_Redirection>();
			}
		}
		
		public System.Data.Linq.Table<dnn_ModuleControl> dnn_ModuleControls
		{
			get
			{
				return this.GetTable<dnn_ModuleControl>();
			}
		}
		
		public System.Data.Linq.Table<dnn_ModuleDefinition> dnn_ModuleDefinitions
		{
			get
			{
				return this.GetTable<dnn_ModuleDefinition>();
			}
		}
		
		public System.Data.Linq.Table<dnn_ModulePermission> dnn_ModulePermissions
		{
			get
			{
				return this.GetTable<dnn_ModulePermission>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Module> dnn_Modules
		{
			get
			{
				return this.GetTable<dnn_Module>();
			}
		}
		
		public System.Data.Linq.Table<dnn_ModuleSetting> dnn_ModuleSettings
		{
			get
			{
				return this.GetTable<dnn_ModuleSetting>();
			}
		}
		
		public System.Data.Linq.Table<dnn_MySite_Article> dnn_MySite_Articles
		{
			get
			{
				return this.GetTable<dnn_MySite_Article>();
			}
		}
		
		public System.Data.Linq.Table<dnn_NewNews_Article> dnn_NewNews_Articles
		{
			get
			{
				return this.GetTable<dnn_NewNews_Article>();
			}
		}
		
		public System.Data.Linq.Table<dnn_NewNews_Category> dnn_NewNews_Categories
		{
			get
			{
				return this.GetTable<dnn_NewNews_Category>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Package> dnn_Packages
		{
			get
			{
				return this.GetTable<dnn_Package>();
			}
		}
		
		public System.Data.Linq.Table<dnn_PackageType> dnn_PackageTypes
		{
			get
			{
				return this.GetTable<dnn_PackageType>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Permission> dnn_Permissions
		{
			get
			{
				return this.GetTable<dnn_Permission>();
			}
		}
		
		public System.Data.Linq.Table<dnn_PortalAlia> dnn_PortalAlias
		{
			get
			{
				return this.GetTable<dnn_PortalAlia>();
			}
		}
		
		public System.Data.Linq.Table<dnn_PortalDesktopModule> dnn_PortalDesktopModules
		{
			get
			{
				return this.GetTable<dnn_PortalDesktopModule>();
			}
		}
		
		public System.Data.Linq.Table<dnn_PortalGroup> dnn_PortalGroups
		{
			get
			{
				return this.GetTable<dnn_PortalGroup>();
			}
		}
		
		public System.Data.Linq.Table<dnn_PortalLanguage> dnn_PortalLanguages
		{
			get
			{
				return this.GetTable<dnn_PortalLanguage>();
			}
		}
		
		public System.Data.Linq.Table<dnn_PortalLocalization> dnn_PortalLocalizations
		{
			get
			{
				return this.GetTable<dnn_PortalLocalization>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Portal> dnn_Portals
		{
			get
			{
				return this.GetTable<dnn_Portal>();
			}
		}
		
		public System.Data.Linq.Table<dnn_PortalSetting> dnn_PortalSettings
		{
			get
			{
				return this.GetTable<dnn_PortalSetting>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Profile> dnn_Profiles
		{
			get
			{
				return this.GetTable<dnn_Profile>();
			}
		}
		
		public System.Data.Linq.Table<dnn_ProfilePropertyDefinition> dnn_ProfilePropertyDefinitions
		{
			get
			{
				return this.GetTable<dnn_ProfilePropertyDefinition>();
			}
		}
		
		public System.Data.Linq.Table<dnn_RoleGroup> dnn_RoleGroups
		{
			get
			{
				return this.GetTable<dnn_RoleGroup>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Role> dnn_Roles
		{
			get
			{
				return this.GetTable<dnn_Role>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Schedule> dnn_Schedules
		{
			get
			{
				return this.GetTable<dnn_Schedule>();
			}
		}
		
		public System.Data.Linq.Table<dnn_ScheduleHistory> dnn_ScheduleHistories
		{
			get
			{
				return this.GetTable<dnn_ScheduleHistory>();
			}
		}
		
		public System.Data.Linq.Table<dnn_ScheduleItemSetting> dnn_ScheduleItemSettings
		{
			get
			{
				return this.GetTable<dnn_ScheduleItemSetting>();
			}
		}
		
		public System.Data.Linq.Table<dnn_SearchCommonWord> dnn_SearchCommonWords
		{
			get
			{
				return this.GetTable<dnn_SearchCommonWord>();
			}
		}
		
		public System.Data.Linq.Table<dnn_SearchIndexer> dnn_SearchIndexers
		{
			get
			{
				return this.GetTable<dnn_SearchIndexer>();
			}
		}
		
		public System.Data.Linq.Table<dnn_SearchItem> dnn_SearchItems
		{
			get
			{
				return this.GetTable<dnn_SearchItem>();
			}
		}
		
		public System.Data.Linq.Table<dnn_SearchItemWord> dnn_SearchItemWords
		{
			get
			{
				return this.GetTable<dnn_SearchItemWord>();
			}
		}
		
		public System.Data.Linq.Table<dnn_SearchItemWordPosition> dnn_SearchItemWordPositions
		{
			get
			{
				return this.GetTable<dnn_SearchItemWordPosition>();
			}
		}
		
		public System.Data.Linq.Table<dnn_SearchWord> dnn_SearchWords
		{
			get
			{
				return this.GetTable<dnn_SearchWord>();
			}
		}
		
		public System.Data.Linq.Table<dnn_SiteLog> dnn_SiteLogs
		{
			get
			{
				return this.GetTable<dnn_SiteLog>();
			}
		}
		
		public System.Data.Linq.Table<dnn_SkinControl> dnn_SkinControls
		{
			get
			{
				return this.GetTable<dnn_SkinControl>();
			}
		}
		
		public System.Data.Linq.Table<dnn_SkinPackage> dnn_SkinPackages
		{
			get
			{
				return this.GetTable<dnn_SkinPackage>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Skin> dnn_Skins
		{
			get
			{
				return this.GetTable<dnn_Skin>();
			}
		}
		
		public System.Data.Linq.Table<dnn_SystemMessage> dnn_SystemMessages
		{
			get
			{
				return this.GetTable<dnn_SystemMessage>();
			}
		}
		
		public System.Data.Linq.Table<dnn_TabModule> dnn_TabModules
		{
			get
			{
				return this.GetTable<dnn_TabModule>();
			}
		}
		
		public System.Data.Linq.Table<dnn_TabModuleSetting> dnn_TabModuleSettings
		{
			get
			{
				return this.GetTable<dnn_TabModuleSetting>();
			}
		}
		
		public System.Data.Linq.Table<dnn_TabPermission> dnn_TabPermissions
		{
			get
			{
				return this.GetTable<dnn_TabPermission>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Tab> dnn_Tabs
		{
			get
			{
				return this.GetTable<dnn_Tab>();
			}
		}
		
		public System.Data.Linq.Table<dnn_TabSetting> dnn_TabSettings
		{
			get
			{
				return this.GetTable<dnn_TabSetting>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Taxonomy_ScopeType> dnn_Taxonomy_ScopeTypes
		{
			get
			{
				return this.GetTable<dnn_Taxonomy_ScopeType>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Taxonomy_Term> dnn_Taxonomy_Terms
		{
			get
			{
				return this.GetTable<dnn_Taxonomy_Term>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Taxonomy_Vocabulary> dnn_Taxonomy_Vocabularies
		{
			get
			{
				return this.GetTable<dnn_Taxonomy_Vocabulary>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Taxonomy_VocabularyType> dnn_Taxonomy_VocabularyTypes
		{
			get
			{
				return this.GetTable<dnn_Taxonomy_VocabularyType>();
			}
		}
		
		public System.Data.Linq.Table<dnn_UrlLog> dnn_UrlLogs
		{
			get
			{
				return this.GetTable<dnn_UrlLog>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Url> dnn_Urls
		{
			get
			{
				return this.GetTable<dnn_Url>();
			}
		}
		
		public System.Data.Linq.Table<dnn_UrlTracking> dnn_UrlTrackings
		{
			get
			{
				return this.GetTable<dnn_UrlTracking>();
			}
		}
		
		public System.Data.Linq.Table<dnn_UserAuthentication> dnn_UserAuthentications
		{
			get
			{
				return this.GetTable<dnn_UserAuthentication>();
			}
		}
		
		public System.Data.Linq.Table<dnn_UserPortal> dnn_UserPortals
		{
			get
			{
				return this.GetTable<dnn_UserPortal>();
			}
		}
		
		public System.Data.Linq.Table<dnn_UserProfile> dnn_UserProfiles
		{
			get
			{
				return this.GetTable<dnn_UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<dnn_UserRole> dnn_UserRoles
		{
			get
			{
				return this.GetTable<dnn_UserRole>();
			}
		}
		
		public System.Data.Linq.Table<dnn_User> dnn_Users
		{
			get
			{
				return this.GetTable<dnn_User>();
			}
		}
		
		public System.Data.Linq.Table<dnn_UsersOnline> dnn_UsersOnlines
		{
			get
			{
				return this.GetTable<dnn_UsersOnline>();
			}
		}
		
		public System.Data.Linq.Table<dnn_VendorClassification> dnn_VendorClassifications
		{
			get
			{
				return this.GetTable<dnn_VendorClassification>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Vendor> dnn_Vendors
		{
			get
			{
				return this.GetTable<dnn_Vendor>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Version> dnn_Versions
		{
			get
			{
				return this.GetTable<dnn_Version>();
			}
		}
		
		public System.Data.Linq.Table<dnn_WebServer> dnn_WebServers
		{
			get
			{
				return this.GetTable<dnn_WebServer>();
			}
		}
		
		public System.Data.Linq.Table<dnn_Workflow> dnn_Workflows
		{
			get
			{
				return this.GetTable<dnn_Workflow>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_WorkflowStates")]
	public partial class dnn_WorkflowState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateID;
		
		private int _WorkflowID;
		
		private string _StateName;
		
		private int _Order;
		
		private bool _IsActive;
		
		private bool _Notify;
		
		private EntitySet<dnn_HtmlText> _dnn_HtmlTexts;
		
		private EntitySet<dnn_HtmlTextLog> _dnn_HtmlTextLogs;
		
		private EntityRef<dnn_Workflow> _dnn_Workflow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnWorkflowIDChanging(int value);
    partial void OnWorkflowIDChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnNotifyChanging(bool value);
    partial void OnNotifyChanged();
    #endregion
		
		public dnn_WorkflowState()
		{
			this._dnn_HtmlTexts = new EntitySet<dnn_HtmlText>(new Action<dnn_HtmlText>(this.attach_dnn_HtmlTexts), new Action<dnn_HtmlText>(this.detach_dnn_HtmlTexts));
			this._dnn_HtmlTextLogs = new EntitySet<dnn_HtmlTextLog>(new Action<dnn_HtmlTextLog>(this.attach_dnn_HtmlTextLogs), new Action<dnn_HtmlTextLog>(this.detach_dnn_HtmlTextLogs));
			this._dnn_Workflow = default(EntityRef<dnn_Workflow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowID", DbType="Int NOT NULL")]
		public int WorkflowID
		{
			get
			{
				return this._WorkflowID;
			}
			set
			{
				if ((this._WorkflowID != value))
				{
					if (this._dnn_Workflow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowIDChanging(value);
					this.SendPropertyChanging();
					this._WorkflowID = value;
					this.SendPropertyChanged("WorkflowID");
					this.OnWorkflowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notify", DbType="Bit NOT NULL")]
		public bool Notify
		{
			get
			{
				return this._Notify;
			}
			set
			{
				if ((this._Notify != value))
				{
					this.OnNotifyChanging(value);
					this.SendPropertyChanging();
					this._Notify = value;
					this.SendPropertyChanged("Notify");
					this.OnNotifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_WorkflowState_dnn_HtmlText", Storage="_dnn_HtmlTexts", ThisKey="StateID", OtherKey="StateID")]
		public EntitySet<dnn_HtmlText> dnn_HtmlTexts
		{
			get
			{
				return this._dnn_HtmlTexts;
			}
			set
			{
				this._dnn_HtmlTexts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_WorkflowState_dnn_HtmlTextLog", Storage="_dnn_HtmlTextLogs", ThisKey="StateID", OtherKey="StateID")]
		public EntitySet<dnn_HtmlTextLog> dnn_HtmlTextLogs
		{
			get
			{
				return this._dnn_HtmlTextLogs;
			}
			set
			{
				this._dnn_HtmlTextLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Workflow_dnn_WorkflowState", Storage="_dnn_Workflow", ThisKey="WorkflowID", OtherKey="WorkflowID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Workflow dnn_Workflow
		{
			get
			{
				return this._dnn_Workflow.Entity;
			}
			set
			{
				dnn_Workflow previousValue = this._dnn_Workflow.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Workflow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Workflow.Entity = null;
						previousValue.dnn_WorkflowStates.Remove(this);
					}
					this._dnn_Workflow.Entity = value;
					if ((value != null))
					{
						value.dnn_WorkflowStates.Add(this);
						this._WorkflowID = value.WorkflowID;
					}
					else
					{
						this._WorkflowID = default(int);
					}
					this.SendPropertyChanged("dnn_Workflow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_HtmlTexts(dnn_HtmlText entity)
		{
			this.SendPropertyChanging();
			entity.dnn_WorkflowState = this;
		}
		
		private void detach_dnn_HtmlTexts(dnn_HtmlText entity)
		{
			this.SendPropertyChanging();
			entity.dnn_WorkflowState = null;
		}
		
		private void attach_dnn_HtmlTextLogs(dnn_HtmlTextLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_WorkflowState = this;
		}
		
		private void detach_dnn_HtmlTextLogs(dnn_HtmlTextLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_WorkflowState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Affiliates")]
	public partial class dnn_Affiliate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AffiliateId;
		
		private System.Nullable<int> _VendorId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private double _CPC;
		
		private int _Clicks;
		
		private double _CPA;
		
		private int _Acquisitions;
		
		private EntityRef<dnn_Vendor> _dnn_Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAffiliateIdChanging(int value);
    partial void OnAffiliateIdChanged();
    partial void OnVendorIdChanging(System.Nullable<int> value);
    partial void OnVendorIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCPCChanging(double value);
    partial void OnCPCChanged();
    partial void OnClicksChanging(int value);
    partial void OnClicksChanged();
    partial void OnCPAChanging(double value);
    partial void OnCPAChanged();
    partial void OnAcquisitionsChanging(int value);
    partial void OnAcquisitionsChanged();
    #endregion
		
		public dnn_Affiliate()
		{
			this._dnn_Vendor = default(EntityRef<dnn_Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", DbType="Int")]
		public System.Nullable<int> VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					if (this._dnn_Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPC", DbType="Float NOT NULL")]
		public double CPC
		{
			get
			{
				return this._CPC;
			}
			set
			{
				if ((this._CPC != value))
				{
					this.OnCPCChanging(value);
					this.SendPropertyChanging();
					this._CPC = value;
					this.SendPropertyChanged("CPC");
					this.OnCPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clicks", DbType="Int NOT NULL")]
		public int Clicks
		{
			get
			{
				return this._Clicks;
			}
			set
			{
				if ((this._Clicks != value))
				{
					this.OnClicksChanging(value);
					this.SendPropertyChanging();
					this._Clicks = value;
					this.SendPropertyChanged("Clicks");
					this.OnClicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPA", DbType="Float NOT NULL")]
		public double CPA
		{
			get
			{
				return this._CPA;
			}
			set
			{
				if ((this._CPA != value))
				{
					this.OnCPAChanging(value);
					this.SendPropertyChanging();
					this._CPA = value;
					this.SendPropertyChanged("CPA");
					this.OnCPAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acquisitions", DbType="Int NOT NULL")]
		public int Acquisitions
		{
			get
			{
				return this._Acquisitions;
			}
			set
			{
				if ((this._Acquisitions != value))
				{
					this.OnAcquisitionsChanging(value);
					this.SendPropertyChanging();
					this._Acquisitions = value;
					this.SendPropertyChanged("Acquisitions");
					this.OnAcquisitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Vendor_dnn_Affiliate", Storage="_dnn_Vendor", ThisKey="VendorId", OtherKey="VendorId", IsForeignKey=true, DeleteRule="CASCADE")]
		public dnn_Vendor dnn_Vendor
		{
			get
			{
				return this._dnn_Vendor.Entity;
			}
			set
			{
				dnn_Vendor previousValue = this._dnn_Vendor.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Vendor.Entity = null;
						previousValue.dnn_Affiliates.Remove(this);
					}
					this._dnn_Vendor.Entity = value;
					if ((value != null))
					{
						value.dnn_Affiliates.Add(this);
						this._VendorId = value.VendorId;
					}
					else
					{
						this._VendorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_AnonymousUsers")]
	public partial class dnn_AnonymousUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private int _PortalID;
		
		private int _TabID;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _LastActiveDate;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnLastActiveDateChanging(System.DateTime value);
    partial void OnLastActiveDateChanged();
    #endregion
		
		public dnn_AnonymousUser()
		{
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActiveDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActiveDate
		{
			get
			{
				return this._LastActiveDate;
			}
			set
			{
				if ((this._LastActiveDate != value))
				{
					this.OnLastActiveDateChanging(value);
					this.SendPropertyChanging();
					this._LastActiveDate = value;
					this.SendPropertyChanged("LastActiveDate");
					this.OnLastActiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_AnonymousUser", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_AnonymousUsers.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_AnonymousUsers.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Assemblies")]
	public partial class dnn_Assembly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssemblyID;
		
		private int _PackageID;
		
		private string _AssemblyName;
		
		private string _Version;
		
		private EntityRef<dnn_Package> _dnn_Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssemblyIDChanging(int value);
    partial void OnAssemblyIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    #endregion
		
		public dnn_Assembly()
		{
			this._dnn_Package = default(EntityRef<dnn_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AssemblyID
		{
			get
			{
				return this._AssemblyID;
			}
			set
			{
				if ((this._AssemblyID != value))
				{
					this.OnAssemblyIDChanging(value);
					this.SendPropertyChanging();
					this._AssemblyID = value;
					this.SendPropertyChanged("AssemblyID");
					this.OnAssemblyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._dnn_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this.OnAssemblyNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyName = value;
					this.SendPropertyChanged("AssemblyName");
					this.OnAssemblyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_Assembly", Storage="_dnn_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Package dnn_Package
		{
			get
			{
				return this._dnn_Package.Entity;
			}
			set
			{
				dnn_Package previousValue = this._dnn_Package.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Package.Entity = null;
						previousValue.dnn_Assemblies.Remove(this);
					}
					this._dnn_Package.Entity = value;
					if ((value != null))
					{
						value.dnn_Assemblies.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("dnn_Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Authentication")]
	public partial class dnn_Authentication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthenticationID;
		
		private int _PackageID;
		
		private string _AuthenticationType;
		
		private bool _IsEnabled;
		
		private string _SettingsControlSrc;
		
		private string _LoginControlSrc;
		
		private string _LogoffControlSrc;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_Package> _dnn_Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthenticationIDChanging(int value);
    partial void OnAuthenticationIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnAuthenticationTypeChanging(string value);
    partial void OnAuthenticationTypeChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnSettingsControlSrcChanging(string value);
    partial void OnSettingsControlSrcChanged();
    partial void OnLoginControlSrcChanging(string value);
    partial void OnLoginControlSrcChanged();
    partial void OnLogoffControlSrcChanging(string value);
    partial void OnLogoffControlSrcChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_Authentication()
		{
			this._dnn_Package = default(EntityRef<dnn_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuthenticationID
		{
			get
			{
				return this._AuthenticationID;
			}
			set
			{
				if ((this._AuthenticationID != value))
				{
					this.OnAuthenticationIDChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationID = value;
					this.SendPropertyChanged("AuthenticationID");
					this.OnAuthenticationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._dnn_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AuthenticationType
		{
			get
			{
				return this._AuthenticationType;
			}
			set
			{
				if ((this._AuthenticationType != value))
				{
					this.OnAuthenticationTypeChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationType = value;
					this.SendPropertyChanged("AuthenticationType");
					this.OnAuthenticationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingsControlSrc", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SettingsControlSrc
		{
			get
			{
				return this._SettingsControlSrc;
			}
			set
			{
				if ((this._SettingsControlSrc != value))
				{
					this.OnSettingsControlSrcChanging(value);
					this.SendPropertyChanging();
					this._SettingsControlSrc = value;
					this.SendPropertyChanged("SettingsControlSrc");
					this.OnSettingsControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginControlSrc", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string LoginControlSrc
		{
			get
			{
				return this._LoginControlSrc;
			}
			set
			{
				if ((this._LoginControlSrc != value))
				{
					this.OnLoginControlSrcChanging(value);
					this.SendPropertyChanging();
					this._LoginControlSrc = value;
					this.SendPropertyChanged("LoginControlSrc");
					this.OnLoginControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoffControlSrc", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string LogoffControlSrc
		{
			get
			{
				return this._LogoffControlSrc;
			}
			set
			{
				if ((this._LogoffControlSrc != value))
				{
					this.OnLogoffControlSrcChanging(value);
					this.SendPropertyChanging();
					this._LogoffControlSrc = value;
					this.SendPropertyChanged("LogoffControlSrc");
					this.OnLogoffControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_Authentication", Storage="_dnn_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Package dnn_Package
		{
			get
			{
				return this._dnn_Package.Entity;
			}
			set
			{
				dnn_Package previousValue = this._dnn_Package.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Package.Entity = null;
						previousValue.dnn_Authentications.Remove(this);
					}
					this._dnn_Package.Entity = value;
					if ((value != null))
					{
						value.dnn_Authentications.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("dnn_Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Banners")]
	public partial class dnn_Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BannerId;
		
		private int _VendorId;
		
		private string _ImageFile;
		
		private string _BannerName;
		
		private int _Impressions;
		
		private double _CPM;
		
		private int _Views;
		
		private int _ClickThroughs;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _CreatedByUser;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _BannerTypeId;
		
		private string _Description;
		
		private string _GroupName;
		
		private bool _Criteria;
		
		private string _URL;
		
		private int _Width;
		
		private int _Height;
		
		private EntityRef<dnn_Vendor> _dnn_Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBannerIdChanging(int value);
    partial void OnBannerIdChanged();
    partial void OnVendorIdChanging(int value);
    partial void OnVendorIdChanged();
    partial void OnImageFileChanging(string value);
    partial void OnImageFileChanged();
    partial void OnBannerNameChanging(string value);
    partial void OnBannerNameChanged();
    partial void OnImpressionsChanging(int value);
    partial void OnImpressionsChanged();
    partial void OnCPMChanging(double value);
    partial void OnCPMChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnClickThroughsChanging(int value);
    partial void OnClickThroughsChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnBannerTypeIdChanging(System.Nullable<int> value);
    partial void OnBannerTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnCriteriaChanging(bool value);
    partial void OnCriteriaChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    #endregion
		
		public dnn_Banner()
		{
			this._dnn_Vendor = default(EntityRef<dnn_Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BannerId
		{
			get
			{
				return this._BannerId;
			}
			set
			{
				if ((this._BannerId != value))
				{
					this.OnBannerIdChanging(value);
					this.SendPropertyChanging();
					this._BannerId = value;
					this.SendPropertyChanged("BannerId");
					this.OnBannerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", DbType="Int NOT NULL")]
		public int VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					if (this._dnn_Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="NVarChar(100)")]
		public string ImageFile
		{
			get
			{
				return this._ImageFile;
			}
			set
			{
				if ((this._ImageFile != value))
				{
					this.OnImageFileChanging(value);
					this.SendPropertyChanging();
					this._ImageFile = value;
					this.SendPropertyChanged("ImageFile");
					this.OnImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BannerName
		{
			get
			{
				return this._BannerName;
			}
			set
			{
				if ((this._BannerName != value))
				{
					this.OnBannerNameChanging(value);
					this.SendPropertyChanging();
					this._BannerName = value;
					this.SendPropertyChanged("BannerName");
					this.OnBannerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Impressions", DbType="Int NOT NULL")]
		public int Impressions
		{
			get
			{
				return this._Impressions;
			}
			set
			{
				if ((this._Impressions != value))
				{
					this.OnImpressionsChanging(value);
					this.SendPropertyChanging();
					this._Impressions = value;
					this.SendPropertyChanged("Impressions");
					this.OnImpressionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPM", DbType="Float NOT NULL")]
		public double CPM
		{
			get
			{
				return this._CPM;
			}
			set
			{
				if ((this._CPM != value))
				{
					this.OnCPMChanging(value);
					this.SendPropertyChanging();
					this._CPM = value;
					this.SendPropertyChanged("CPM");
					this.OnCPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int NOT NULL")]
		public int Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickThroughs", DbType="Int NOT NULL")]
		public int ClickThroughs
		{
			get
			{
				return this._ClickThroughs;
			}
			set
			{
				if ((this._ClickThroughs != value))
				{
					this.OnClickThroughsChanging(value);
					this.SendPropertyChanging();
					this._ClickThroughs = value;
					this.SendPropertyChanged("ClickThroughs");
					this.OnClickThroughsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerTypeId", DbType="Int")]
		public System.Nullable<int> BannerTypeId
		{
			get
			{
				return this._BannerTypeId;
			}
			set
			{
				if ((this._BannerTypeId != value))
				{
					this.OnBannerTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BannerTypeId = value;
					this.SendPropertyChanged("BannerTypeId");
					this.OnBannerTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(100)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criteria", DbType="Bit NOT NULL")]
		public bool Criteria
		{
			get
			{
				return this._Criteria;
			}
			set
			{
				if ((this._Criteria != value))
				{
					this.OnCriteriaChanging(value);
					this.SendPropertyChanging();
					this._Criteria = value;
					this.SendPropertyChanged("Criteria");
					this.OnCriteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(255)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Vendor_dnn_Banner", Storage="_dnn_Vendor", ThisKey="VendorId", OtherKey="VendorId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Vendor dnn_Vendor
		{
			get
			{
				return this._dnn_Vendor.Entity;
			}
			set
			{
				dnn_Vendor previousValue = this._dnn_Vendor.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Vendor.Entity = null;
						previousValue.dnn_Banners.Remove(this);
					}
					this._dnn_Vendor.Entity = value;
					if ((value != null))
					{
						value.dnn_Banners.Add(this);
						this._VendorId = value.VendorId;
					}
					else
					{
						this._VendorId = default(int);
					}
					this.SendPropertyChanged("dnn_Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Classification")]
	public partial class dnn_Classification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassificationId;
		
		private string _ClassificationName;
		
		private System.Nullable<int> _ParentId;
		
		private EntitySet<dnn_Classification> _dnn_Classifications;
		
		private EntitySet<dnn_VendorClassification> _dnn_VendorClassifications;
		
		private EntityRef<dnn_Classification> _dnn_Classification1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassificationIdChanging(int value);
    partial void OnClassificationIdChanged();
    partial void OnClassificationNameChanging(string value);
    partial void OnClassificationNameChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    #endregion
		
		public dnn_Classification()
		{
			this._dnn_Classifications = new EntitySet<dnn_Classification>(new Action<dnn_Classification>(this.attach_dnn_Classifications), new Action<dnn_Classification>(this.detach_dnn_Classifications));
			this._dnn_VendorClassifications = new EntitySet<dnn_VendorClassification>(new Action<dnn_VendorClassification>(this.attach_dnn_VendorClassifications), new Action<dnn_VendorClassification>(this.detach_dnn_VendorClassifications));
			this._dnn_Classification1 = default(EntityRef<dnn_Classification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassificationId
		{
			get
			{
				return this._ClassificationId;
			}
			set
			{
				if ((this._ClassificationId != value))
				{
					this.OnClassificationIdChanging(value);
					this.SendPropertyChanging();
					this._ClassificationId = value;
					this.SendPropertyChanged("ClassificationId");
					this.OnClassificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassificationName
		{
			get
			{
				return this._ClassificationName;
			}
			set
			{
				if ((this._ClassificationName != value))
				{
					this.OnClassificationNameChanging(value);
					this.SendPropertyChanging();
					this._ClassificationName = value;
					this.SendPropertyChanged("ClassificationName");
					this.OnClassificationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._dnn_Classification1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Classification_dnn_Classification", Storage="_dnn_Classifications", ThisKey="ClassificationId", OtherKey="ParentId")]
		public EntitySet<dnn_Classification> dnn_Classifications
		{
			get
			{
				return this._dnn_Classifications;
			}
			set
			{
				this._dnn_Classifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Classification_dnn_VendorClassification", Storage="_dnn_VendorClassifications", ThisKey="ClassificationId", OtherKey="ClassificationId")]
		public EntitySet<dnn_VendorClassification> dnn_VendorClassifications
		{
			get
			{
				return this._dnn_VendorClassifications;
			}
			set
			{
				this._dnn_VendorClassifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Classification_dnn_Classification", Storage="_dnn_Classification1", ThisKey="ParentId", OtherKey="ClassificationId", IsForeignKey=true)]
		public dnn_Classification dnn_Classification1
		{
			get
			{
				return this._dnn_Classification1.Entity;
			}
			set
			{
				dnn_Classification previousValue = this._dnn_Classification1.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Classification1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Classification1.Entity = null;
						previousValue.dnn_Classifications.Remove(this);
					}
					this._dnn_Classification1.Entity = value;
					if ((value != null))
					{
						value.dnn_Classifications.Add(this);
						this._ParentId = value.ClassificationId;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Classification1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_Classifications(dnn_Classification entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Classification1 = this;
		}
		
		private void detach_dnn_Classifications(dnn_Classification entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Classification1 = null;
		}
		
		private void attach_dnn_VendorClassifications(dnn_VendorClassification entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Classification = this;
		}
		
		private void detach_dnn_VendorClassifications(dnn_VendorClassification entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Classification = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_ContentItems")]
	public partial class dnn_ContentItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentItemID;
		
		private string _Content;
		
		private int _ContentTypeID;
		
		private int _TabID;
		
		private int _ModuleID;
		
		private string _ContentKey;
		
		private bool _Indexed;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn_ContentItems_MetaData> _dnn_ContentItems_MetaDatas;
		
		private EntitySet<dnn_ContentItems_Tag> _dnn_ContentItems_Tags;
		
		private EntitySet<dnn_Module> _dnn_Modules;
		
		private EntitySet<dnn_Tab> _dnn_Tabs;
		
		private EntityRef<dnn_ContentType> _dnn_ContentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentItemIDChanging(int value);
    partial void OnContentItemIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnContentTypeIDChanging(int value);
    partial void OnContentTypeIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnContentKeyChanging(string value);
    partial void OnContentKeyChanged();
    partial void OnIndexedChanging(bool value);
    partial void OnIndexedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_ContentItem()
		{
			this._dnn_ContentItems_MetaDatas = new EntitySet<dnn_ContentItems_MetaData>(new Action<dnn_ContentItems_MetaData>(this.attach_dnn_ContentItems_MetaDatas), new Action<dnn_ContentItems_MetaData>(this.detach_dnn_ContentItems_MetaDatas));
			this._dnn_ContentItems_Tags = new EntitySet<dnn_ContentItems_Tag>(new Action<dnn_ContentItems_Tag>(this.attach_dnn_ContentItems_Tags), new Action<dnn_ContentItems_Tag>(this.detach_dnn_ContentItems_Tags));
			this._dnn_Modules = new EntitySet<dnn_Module>(new Action<dnn_Module>(this.attach_dnn_Modules), new Action<dnn_Module>(this.detach_dnn_Modules));
			this._dnn_Tabs = new EntitySet<dnn_Tab>(new Action<dnn_Tab>(this.attach_dnn_Tabs), new Action<dnn_Tab>(this.detach_dnn_Tabs));
			this._dnn_ContentType = default(EntityRef<dnn_ContentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentTypeID", DbType="Int NOT NULL")]
		public int ContentTypeID
		{
			get
			{
				return this._ContentTypeID;
			}
			set
			{
				if ((this._ContentTypeID != value))
				{
					if (this._dnn_ContentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContentTypeID = value;
					this.SendPropertyChanged("ContentTypeID");
					this.OnContentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentKey", DbType="NVarChar(250)")]
		public string ContentKey
		{
			get
			{
				return this._ContentKey;
			}
			set
			{
				if ((this._ContentKey != value))
				{
					this.OnContentKeyChanging(value);
					this.SendPropertyChanging();
					this._ContentKey = value;
					this.SendPropertyChanged("ContentKey");
					this.OnContentKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indexed", DbType="Bit NOT NULL")]
		public bool Indexed
		{
			get
			{
				return this._Indexed;
			}
			set
			{
				if ((this._Indexed != value))
				{
					this.OnIndexedChanging(value);
					this.SendPropertyChanging();
					this._Indexed = value;
					this.SendPropertyChanged("Indexed");
					this.OnIndexedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ContentItem_dnn_ContentItems_MetaData", Storage="_dnn_ContentItems_MetaDatas", ThisKey="ContentItemID", OtherKey="ContentItemID")]
		public EntitySet<dnn_ContentItems_MetaData> dnn_ContentItems_MetaDatas
		{
			get
			{
				return this._dnn_ContentItems_MetaDatas;
			}
			set
			{
				this._dnn_ContentItems_MetaDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ContentItem_dnn_ContentItems_Tag", Storage="_dnn_ContentItems_Tags", ThisKey="ContentItemID", OtherKey="ContentItemID")]
		public EntitySet<dnn_ContentItems_Tag> dnn_ContentItems_Tags
		{
			get
			{
				return this._dnn_ContentItems_Tags;
			}
			set
			{
				this._dnn_ContentItems_Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ContentItem_dnn_Module", Storage="_dnn_Modules", ThisKey="ContentItemID", OtherKey="ContentItemID")]
		public EntitySet<dnn_Module> dnn_Modules
		{
			get
			{
				return this._dnn_Modules;
			}
			set
			{
				this._dnn_Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ContentItem_dnn_Tab", Storage="_dnn_Tabs", ThisKey="ContentItemID", OtherKey="ContentItemID")]
		public EntitySet<dnn_Tab> dnn_Tabs
		{
			get
			{
				return this._dnn_Tabs;
			}
			set
			{
				this._dnn_Tabs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ContentType_dnn_ContentItem", Storage="_dnn_ContentType", ThisKey="ContentTypeID", OtherKey="ContentTypeID", IsForeignKey=true)]
		public dnn_ContentType dnn_ContentType
		{
			get
			{
				return this._dnn_ContentType.Entity;
			}
			set
			{
				dnn_ContentType previousValue = this._dnn_ContentType.Entity;
				if (((previousValue != value) 
							|| (this._dnn_ContentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_ContentType.Entity = null;
						previousValue.dnn_ContentItems.Remove(this);
					}
					this._dnn_ContentType.Entity = value;
					if ((value != null))
					{
						value.dnn_ContentItems.Add(this);
						this._ContentTypeID = value.ContentTypeID;
					}
					else
					{
						this._ContentTypeID = default(int);
					}
					this.SendPropertyChanged("dnn_ContentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_ContentItems_MetaDatas(dnn_ContentItems_MetaData entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ContentItem = this;
		}
		
		private void detach_dnn_ContentItems_MetaDatas(dnn_ContentItems_MetaData entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ContentItem = null;
		}
		
		private void attach_dnn_ContentItems_Tags(dnn_ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ContentItem = this;
		}
		
		private void detach_dnn_ContentItems_Tags(dnn_ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ContentItem = null;
		}
		
		private void attach_dnn_Modules(dnn_Module entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ContentItem = this;
		}
		
		private void detach_dnn_Modules(dnn_Module entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ContentItem = null;
		}
		
		private void attach_dnn_Tabs(dnn_Tab entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ContentItem = this;
		}
		
		private void detach_dnn_Tabs(dnn_Tab entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ContentItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_ContentItems_MetaData")]
	public partial class dnn_ContentItems_MetaData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentItemMetaDataID;
		
		private int _ContentItemID;
		
		private int _MetaDataID;
		
		private string _MetaDataValue;
		
		private EntityRef<dnn_ContentItem> _dnn_ContentItem;
		
		private EntityRef<dnn_MetaData> _dnn_MetaData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentItemMetaDataIDChanging(int value);
    partial void OnContentItemMetaDataIDChanged();
    partial void OnContentItemIDChanging(int value);
    partial void OnContentItemIDChanged();
    partial void OnMetaDataIDChanging(int value);
    partial void OnMetaDataIDChanged();
    partial void OnMetaDataValueChanging(string value);
    partial void OnMetaDataValueChanged();
    #endregion
		
		public dnn_ContentItems_MetaData()
		{
			this._dnn_ContentItem = default(EntityRef<dnn_ContentItem>);
			this._dnn_MetaData = default(EntityRef<dnn_MetaData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemMetaDataID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentItemMetaDataID
		{
			get
			{
				return this._ContentItemMetaDataID;
			}
			set
			{
				if ((this._ContentItemMetaDataID != value))
				{
					this.OnContentItemMetaDataIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemMetaDataID = value;
					this.SendPropertyChanged("ContentItemMetaDataID");
					this.OnContentItemMetaDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", DbType="Int NOT NULL")]
		public int ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					if (this._dnn_ContentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDataID", DbType="Int NOT NULL")]
		public int MetaDataID
		{
			get
			{
				return this._MetaDataID;
			}
			set
			{
				if ((this._MetaDataID != value))
				{
					if (this._dnn_MetaData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMetaDataIDChanging(value);
					this.SendPropertyChanging();
					this._MetaDataID = value;
					this.SendPropertyChanged("MetaDataID");
					this.OnMetaDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDataValue", DbType="NVarChar(MAX)")]
		public string MetaDataValue
		{
			get
			{
				return this._MetaDataValue;
			}
			set
			{
				if ((this._MetaDataValue != value))
				{
					this.OnMetaDataValueChanging(value);
					this.SendPropertyChanging();
					this._MetaDataValue = value;
					this.SendPropertyChanged("MetaDataValue");
					this.OnMetaDataValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ContentItem_dnn_ContentItems_MetaData", Storage="_dnn_ContentItem", ThisKey="ContentItemID", OtherKey="ContentItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_ContentItem dnn_ContentItem
		{
			get
			{
				return this._dnn_ContentItem.Entity;
			}
			set
			{
				dnn_ContentItem previousValue = this._dnn_ContentItem.Entity;
				if (((previousValue != value) 
							|| (this._dnn_ContentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_ContentItem.Entity = null;
						previousValue.dnn_ContentItems_MetaDatas.Remove(this);
					}
					this._dnn_ContentItem.Entity = value;
					if ((value != null))
					{
						value.dnn_ContentItems_MetaDatas.Add(this);
						this._ContentItemID = value.ContentItemID;
					}
					else
					{
						this._ContentItemID = default(int);
					}
					this.SendPropertyChanged("dnn_ContentItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_MetaData_dnn_ContentItems_MetaData", Storage="_dnn_MetaData", ThisKey="MetaDataID", OtherKey="MetaDataID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_MetaData dnn_MetaData
		{
			get
			{
				return this._dnn_MetaData.Entity;
			}
			set
			{
				dnn_MetaData previousValue = this._dnn_MetaData.Entity;
				if (((previousValue != value) 
							|| (this._dnn_MetaData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_MetaData.Entity = null;
						previousValue.dnn_ContentItems_MetaDatas.Remove(this);
					}
					this._dnn_MetaData.Entity = value;
					if ((value != null))
					{
						value.dnn_ContentItems_MetaDatas.Add(this);
						this._MetaDataID = value.MetaDataID;
					}
					else
					{
						this._MetaDataID = default(int);
					}
					this.SendPropertyChanged("dnn_MetaData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_ContentItems_Tags")]
	public partial class dnn_ContentItems_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentItemTagID;
		
		private int _ContentItemID;
		
		private int _TermID;
		
		private EntityRef<dnn_ContentItem> _dnn_ContentItem;
		
		private EntityRef<dnn_Taxonomy_Term> _dnn_Taxonomy_Term;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentItemTagIDChanging(int value);
    partial void OnContentItemTagIDChanged();
    partial void OnContentItemIDChanging(int value);
    partial void OnContentItemIDChanged();
    partial void OnTermIDChanging(int value);
    partial void OnTermIDChanged();
    #endregion
		
		public dnn_ContentItems_Tag()
		{
			this._dnn_ContentItem = default(EntityRef<dnn_ContentItem>);
			this._dnn_Taxonomy_Term = default(EntityRef<dnn_Taxonomy_Term>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemTagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentItemTagID
		{
			get
			{
				return this._ContentItemTagID;
			}
			set
			{
				if ((this._ContentItemTagID != value))
				{
					this.OnContentItemTagIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemTagID = value;
					this.SendPropertyChanged("ContentItemTagID");
					this.OnContentItemTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", DbType="Int NOT NULL")]
		public int ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					if (this._dnn_ContentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", DbType="Int NOT NULL")]
		public int TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					if (this._dnn_Taxonomy_Term.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIDChanging(value);
					this.SendPropertyChanging();
					this._TermID = value;
					this.SendPropertyChanged("TermID");
					this.OnTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ContentItem_dnn_ContentItems_Tag", Storage="_dnn_ContentItem", ThisKey="ContentItemID", OtherKey="ContentItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_ContentItem dnn_ContentItem
		{
			get
			{
				return this._dnn_ContentItem.Entity;
			}
			set
			{
				dnn_ContentItem previousValue = this._dnn_ContentItem.Entity;
				if (((previousValue != value) 
							|| (this._dnn_ContentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_ContentItem.Entity = null;
						previousValue.dnn_ContentItems_Tags.Remove(this);
					}
					this._dnn_ContentItem.Entity = value;
					if ((value != null))
					{
						value.dnn_ContentItems_Tags.Add(this);
						this._ContentItemID = value.ContentItemID;
					}
					else
					{
						this._ContentItemID = default(int);
					}
					this.SendPropertyChanged("dnn_ContentItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Taxonomy_Term_dnn_ContentItems_Tag", Storage="_dnn_Taxonomy_Term", ThisKey="TermID", OtherKey="TermID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Taxonomy_Term dnn_Taxonomy_Term
		{
			get
			{
				return this._dnn_Taxonomy_Term.Entity;
			}
			set
			{
				dnn_Taxonomy_Term previousValue = this._dnn_Taxonomy_Term.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Taxonomy_Term.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Taxonomy_Term.Entity = null;
						previousValue.dnn_ContentItems_Tags.Remove(this);
					}
					this._dnn_Taxonomy_Term.Entity = value;
					if ((value != null))
					{
						value.dnn_ContentItems_Tags.Add(this);
						this._TermID = value.TermID;
					}
					else
					{
						this._TermID = default(int);
					}
					this.SendPropertyChanged("dnn_Taxonomy_Term");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_ContentTypes")]
	public partial class dnn_ContentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentTypeID;
		
		private string _ContentType;
		
		private EntitySet<dnn_ContentItem> _dnn_ContentItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentTypeIDChanging(int value);
    partial void OnContentTypeIDChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    #endregion
		
		public dnn_ContentType()
		{
			this._dnn_ContentItems = new EntitySet<dnn_ContentItem>(new Action<dnn_ContentItem>(this.attach_dnn_ContentItems), new Action<dnn_ContentItem>(this.detach_dnn_ContentItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentTypeID
		{
			get
			{
				return this._ContentTypeID;
			}
			set
			{
				if ((this._ContentTypeID != value))
				{
					this.OnContentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContentTypeID = value;
					this.SendPropertyChanged("ContentTypeID");
					this.OnContentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ContentType_dnn_ContentItem", Storage="_dnn_ContentItems", ThisKey="ContentTypeID", OtherKey="ContentTypeID")]
		public EntitySet<dnn_ContentItem> dnn_ContentItems
		{
			get
			{
				return this._dnn_ContentItems;
			}
			set
			{
				this._dnn_ContentItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_ContentItems(dnn_ContentItem entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ContentType = this;
		}
		
		private void detach_dnn_ContentItems(dnn_ContentItem entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ContentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Dashboard_Controls")]
	public partial class dnn_Dashboard_Control : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DashboardControlID;
		
		private string _DashboardControlKey;
		
		private bool _IsEnabled;
		
		private string _DashboardControlSrc;
		
		private string _DashboardControlLocalResources;
		
		private string _ControllerClass;
		
		private int _ViewOrder;
		
		private int _PackageID;
		
		private EntityRef<dnn_Package> _dnn_Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDashboardControlIDChanging(int value);
    partial void OnDashboardControlIDChanged();
    partial void OnDashboardControlKeyChanging(string value);
    partial void OnDashboardControlKeyChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnDashboardControlSrcChanging(string value);
    partial void OnDashboardControlSrcChanged();
    partial void OnDashboardControlLocalResourcesChanging(string value);
    partial void OnDashboardControlLocalResourcesChanged();
    partial void OnControllerClassChanging(string value);
    partial void OnControllerClassChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    #endregion
		
		public dnn_Dashboard_Control()
		{
			this._dnn_Package = default(EntityRef<dnn_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardControlID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DashboardControlID
		{
			get
			{
				return this._DashboardControlID;
			}
			set
			{
				if ((this._DashboardControlID != value))
				{
					this.OnDashboardControlIDChanging(value);
					this.SendPropertyChanging();
					this._DashboardControlID = value;
					this.SendPropertyChanged("DashboardControlID");
					this.OnDashboardControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardControlKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DashboardControlKey
		{
			get
			{
				return this._DashboardControlKey;
			}
			set
			{
				if ((this._DashboardControlKey != value))
				{
					this.OnDashboardControlKeyChanging(value);
					this.SendPropertyChanging();
					this._DashboardControlKey = value;
					this.SendPropertyChanged("DashboardControlKey");
					this.OnDashboardControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardControlSrc", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DashboardControlSrc
		{
			get
			{
				return this._DashboardControlSrc;
			}
			set
			{
				if ((this._DashboardControlSrc != value))
				{
					this.OnDashboardControlSrcChanging(value);
					this.SendPropertyChanging();
					this._DashboardControlSrc = value;
					this.SendPropertyChanged("DashboardControlSrc");
					this.OnDashboardControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardControlLocalResources", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DashboardControlLocalResources
		{
			get
			{
				return this._DashboardControlLocalResources;
			}
			set
			{
				if ((this._DashboardControlLocalResources != value))
				{
					this.OnDashboardControlLocalResourcesChanging(value);
					this.SendPropertyChanging();
					this._DashboardControlLocalResources = value;
					this.SendPropertyChanged("DashboardControlLocalResources");
					this.OnDashboardControlLocalResourcesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControllerClass", DbType="NVarChar(250)")]
		public string ControllerClass
		{
			get
			{
				return this._ControllerClass;
			}
			set
			{
				if ((this._ControllerClass != value))
				{
					this.OnControllerClassChanging(value);
					this.SendPropertyChanging();
					this._ControllerClass = value;
					this.SendPropertyChanged("ControllerClass");
					this.OnControllerClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int NOT NULL")]
		public int ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._dnn_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_Dashboard_Control", Storage="_dnn_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Package dnn_Package
		{
			get
			{
				return this._dnn_Package.Entity;
			}
			set
			{
				dnn_Package previousValue = this._dnn_Package.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Package.Entity = null;
						previousValue.dnn_Dashboard_Controls.Remove(this);
					}
					this._dnn_Package.Entity = value;
					if ((value != null))
					{
						value.dnn_Dashboard_Controls.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("dnn_Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_DesktopModulePermission")]
	public partial class dnn_DesktopModulePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesktopModulePermissionID;
		
		private int _PortalDesktopModuleID;
		
		private int _PermissionID;
		
		private bool _AllowAccess;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_Permission> _dnn_Permission;
		
		private EntityRef<dnn_PortalDesktopModule> _dnn_PortalDesktopModule;
		
		private EntityRef<dnn_User> _dnn_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesktopModulePermissionIDChanging(int value);
    partial void OnDesktopModulePermissionIDChanged();
    partial void OnPortalDesktopModuleIDChanging(int value);
    partial void OnPortalDesktopModuleIDChanged();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnAllowAccessChanging(bool value);
    partial void OnAllowAccessChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_DesktopModulePermission()
		{
			this._dnn_Permission = default(EntityRef<dnn_Permission>);
			this._dnn_PortalDesktopModule = default(EntityRef<dnn_PortalDesktopModule>);
			this._dnn_User = default(EntityRef<dnn_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopModulePermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DesktopModulePermissionID
		{
			get
			{
				return this._DesktopModulePermissionID;
			}
			set
			{
				if ((this._DesktopModulePermissionID != value))
				{
					this.OnDesktopModulePermissionIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopModulePermissionID = value;
					this.SendPropertyChanged("DesktopModulePermissionID");
					this.OnDesktopModulePermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalDesktopModuleID", DbType="Int NOT NULL")]
		public int PortalDesktopModuleID
		{
			get
			{
				return this._PortalDesktopModuleID;
			}
			set
			{
				if ((this._PortalDesktopModuleID != value))
				{
					if (this._dnn_PortalDesktopModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalDesktopModuleIDChanging(value);
					this.SendPropertyChanging();
					this._PortalDesktopModuleID = value;
					this.SendPropertyChanged("PortalDesktopModuleID");
					this.OnPortalDesktopModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="Int NOT NULL")]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					if (this._dnn_Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAccess", DbType="Bit NOT NULL")]
		public bool AllowAccess
		{
			get
			{
				return this._AllowAccess;
			}
			set
			{
				if ((this._AllowAccess != value))
				{
					this.OnAllowAccessChanging(value);
					this.SendPropertyChanging();
					this._AllowAccess = value;
					this.SendPropertyChanged("AllowAccess");
					this.OnAllowAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._dnn_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Permission_dnn_DesktopModulePermission", Storage="_dnn_Permission", ThisKey="PermissionID", OtherKey="PermissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Permission dnn_Permission
		{
			get
			{
				return this._dnn_Permission.Entity;
			}
			set
			{
				dnn_Permission previousValue = this._dnn_Permission.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Permission.Entity = null;
						previousValue.dnn_DesktopModulePermissions.Remove(this);
					}
					this._dnn_Permission.Entity = value;
					if ((value != null))
					{
						value.dnn_DesktopModulePermissions.Add(this);
						this._PermissionID = value.PermissionID;
					}
					else
					{
						this._PermissionID = default(int);
					}
					this.SendPropertyChanged("dnn_Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_PortalDesktopModule_dnn_DesktopModulePermission", Storage="_dnn_PortalDesktopModule", ThisKey="PortalDesktopModuleID", OtherKey="PortalDesktopModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_PortalDesktopModule dnn_PortalDesktopModule
		{
			get
			{
				return this._dnn_PortalDesktopModule.Entity;
			}
			set
			{
				dnn_PortalDesktopModule previousValue = this._dnn_PortalDesktopModule.Entity;
				if (((previousValue != value) 
							|| (this._dnn_PortalDesktopModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_PortalDesktopModule.Entity = null;
						previousValue.dnn_DesktopModulePermissions.Remove(this);
					}
					this._dnn_PortalDesktopModule.Entity = value;
					if ((value != null))
					{
						value.dnn_DesktopModulePermissions.Add(this);
						this._PortalDesktopModuleID = value.PortalDesktopModuleID;
					}
					else
					{
						this._PortalDesktopModuleID = default(int);
					}
					this.SendPropertyChanged("dnn_PortalDesktopModule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_DesktopModulePermission", Storage="_dnn_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public dnn_User dnn_User
		{
			get
			{
				return this._dnn_User.Entity;
			}
			set
			{
				dnn_User previousValue = this._dnn_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_User.Entity = null;
						previousValue.dnn_DesktopModulePermissions.Remove(this);
					}
					this._dnn_User.Entity = value;
					if ((value != null))
					{
						value.dnn_DesktopModulePermissions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_DesktopModules")]
	public partial class dnn_DesktopModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesktopModuleID;
		
		private string _FriendlyName;
		
		private string _Description;
		
		private string _Version;
		
		private bool _IsPremium;
		
		private bool _IsAdmin;
		
		private string _BusinessControllerClass;
		
		private string _FolderName;
		
		private string _ModuleName;
		
		private int _SupportedFeatures;
		
		private string _CompatibleVersions;
		
		private string _Dependencies;
		
		private string _Permissions;
		
		private int _PackageID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private int _ContentItemId;
		
		private EntitySet<dnn_ModuleDefinition> _dnn_ModuleDefinitions;
		
		private EntitySet<dnn_PortalDesktopModule> _dnn_PortalDesktopModules;
		
		private EntityRef<dnn_Package> _dnn_Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesktopModuleIDChanging(int value);
    partial void OnDesktopModuleIDChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnIsPremiumChanging(bool value);
    partial void OnIsPremiumChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnBusinessControllerClassChanging(string value);
    partial void OnBusinessControllerClassChanged();
    partial void OnFolderNameChanging(string value);
    partial void OnFolderNameChanged();
    partial void OnModuleNameChanging(string value);
    partial void OnModuleNameChanged();
    partial void OnSupportedFeaturesChanging(int value);
    partial void OnSupportedFeaturesChanged();
    partial void OnCompatibleVersionsChanging(string value);
    partial void OnCompatibleVersionsChanged();
    partial void OnDependenciesChanging(string value);
    partial void OnDependenciesChanged();
    partial void OnPermissionsChanging(string value);
    partial void OnPermissionsChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnContentItemIdChanging(int value);
    partial void OnContentItemIdChanged();
    #endregion
		
		public dnn_DesktopModule()
		{
			this._dnn_ModuleDefinitions = new EntitySet<dnn_ModuleDefinition>(new Action<dnn_ModuleDefinition>(this.attach_dnn_ModuleDefinitions), new Action<dnn_ModuleDefinition>(this.detach_dnn_ModuleDefinitions));
			this._dnn_PortalDesktopModules = new EntitySet<dnn_PortalDesktopModule>(new Action<dnn_PortalDesktopModule>(this.attach_dnn_PortalDesktopModules), new Action<dnn_PortalDesktopModule>(this.detach_dnn_PortalDesktopModules));
			this._dnn_Package = default(EntityRef<dnn_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DesktopModuleID
		{
			get
			{
				return this._DesktopModuleID;
			}
			set
			{
				if ((this._DesktopModuleID != value))
				{
					this.OnDesktopModuleIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopModuleID = value;
					this.SendPropertyChanged("DesktopModuleID");
					this.OnDesktopModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(8)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPremium", DbType="Bit NOT NULL")]
		public bool IsPremium
		{
			get
			{
				return this._IsPremium;
			}
			set
			{
				if ((this._IsPremium != value))
				{
					this.OnIsPremiumChanging(value);
					this.SendPropertyChanging();
					this._IsPremium = value;
					this.SendPropertyChanged("IsPremium");
					this.OnIsPremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessControllerClass", DbType="NVarChar(200)")]
		public string BusinessControllerClass
		{
			get
			{
				return this._BusinessControllerClass;
			}
			set
			{
				if ((this._BusinessControllerClass != value))
				{
					this.OnBusinessControllerClassChanging(value);
					this.SendPropertyChanging();
					this._BusinessControllerClass = value;
					this.SendPropertyChanged("BusinessControllerClass");
					this.OnBusinessControllerClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string FolderName
		{
			get
			{
				return this._FolderName;
			}
			set
			{
				if ((this._FolderName != value))
				{
					this.OnFolderNameChanging(value);
					this.SendPropertyChanging();
					this._FolderName = value;
					this.SendPropertyChanged("FolderName");
					this.OnFolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this.OnModuleNameChanging(value);
					this.SendPropertyChanging();
					this._ModuleName = value;
					this.SendPropertyChanged("ModuleName");
					this.OnModuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportedFeatures", DbType="Int NOT NULL")]
		public int SupportedFeatures
		{
			get
			{
				return this._SupportedFeatures;
			}
			set
			{
				if ((this._SupportedFeatures != value))
				{
					this.OnSupportedFeaturesChanging(value);
					this.SendPropertyChanging();
					this._SupportedFeatures = value;
					this.SendPropertyChanged("SupportedFeatures");
					this.OnSupportedFeaturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleVersions", DbType="NVarChar(500)")]
		public string CompatibleVersions
		{
			get
			{
				return this._CompatibleVersions;
			}
			set
			{
				if ((this._CompatibleVersions != value))
				{
					this.OnCompatibleVersionsChanging(value);
					this.SendPropertyChanging();
					this._CompatibleVersions = value;
					this.SendPropertyChanged("CompatibleVersions");
					this.OnCompatibleVersionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dependencies", DbType="NVarChar(400)")]
		public string Dependencies
		{
			get
			{
				return this._Dependencies;
			}
			set
			{
				if ((this._Dependencies != value))
				{
					this.OnDependenciesChanging(value);
					this.SendPropertyChanging();
					this._Dependencies = value;
					this.SendPropertyChanged("Dependencies");
					this.OnDependenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permissions", DbType="NVarChar(400)")]
		public string Permissions
		{
			get
			{
				return this._Permissions;
			}
			set
			{
				if ((this._Permissions != value))
				{
					this.OnPermissionsChanging(value);
					this.SendPropertyChanging();
					this._Permissions = value;
					this.SendPropertyChanged("Permissions");
					this.OnPermissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._dnn_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemId", DbType="Int NOT NULL")]
		public int ContentItemId
		{
			get
			{
				return this._ContentItemId;
			}
			set
			{
				if ((this._ContentItemId != value))
				{
					this.OnContentItemIdChanging(value);
					this.SendPropertyChanging();
					this._ContentItemId = value;
					this.SendPropertyChanged("ContentItemId");
					this.OnContentItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_DesktopModule_dnn_ModuleDefinition", Storage="_dnn_ModuleDefinitions", ThisKey="DesktopModuleID", OtherKey="DesktopModuleID")]
		public EntitySet<dnn_ModuleDefinition> dnn_ModuleDefinitions
		{
			get
			{
				return this._dnn_ModuleDefinitions;
			}
			set
			{
				this._dnn_ModuleDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_DesktopModule_dnn_PortalDesktopModule", Storage="_dnn_PortalDesktopModules", ThisKey="DesktopModuleID", OtherKey="DesktopModuleID")]
		public EntitySet<dnn_PortalDesktopModule> dnn_PortalDesktopModules
		{
			get
			{
				return this._dnn_PortalDesktopModules;
			}
			set
			{
				this._dnn_PortalDesktopModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_DesktopModule", Storage="_dnn_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Package dnn_Package
		{
			get
			{
				return this._dnn_Package.Entity;
			}
			set
			{
				dnn_Package previousValue = this._dnn_Package.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Package.Entity = null;
						previousValue.dnn_DesktopModules.Remove(this);
					}
					this._dnn_Package.Entity = value;
					if ((value != null))
					{
						value.dnn_DesktopModules.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("dnn_Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_ModuleDefinitions(dnn_ModuleDefinition entity)
		{
			this.SendPropertyChanging();
			entity.dnn_DesktopModule = this;
		}
		
		private void detach_dnn_ModuleDefinitions(dnn_ModuleDefinition entity)
		{
			this.SendPropertyChanging();
			entity.dnn_DesktopModule = null;
		}
		
		private void attach_dnn_PortalDesktopModules(dnn_PortalDesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_DesktopModule = this;
		}
		
		private void detach_dnn_PortalDesktopModules(dnn_PortalDesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_DesktopModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_EventLog")]
	public partial class dnn_EventLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LogGUID;
		
		private string _LogTypeKey;
		
		private System.Nullable<int> _LogConfigID;
		
		private System.Nullable<int> _LogUserID;
		
		private string _LogUserName;
		
		private System.Nullable<int> _LogPortalID;
		
		private string _LogPortalName;
		
		private System.DateTime _LogCreateDate;
		
		private string _LogServerName;
		
		private string _LogProperties;
		
		private System.Nullable<bool> _LogNotificationPending;
		
		private long _LogEventID;
		
		private EntityRef<dnn_EventLogConfig> _dnn_EventLogConfig;
		
		private EntityRef<dnn_EventLogType> _dnn_EventLogType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogGUIDChanging(string value);
    partial void OnLogGUIDChanged();
    partial void OnLogTypeKeyChanging(string value);
    partial void OnLogTypeKeyChanged();
    partial void OnLogConfigIDChanging(System.Nullable<int> value);
    partial void OnLogConfigIDChanged();
    partial void OnLogUserIDChanging(System.Nullable<int> value);
    partial void OnLogUserIDChanged();
    partial void OnLogUserNameChanging(string value);
    partial void OnLogUserNameChanged();
    partial void OnLogPortalIDChanging(System.Nullable<int> value);
    partial void OnLogPortalIDChanged();
    partial void OnLogPortalNameChanging(string value);
    partial void OnLogPortalNameChanged();
    partial void OnLogCreateDateChanging(System.DateTime value);
    partial void OnLogCreateDateChanged();
    partial void OnLogServerNameChanging(string value);
    partial void OnLogServerNameChanged();
    partial void OnLogPropertiesChanging(string value);
    partial void OnLogPropertiesChanged();
    partial void OnLogNotificationPendingChanging(System.Nullable<bool> value);
    partial void OnLogNotificationPendingChanged();
    partial void OnLogEventIDChanging(long value);
    partial void OnLogEventIDChanged();
    #endregion
		
		public dnn_EventLog()
		{
			this._dnn_EventLogConfig = default(EntityRef<dnn_EventLogConfig>);
			this._dnn_EventLogType = default(EntityRef<dnn_EventLogType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogGUID", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string LogGUID
		{
			get
			{
				return this._LogGUID;
			}
			set
			{
				if ((this._LogGUID != value))
				{
					this.OnLogGUIDChanging(value);
					this.SendPropertyChanging();
					this._LogGUID = value;
					this.SendPropertyChanged("LogGUID");
					this.OnLogGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeKey", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string LogTypeKey
		{
			get
			{
				return this._LogTypeKey;
			}
			set
			{
				if ((this._LogTypeKey != value))
				{
					if (this._dnn_EventLogType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._LogTypeKey = value;
					this.SendPropertyChanged("LogTypeKey");
					this.OnLogTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogConfigID", DbType="Int")]
		public System.Nullable<int> LogConfigID
		{
			get
			{
				return this._LogConfigID;
			}
			set
			{
				if ((this._LogConfigID != value))
				{
					if (this._dnn_EventLogConfig.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogConfigIDChanging(value);
					this.SendPropertyChanging();
					this._LogConfigID = value;
					this.SendPropertyChanged("LogConfigID");
					this.OnLogConfigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUserID", DbType="Int")]
		public System.Nullable<int> LogUserID
		{
			get
			{
				return this._LogUserID;
			}
			set
			{
				if ((this._LogUserID != value))
				{
					this.OnLogUserIDChanging(value);
					this.SendPropertyChanging();
					this._LogUserID = value;
					this.SendPropertyChanged("LogUserID");
					this.OnLogUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUserName", DbType="NVarChar(50)")]
		public string LogUserName
		{
			get
			{
				return this._LogUserName;
			}
			set
			{
				if ((this._LogUserName != value))
				{
					this.OnLogUserNameChanging(value);
					this.SendPropertyChanging();
					this._LogUserName = value;
					this.SendPropertyChanged("LogUserName");
					this.OnLogUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogPortalID", DbType="Int")]
		public System.Nullable<int> LogPortalID
		{
			get
			{
				return this._LogPortalID;
			}
			set
			{
				if ((this._LogPortalID != value))
				{
					this.OnLogPortalIDChanging(value);
					this.SendPropertyChanging();
					this._LogPortalID = value;
					this.SendPropertyChanged("LogPortalID");
					this.OnLogPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogPortalName", DbType="NVarChar(100)")]
		public string LogPortalName
		{
			get
			{
				return this._LogPortalName;
			}
			set
			{
				if ((this._LogPortalName != value))
				{
					this.OnLogPortalNameChanging(value);
					this.SendPropertyChanging();
					this._LogPortalName = value;
					this.SendPropertyChanged("LogPortalName");
					this.OnLogPortalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogCreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogCreateDate
		{
			get
			{
				return this._LogCreateDate;
			}
			set
			{
				if ((this._LogCreateDate != value))
				{
					this.OnLogCreateDateChanging(value);
					this.SendPropertyChanging();
					this._LogCreateDate = value;
					this.SendPropertyChanged("LogCreateDate");
					this.OnLogCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogServerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LogServerName
		{
			get
			{
				return this._LogServerName;
			}
			set
			{
				if ((this._LogServerName != value))
				{
					this.OnLogServerNameChanging(value);
					this.SendPropertyChanging();
					this._LogServerName = value;
					this.SendPropertyChanged("LogServerName");
					this.OnLogServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogProperties", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LogProperties
		{
			get
			{
				return this._LogProperties;
			}
			set
			{
				if ((this._LogProperties != value))
				{
					this.OnLogPropertiesChanging(value);
					this.SendPropertyChanging();
					this._LogProperties = value;
					this.SendPropertyChanged("LogProperties");
					this.OnLogPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogNotificationPending", DbType="Bit")]
		public System.Nullable<bool> LogNotificationPending
		{
			get
			{
				return this._LogNotificationPending;
			}
			set
			{
				if ((this._LogNotificationPending != value))
				{
					this.OnLogNotificationPendingChanging(value);
					this.SendPropertyChanging();
					this._LogNotificationPending = value;
					this.SendPropertyChanged("LogNotificationPending");
					this.OnLogNotificationPendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogEventID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long LogEventID
		{
			get
			{
				return this._LogEventID;
			}
			set
			{
				if ((this._LogEventID != value))
				{
					this.OnLogEventIDChanging(value);
					this.SendPropertyChanging();
					this._LogEventID = value;
					this.SendPropertyChanged("LogEventID");
					this.OnLogEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_EventLogConfig_dnn_EventLog", Storage="_dnn_EventLogConfig", ThisKey="LogConfigID", OtherKey="ID", IsForeignKey=true)]
		public dnn_EventLogConfig dnn_EventLogConfig
		{
			get
			{
				return this._dnn_EventLogConfig.Entity;
			}
			set
			{
				dnn_EventLogConfig previousValue = this._dnn_EventLogConfig.Entity;
				if (((previousValue != value) 
							|| (this._dnn_EventLogConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_EventLogConfig.Entity = null;
						previousValue.dnn_EventLogs.Remove(this);
					}
					this._dnn_EventLogConfig.Entity = value;
					if ((value != null))
					{
						value.dnn_EventLogs.Add(this);
						this._LogConfigID = value.ID;
					}
					else
					{
						this._LogConfigID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_EventLogConfig");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_EventLogType_dnn_EventLog", Storage="_dnn_EventLogType", ThisKey="LogTypeKey", OtherKey="LogTypeKey", IsForeignKey=true)]
		public dnn_EventLogType dnn_EventLogType
		{
			get
			{
				return this._dnn_EventLogType.Entity;
			}
			set
			{
				dnn_EventLogType previousValue = this._dnn_EventLogType.Entity;
				if (((previousValue != value) 
							|| (this._dnn_EventLogType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_EventLogType.Entity = null;
						previousValue.dnn_EventLogs.Remove(this);
					}
					this._dnn_EventLogType.Entity = value;
					if ((value != null))
					{
						value.dnn_EventLogs.Add(this);
						this._LogTypeKey = value.LogTypeKey;
					}
					else
					{
						this._LogTypeKey = default(string);
					}
					this.SendPropertyChanged("dnn_EventLogType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_EventLogConfig")]
	public partial class dnn_EventLogConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LogTypeKey;
		
		private System.Nullable<int> _LogTypePortalID;
		
		private bool _LoggingIsActive;
		
		private int _KeepMostRecent;
		
		private bool _EmailNotificationIsActive;
		
		private System.Nullable<int> _NotificationThreshold;
		
		private System.Nullable<int> _NotificationThresholdTime;
		
		private System.Nullable<int> _NotificationThresholdTimeType;
		
		private string _MailFromAddress;
		
		private string _MailToAddress;
		
		private EntitySet<dnn_EventLog> _dnn_EventLogs;
		
		private EntityRef<dnn_EventLogType> _dnn_EventLogType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLogTypeKeyChanging(string value);
    partial void OnLogTypeKeyChanged();
    partial void OnLogTypePortalIDChanging(System.Nullable<int> value);
    partial void OnLogTypePortalIDChanged();
    partial void OnLoggingIsActiveChanging(bool value);
    partial void OnLoggingIsActiveChanged();
    partial void OnKeepMostRecentChanging(int value);
    partial void OnKeepMostRecentChanged();
    partial void OnEmailNotificationIsActiveChanging(bool value);
    partial void OnEmailNotificationIsActiveChanged();
    partial void OnNotificationThresholdChanging(System.Nullable<int> value);
    partial void OnNotificationThresholdChanged();
    partial void OnNotificationThresholdTimeChanging(System.Nullable<int> value);
    partial void OnNotificationThresholdTimeChanged();
    partial void OnNotificationThresholdTimeTypeChanging(System.Nullable<int> value);
    partial void OnNotificationThresholdTimeTypeChanged();
    partial void OnMailFromAddressChanging(string value);
    partial void OnMailFromAddressChanged();
    partial void OnMailToAddressChanging(string value);
    partial void OnMailToAddressChanged();
    #endregion
		
		public dnn_EventLogConfig()
		{
			this._dnn_EventLogs = new EntitySet<dnn_EventLog>(new Action<dnn_EventLog>(this.attach_dnn_EventLogs), new Action<dnn_EventLog>(this.detach_dnn_EventLogs));
			this._dnn_EventLogType = default(EntityRef<dnn_EventLogType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeKey", DbType="NVarChar(35)")]
		public string LogTypeKey
		{
			get
			{
				return this._LogTypeKey;
			}
			set
			{
				if ((this._LogTypeKey != value))
				{
					if (this._dnn_EventLogType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._LogTypeKey = value;
					this.SendPropertyChanged("LogTypeKey");
					this.OnLogTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypePortalID", DbType="Int")]
		public System.Nullable<int> LogTypePortalID
		{
			get
			{
				return this._LogTypePortalID;
			}
			set
			{
				if ((this._LogTypePortalID != value))
				{
					this.OnLogTypePortalIDChanging(value);
					this.SendPropertyChanging();
					this._LogTypePortalID = value;
					this.SendPropertyChanged("LogTypePortalID");
					this.OnLogTypePortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggingIsActive", DbType="Bit NOT NULL")]
		public bool LoggingIsActive
		{
			get
			{
				return this._LoggingIsActive;
			}
			set
			{
				if ((this._LoggingIsActive != value))
				{
					this.OnLoggingIsActiveChanging(value);
					this.SendPropertyChanging();
					this._LoggingIsActive = value;
					this.SendPropertyChanged("LoggingIsActive");
					this.OnLoggingIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeepMostRecent", DbType="Int NOT NULL")]
		public int KeepMostRecent
		{
			get
			{
				return this._KeepMostRecent;
			}
			set
			{
				if ((this._KeepMostRecent != value))
				{
					this.OnKeepMostRecentChanging(value);
					this.SendPropertyChanging();
					this._KeepMostRecent = value;
					this.SendPropertyChanged("KeepMostRecent");
					this.OnKeepMostRecentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotificationIsActive", DbType="Bit NOT NULL")]
		public bool EmailNotificationIsActive
		{
			get
			{
				return this._EmailNotificationIsActive;
			}
			set
			{
				if ((this._EmailNotificationIsActive != value))
				{
					this.OnEmailNotificationIsActiveChanging(value);
					this.SendPropertyChanging();
					this._EmailNotificationIsActive = value;
					this.SendPropertyChanged("EmailNotificationIsActive");
					this.OnEmailNotificationIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationThreshold", DbType="Int")]
		public System.Nullable<int> NotificationThreshold
		{
			get
			{
				return this._NotificationThreshold;
			}
			set
			{
				if ((this._NotificationThreshold != value))
				{
					this.OnNotificationThresholdChanging(value);
					this.SendPropertyChanging();
					this._NotificationThreshold = value;
					this.SendPropertyChanged("NotificationThreshold");
					this.OnNotificationThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationThresholdTime", DbType="Int")]
		public System.Nullable<int> NotificationThresholdTime
		{
			get
			{
				return this._NotificationThresholdTime;
			}
			set
			{
				if ((this._NotificationThresholdTime != value))
				{
					this.OnNotificationThresholdTimeChanging(value);
					this.SendPropertyChanging();
					this._NotificationThresholdTime = value;
					this.SendPropertyChanged("NotificationThresholdTime");
					this.OnNotificationThresholdTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationThresholdTimeType", DbType="Int")]
		public System.Nullable<int> NotificationThresholdTimeType
		{
			get
			{
				return this._NotificationThresholdTimeType;
			}
			set
			{
				if ((this._NotificationThresholdTimeType != value))
				{
					this.OnNotificationThresholdTimeTypeChanging(value);
					this.SendPropertyChanging();
					this._NotificationThresholdTimeType = value;
					this.SendPropertyChanged("NotificationThresholdTimeType");
					this.OnNotificationThresholdTimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailFromAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MailFromAddress
		{
			get
			{
				return this._MailFromAddress;
			}
			set
			{
				if ((this._MailFromAddress != value))
				{
					this.OnMailFromAddressChanging(value);
					this.SendPropertyChanging();
					this._MailFromAddress = value;
					this.SendPropertyChanged("MailFromAddress");
					this.OnMailFromAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailToAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MailToAddress
		{
			get
			{
				return this._MailToAddress;
			}
			set
			{
				if ((this._MailToAddress != value))
				{
					this.OnMailToAddressChanging(value);
					this.SendPropertyChanging();
					this._MailToAddress = value;
					this.SendPropertyChanged("MailToAddress");
					this.OnMailToAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_EventLogConfig_dnn_EventLog", Storage="_dnn_EventLogs", ThisKey="ID", OtherKey="LogConfigID")]
		public EntitySet<dnn_EventLog> dnn_EventLogs
		{
			get
			{
				return this._dnn_EventLogs;
			}
			set
			{
				this._dnn_EventLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_EventLogType_dnn_EventLogConfig", Storage="_dnn_EventLogType", ThisKey="LogTypeKey", OtherKey="LogTypeKey", IsForeignKey=true)]
		public dnn_EventLogType dnn_EventLogType
		{
			get
			{
				return this._dnn_EventLogType.Entity;
			}
			set
			{
				dnn_EventLogType previousValue = this._dnn_EventLogType.Entity;
				if (((previousValue != value) 
							|| (this._dnn_EventLogType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_EventLogType.Entity = null;
						previousValue.dnn_EventLogConfigs.Remove(this);
					}
					this._dnn_EventLogType.Entity = value;
					if ((value != null))
					{
						value.dnn_EventLogConfigs.Add(this);
						this._LogTypeKey = value.LogTypeKey;
					}
					else
					{
						this._LogTypeKey = default(string);
					}
					this.SendPropertyChanged("dnn_EventLogType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_EventLogs(dnn_EventLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_EventLogConfig = this;
		}
		
		private void detach_dnn_EventLogs(dnn_EventLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_EventLogConfig = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_EventLogTypes")]
	public partial class dnn_EventLogType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LogTypeKey;
		
		private string _LogTypeFriendlyName;
		
		private string _LogTypeDescription;
		
		private string _LogTypeOwner;
		
		private string _LogTypeCSSClass;
		
		private EntitySet<dnn_EventLog> _dnn_EventLogs;
		
		private EntitySet<dnn_EventLogConfig> _dnn_EventLogConfigs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogTypeKeyChanging(string value);
    partial void OnLogTypeKeyChanged();
    partial void OnLogTypeFriendlyNameChanging(string value);
    partial void OnLogTypeFriendlyNameChanged();
    partial void OnLogTypeDescriptionChanging(string value);
    partial void OnLogTypeDescriptionChanged();
    partial void OnLogTypeOwnerChanging(string value);
    partial void OnLogTypeOwnerChanged();
    partial void OnLogTypeCSSClassChanging(string value);
    partial void OnLogTypeCSSClassChanged();
    #endregion
		
		public dnn_EventLogType()
		{
			this._dnn_EventLogs = new EntitySet<dnn_EventLog>(new Action<dnn_EventLog>(this.attach_dnn_EventLogs), new Action<dnn_EventLog>(this.detach_dnn_EventLogs));
			this._dnn_EventLogConfigs = new EntitySet<dnn_EventLogConfig>(new Action<dnn_EventLogConfig>(this.attach_dnn_EventLogConfigs), new Action<dnn_EventLogConfig>(this.detach_dnn_EventLogConfigs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeKey", DbType="NVarChar(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LogTypeKey
		{
			get
			{
				return this._LogTypeKey;
			}
			set
			{
				if ((this._LogTypeKey != value))
				{
					this.OnLogTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._LogTypeKey = value;
					this.SendPropertyChanged("LogTypeKey");
					this.OnLogTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeFriendlyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LogTypeFriendlyName
		{
			get
			{
				return this._LogTypeFriendlyName;
			}
			set
			{
				if ((this._LogTypeFriendlyName != value))
				{
					this.OnLogTypeFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._LogTypeFriendlyName = value;
					this.SendPropertyChanged("LogTypeFriendlyName");
					this.OnLogTypeFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeDescription", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string LogTypeDescription
		{
			get
			{
				return this._LogTypeDescription;
			}
			set
			{
				if ((this._LogTypeDescription != value))
				{
					this.OnLogTypeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LogTypeDescription = value;
					this.SendPropertyChanged("LogTypeDescription");
					this.OnLogTypeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeOwner", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LogTypeOwner
		{
			get
			{
				return this._LogTypeOwner;
			}
			set
			{
				if ((this._LogTypeOwner != value))
				{
					this.OnLogTypeOwnerChanging(value);
					this.SendPropertyChanging();
					this._LogTypeOwner = value;
					this.SendPropertyChanged("LogTypeOwner");
					this.OnLogTypeOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeCSSClass", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string LogTypeCSSClass
		{
			get
			{
				return this._LogTypeCSSClass;
			}
			set
			{
				if ((this._LogTypeCSSClass != value))
				{
					this.OnLogTypeCSSClassChanging(value);
					this.SendPropertyChanging();
					this._LogTypeCSSClass = value;
					this.SendPropertyChanged("LogTypeCSSClass");
					this.OnLogTypeCSSClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_EventLogType_dnn_EventLog", Storage="_dnn_EventLogs", ThisKey="LogTypeKey", OtherKey="LogTypeKey")]
		public EntitySet<dnn_EventLog> dnn_EventLogs
		{
			get
			{
				return this._dnn_EventLogs;
			}
			set
			{
				this._dnn_EventLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_EventLogType_dnn_EventLogConfig", Storage="_dnn_EventLogConfigs", ThisKey="LogTypeKey", OtherKey="LogTypeKey")]
		public EntitySet<dnn_EventLogConfig> dnn_EventLogConfigs
		{
			get
			{
				return this._dnn_EventLogConfigs;
			}
			set
			{
				this._dnn_EventLogConfigs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_EventLogs(dnn_EventLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_EventLogType = this;
		}
		
		private void detach_dnn_EventLogs(dnn_EventLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_EventLogType = null;
		}
		
		private void attach_dnn_EventLogConfigs(dnn_EventLogConfig entity)
		{
			this.SendPropertyChanging();
			entity.dnn_EventLogType = this;
		}
		
		private void detach_dnn_EventLogConfigs(dnn_EventLogConfig entity)
		{
			this.SendPropertyChanging();
			entity.dnn_EventLogType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_EventQueue")]
	public partial class dnn_EventQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventMessageID;
		
		private string _EventName;
		
		private int _Priority;
		
		private string _ProcessorType;
		
		private string _ProcessorCommand;
		
		private string _Body;
		
		private string _Sender;
		
		private string _Subscriber;
		
		private string _AuthorizedRoles;
		
		private string _ExceptionMessage;
		
		private System.DateTime _SentDate;
		
		private System.DateTime _ExpirationDate;
		
		private string _Attributes;
		
		private bool _IsComplete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventMessageIDChanging(int value);
    partial void OnEventMessageIDChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnProcessorTypeChanging(string value);
    partial void OnProcessorTypeChanged();
    partial void OnProcessorCommandChanging(string value);
    partial void OnProcessorCommandChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnSubscriberChanging(string value);
    partial void OnSubscriberChanged();
    partial void OnAuthorizedRolesChanging(string value);
    partial void OnAuthorizedRolesChanged();
    partial void OnExceptionMessageChanging(string value);
    partial void OnExceptionMessageChanged();
    partial void OnSentDateChanging(System.DateTime value);
    partial void OnSentDateChanged();
    partial void OnExpirationDateChanging(System.DateTime value);
    partial void OnExpirationDateChanged();
    partial void OnAttributesChanging(string value);
    partial void OnAttributesChanged();
    partial void OnIsCompleteChanging(bool value);
    partial void OnIsCompleteChanged();
    #endregion
		
		public dnn_EventQueue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventMessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EventMessageID
		{
			get
			{
				return this._EventMessageID;
			}
			set
			{
				if ((this._EventMessageID != value))
				{
					this.OnEventMessageIDChanging(value);
					this.SendPropertyChanging();
					this._EventMessageID = value;
					this.SendPropertyChanged("EventMessageID");
					this.OnEventMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorType", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ProcessorType
		{
			get
			{
				return this._ProcessorType;
			}
			set
			{
				if ((this._ProcessorType != value))
				{
					this.OnProcessorTypeChanging(value);
					this.SendPropertyChanging();
					this._ProcessorType = value;
					this.SendPropertyChanged("ProcessorType");
					this.OnProcessorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorCommand", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ProcessorCommand
		{
			get
			{
				return this._ProcessorCommand;
			}
			set
			{
				if ((this._ProcessorCommand != value))
				{
					this.OnProcessorCommandChanging(value);
					this.SendPropertyChanging();
					this._ProcessorCommand = value;
					this.SendPropertyChanged("ProcessorCommand");
					this.OnProcessorCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subscriber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Subscriber
		{
			get
			{
				return this._Subscriber;
			}
			set
			{
				if ((this._Subscriber != value))
				{
					this.OnSubscriberChanging(value);
					this.SendPropertyChanging();
					this._Subscriber = value;
					this.SendPropertyChanged("Subscriber");
					this.OnSubscriberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedRoles", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string AuthorizedRoles
		{
			get
			{
				return this._AuthorizedRoles;
			}
			set
			{
				if ((this._AuthorizedRoles != value))
				{
					this.OnAuthorizedRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedRoles = value;
					this.SendPropertyChanged("AuthorizedRoles");
					this.OnAuthorizedRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionMessage", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ExceptionMessage
		{
			get
			{
				return this._ExceptionMessage;
			}
			set
			{
				if ((this._ExceptionMessage != value))
				{
					this.OnExceptionMessageChanging(value);
					this.SendPropertyChanging();
					this._ExceptionMessage = value;
					this.SendPropertyChanged("ExceptionMessage");
					this.OnExceptionMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentDate", DbType="DateTime NOT NULL")]
		public System.DateTime SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this.OnSentDateChanging(value);
					this.SendPropertyChanging();
					this._SentDate = value;
					this.SendPropertyChanged("SentDate");
					this.OnSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attributes", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Attributes
		{
			get
			{
				return this._Attributes;
			}
			set
			{
				if ((this._Attributes != value))
				{
					this.OnAttributesChanging(value);
					this.SendPropertyChanging();
					this._Attributes = value;
					this.SendPropertyChanged("Attributes");
					this.OnAttributesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComplete", DbType="Bit NOT NULL")]
		public bool IsComplete
		{
			get
			{
				return this._IsComplete;
			}
			set
			{
				if ((this._IsComplete != value))
				{
					this.OnIsCompleteChanging(value);
					this.SendPropertyChanging();
					this._IsComplete = value;
					this.SendPropertyChanged("IsComplete");
					this.OnIsCompleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Files")]
	public partial class dnn_File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileId;
		
		private System.Nullable<int> _PortalId;
		
		private string _FileName;
		
		private string _Extension;
		
		private int _Size;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private string _ContentType;
		
		private string _Folder;
		
		private int _FolderID;
		
		private System.Data.Linq.Binary _Content;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Guid _UniqueId;
		
		private System.Guid _VersionGuid;
		
		private string _SHA1Hash;
		
		private EntityRef<dnn_Folder> _dnn_Folder;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnSizeChanging(int value);
    partial void OnSizeChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnFolderChanging(string value);
    partial void OnFolderChanged();
    partial void OnFolderIDChanging(int value);
    partial void OnFolderIDChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnVersionGuidChanging(System.Guid value);
    partial void OnVersionGuidChanged();
    partial void OnSHA1HashChanging(string value);
    partial void OnSHA1HashChanged();
    #endregion
		
		public dnn_File()
		{
			this._dnn_Folder = default(EntityRef<dnn_Folder>);
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(246) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int NOT NULL")]
		public int Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folder", DbType="NVarChar(246)")]
		public string Folder
		{
			get
			{
				return this._Folder;
			}
			set
			{
				if ((this._Folder != value))
				{
					this.OnFolderChanging(value);
					this.SendPropertyChanging();
					this._Folder = value;
					this.SendPropertyChanged("Folder");
					this.OnFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderID", DbType="Int NOT NULL")]
		public int FolderID
		{
			get
			{
				return this._FolderID;
			}
			set
			{
				if ((this._FolderID != value))
				{
					if (this._dnn_Folder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFolderIDChanging(value);
					this.SendPropertyChanging();
					this._FolderID = value;
					this.SendPropertyChanged("FolderID");
					this.OnFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionGuid
		{
			get
			{
				return this._VersionGuid;
			}
			set
			{
				if ((this._VersionGuid != value))
				{
					this.OnVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._VersionGuid = value;
					this.SendPropertyChanged("VersionGuid");
					this.OnVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHA1Hash", DbType="VarChar(40)")]
		public string SHA1Hash
		{
			get
			{
				return this._SHA1Hash;
			}
			set
			{
				if ((this._SHA1Hash != value))
				{
					this.OnSHA1HashChanging(value);
					this.SendPropertyChanging();
					this._SHA1Hash = value;
					this.SendPropertyChanged("SHA1Hash");
					this.OnSHA1HashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Folder_dnn_File", Storage="_dnn_Folder", ThisKey="FolderID", OtherKey="FolderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Folder dnn_Folder
		{
			get
			{
				return this._dnn_Folder.Entity;
			}
			set
			{
				dnn_Folder previousValue = this._dnn_Folder.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Folder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Folder.Entity = null;
						previousValue.dnn_Files.Remove(this);
					}
					this._dnn_Folder.Entity = value;
					if ((value != null))
					{
						value.dnn_Files.Add(this);
						this._FolderID = value.FolderID;
					}
					else
					{
						this._FolderID = default(int);
					}
					this.SendPropertyChanged("dnn_Folder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_File", Storage="_dnn_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true)]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_Files.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_Files.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_FolderMappings")]
	public partial class dnn_FolderMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FolderMappingID;
		
		private System.Nullable<int> _PortalID;
		
		private string _MappingName;
		
		private string _FolderProviderType;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn_FolderMappingsSetting> _dnn_FolderMappingsSettings;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFolderMappingIDChanging(int value);
    partial void OnFolderMappingIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnMappingNameChanging(string value);
    partial void OnMappingNameChanged();
    partial void OnFolderProviderTypeChanging(string value);
    partial void OnFolderProviderTypeChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_FolderMapping()
		{
			this._dnn_FolderMappingsSettings = new EntitySet<dnn_FolderMappingsSetting>(new Action<dnn_FolderMappingsSetting>(this.attach_dnn_FolderMappingsSettings), new Action<dnn_FolderMappingsSetting>(this.detach_dnn_FolderMappingsSettings));
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderMappingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FolderMappingID
		{
			get
			{
				return this._FolderMappingID;
			}
			set
			{
				if ((this._FolderMappingID != value))
				{
					this.OnFolderMappingIDChanging(value);
					this.SendPropertyChanging();
					this._FolderMappingID = value;
					this.SendPropertyChanged("FolderMappingID");
					this.OnFolderMappingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MappingName
		{
			get
			{
				return this._MappingName;
			}
			set
			{
				if ((this._MappingName != value))
				{
					this.OnMappingNameChanging(value);
					this.SendPropertyChanging();
					this._MappingName = value;
					this.SendPropertyChanged("MappingName");
					this.OnMappingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderProviderType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FolderProviderType
		{
			get
			{
				return this._FolderProviderType;
			}
			set
			{
				if ((this._FolderProviderType != value))
				{
					this.OnFolderProviderTypeChanging(value);
					this.SendPropertyChanging();
					this._FolderProviderType = value;
					this.SendPropertyChanged("FolderProviderType");
					this.OnFolderProviderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_FolderMapping_dnn_FolderMappingsSetting", Storage="_dnn_FolderMappingsSettings", ThisKey="FolderMappingID", OtherKey="FolderMappingID")]
		public EntitySet<dnn_FolderMappingsSetting> dnn_FolderMappingsSettings
		{
			get
			{
				return this._dnn_FolderMappingsSettings;
			}
			set
			{
				this._dnn_FolderMappingsSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_FolderMapping", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_FolderMappings.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_FolderMappings.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_FolderMappingsSettings(dnn_FolderMappingsSetting entity)
		{
			this.SendPropertyChanging();
			entity.dnn_FolderMapping = this;
		}
		
		private void detach_dnn_FolderMappingsSettings(dnn_FolderMappingsSetting entity)
		{
			this.SendPropertyChanging();
			entity.dnn_FolderMapping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_FolderMappingsSettings")]
	public partial class dnn_FolderMappingsSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FolderMappingID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_FolderMapping> _dnn_FolderMapping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFolderMappingIDChanging(int value);
    partial void OnFolderMappingIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_FolderMappingsSetting()
		{
			this._dnn_FolderMapping = default(EntityRef<dnn_FolderMapping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderMappingID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FolderMappingID
		{
			get
			{
				return this._FolderMappingID;
			}
			set
			{
				if ((this._FolderMappingID != value))
				{
					if (this._dnn_FolderMapping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFolderMappingIDChanging(value);
					this.SendPropertyChanging();
					this._FolderMappingID = value;
					this.SendPropertyChanged("FolderMappingID");
					this.OnFolderMappingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_FolderMapping_dnn_FolderMappingsSetting", Storage="_dnn_FolderMapping", ThisKey="FolderMappingID", OtherKey="FolderMappingID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_FolderMapping dnn_FolderMapping
		{
			get
			{
				return this._dnn_FolderMapping.Entity;
			}
			set
			{
				dnn_FolderMapping previousValue = this._dnn_FolderMapping.Entity;
				if (((previousValue != value) 
							|| (this._dnn_FolderMapping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_FolderMapping.Entity = null;
						previousValue.dnn_FolderMappingsSettings.Remove(this);
					}
					this._dnn_FolderMapping.Entity = value;
					if ((value != null))
					{
						value.dnn_FolderMappingsSettings.Add(this);
						this._FolderMappingID = value.FolderMappingID;
					}
					else
					{
						this._FolderMappingID = default(int);
					}
					this.SendPropertyChanged("dnn_FolderMapping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_FolderPermission")]
	public partial class dnn_FolderPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FolderPermissionID;
		
		private int _FolderID;
		
		private int _PermissionID;
		
		private bool _AllowAccess;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_Folder> _dnn_Folder;
		
		private EntityRef<dnn_Permission> _dnn_Permission;
		
		private EntityRef<dnn_User> _dnn_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFolderPermissionIDChanging(int value);
    partial void OnFolderPermissionIDChanged();
    partial void OnFolderIDChanging(int value);
    partial void OnFolderIDChanged();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnAllowAccessChanging(bool value);
    partial void OnAllowAccessChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_FolderPermission()
		{
			this._dnn_Folder = default(EntityRef<dnn_Folder>);
			this._dnn_Permission = default(EntityRef<dnn_Permission>);
			this._dnn_User = default(EntityRef<dnn_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderPermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FolderPermissionID
		{
			get
			{
				return this._FolderPermissionID;
			}
			set
			{
				if ((this._FolderPermissionID != value))
				{
					this.OnFolderPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._FolderPermissionID = value;
					this.SendPropertyChanged("FolderPermissionID");
					this.OnFolderPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderID", DbType="Int NOT NULL")]
		public int FolderID
		{
			get
			{
				return this._FolderID;
			}
			set
			{
				if ((this._FolderID != value))
				{
					if (this._dnn_Folder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFolderIDChanging(value);
					this.SendPropertyChanging();
					this._FolderID = value;
					this.SendPropertyChanged("FolderID");
					this.OnFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="Int NOT NULL")]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					if (this._dnn_Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAccess", DbType="Bit NOT NULL")]
		public bool AllowAccess
		{
			get
			{
				return this._AllowAccess;
			}
			set
			{
				if ((this._AllowAccess != value))
				{
					this.OnAllowAccessChanging(value);
					this.SendPropertyChanging();
					this._AllowAccess = value;
					this.SendPropertyChanged("AllowAccess");
					this.OnAllowAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._dnn_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Folder_dnn_FolderPermission", Storage="_dnn_Folder", ThisKey="FolderID", OtherKey="FolderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Folder dnn_Folder
		{
			get
			{
				return this._dnn_Folder.Entity;
			}
			set
			{
				dnn_Folder previousValue = this._dnn_Folder.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Folder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Folder.Entity = null;
						previousValue.dnn_FolderPermissions.Remove(this);
					}
					this._dnn_Folder.Entity = value;
					if ((value != null))
					{
						value.dnn_FolderPermissions.Add(this);
						this._FolderID = value.FolderID;
					}
					else
					{
						this._FolderID = default(int);
					}
					this.SendPropertyChanged("dnn_Folder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Permission_dnn_FolderPermission", Storage="_dnn_Permission", ThisKey="PermissionID", OtherKey="PermissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Permission dnn_Permission
		{
			get
			{
				return this._dnn_Permission.Entity;
			}
			set
			{
				dnn_Permission previousValue = this._dnn_Permission.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Permission.Entity = null;
						previousValue.dnn_FolderPermissions.Remove(this);
					}
					this._dnn_Permission.Entity = value;
					if ((value != null))
					{
						value.dnn_FolderPermissions.Add(this);
						this._PermissionID = value.PermissionID;
					}
					else
					{
						this._PermissionID = default(int);
					}
					this.SendPropertyChanged("dnn_Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_FolderPermission", Storage="_dnn_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteRule="CASCADE")]
		public dnn_User dnn_User
		{
			get
			{
				return this._dnn_User.Entity;
			}
			set
			{
				dnn_User previousValue = this._dnn_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_User.Entity = null;
						previousValue.dnn_FolderPermissions.Remove(this);
					}
					this._dnn_User.Entity = value;
					if ((value != null))
					{
						value.dnn_FolderPermissions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Folders")]
	public partial class dnn_Folder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FolderID;
		
		private System.Nullable<int> _PortalID;
		
		private string _FolderPath;
		
		private int _StorageLocation;
		
		private bool _IsProtected;
		
		private bool _IsCached;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Guid _UniqueId;
		
		private System.Guid _VersionGuid;
		
		private int _FolderMappingID;
		
		private EntitySet<dnn_File> _dnn_Files;
		
		private EntitySet<dnn_FolderPermission> _dnn_FolderPermissions;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFolderIDChanging(int value);
    partial void OnFolderIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnFolderPathChanging(string value);
    partial void OnFolderPathChanged();
    partial void OnStorageLocationChanging(int value);
    partial void OnStorageLocationChanged();
    partial void OnIsProtectedChanging(bool value);
    partial void OnIsProtectedChanged();
    partial void OnIsCachedChanging(bool value);
    partial void OnIsCachedChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnVersionGuidChanging(System.Guid value);
    partial void OnVersionGuidChanged();
    partial void OnFolderMappingIDChanging(int value);
    partial void OnFolderMappingIDChanged();
    #endregion
		
		public dnn_Folder()
		{
			this._dnn_Files = new EntitySet<dnn_File>(new Action<dnn_File>(this.attach_dnn_Files), new Action<dnn_File>(this.detach_dnn_Files));
			this._dnn_FolderPermissions = new EntitySet<dnn_FolderPermission>(new Action<dnn_FolderPermission>(this.attach_dnn_FolderPermissions), new Action<dnn_FolderPermission>(this.detach_dnn_FolderPermissions));
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FolderID
		{
			get
			{
				return this._FolderID;
			}
			set
			{
				if ((this._FolderID != value))
				{
					this.OnFolderIDChanging(value);
					this.SendPropertyChanging();
					this._FolderID = value;
					this.SendPropertyChanged("FolderID");
					this.OnFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderPath", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string FolderPath
		{
			get
			{
				return this._FolderPath;
			}
			set
			{
				if ((this._FolderPath != value))
				{
					this.OnFolderPathChanging(value);
					this.SendPropertyChanging();
					this._FolderPath = value;
					this.SendPropertyChanged("FolderPath");
					this.OnFolderPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageLocation", DbType="Int NOT NULL")]
		public int StorageLocation
		{
			get
			{
				return this._StorageLocation;
			}
			set
			{
				if ((this._StorageLocation != value))
				{
					this.OnStorageLocationChanging(value);
					this.SendPropertyChanging();
					this._StorageLocation = value;
					this.SendPropertyChanged("StorageLocation");
					this.OnStorageLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit NOT NULL")]
		public bool IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCached", DbType="Bit NOT NULL")]
		public bool IsCached
		{
			get
			{
				return this._IsCached;
			}
			set
			{
				if ((this._IsCached != value))
				{
					this.OnIsCachedChanging(value);
					this.SendPropertyChanging();
					this._IsCached = value;
					this.SendPropertyChanged("IsCached");
					this.OnIsCachedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionGuid
		{
			get
			{
				return this._VersionGuid;
			}
			set
			{
				if ((this._VersionGuid != value))
				{
					this.OnVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._VersionGuid = value;
					this.SendPropertyChanged("VersionGuid");
					this.OnVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderMappingID", DbType="Int NOT NULL")]
		public int FolderMappingID
		{
			get
			{
				return this._FolderMappingID;
			}
			set
			{
				if ((this._FolderMappingID != value))
				{
					this.OnFolderMappingIDChanging(value);
					this.SendPropertyChanging();
					this._FolderMappingID = value;
					this.SendPropertyChanged("FolderMappingID");
					this.OnFolderMappingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Folder_dnn_File", Storage="_dnn_Files", ThisKey="FolderID", OtherKey="FolderID")]
		public EntitySet<dnn_File> dnn_Files
		{
			get
			{
				return this._dnn_Files;
			}
			set
			{
				this._dnn_Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Folder_dnn_FolderPermission", Storage="_dnn_FolderPermissions", ThisKey="FolderID", OtherKey="FolderID")]
		public EntitySet<dnn_FolderPermission> dnn_FolderPermissions
		{
			get
			{
				return this._dnn_FolderPermissions;
			}
			set
			{
				this._dnn_FolderPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Folder", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_Folders.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_Folders.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_Files(dnn_File entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Folder = this;
		}
		
		private void detach_dnn_Files(dnn_File entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Folder = null;
		}
		
		private void attach_dnn_FolderPermissions(dnn_FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Folder = this;
		}
		
		private void detach_dnn_FolderPermissions(dnn_FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Folder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_HostSettings")]
	public partial class dnn_HostSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private bool _SettingIsSecure;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnSettingIsSecureChanging(bool value);
    partial void OnSettingIsSecureChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_HostSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingIsSecure", DbType="Bit NOT NULL")]
		public bool SettingIsSecure
		{
			get
			{
				return this._SettingIsSecure;
			}
			set
			{
				if ((this._SettingIsSecure != value))
				{
					this.OnSettingIsSecureChanging(value);
					this.SendPropertyChanging();
					this._SettingIsSecure = value;
					this.SendPropertyChanged("SettingIsSecure");
					this.OnSettingIsSecureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_HtmlText")]
	public partial class dnn_HtmlText : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private int _ItemID;
		
		private string _Content;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<int> _StateID;
		
		private System.Nullable<bool> _IsPublished;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private string _Summary;
		
		private EntitySet<dnn_HtmlTextLog> _dnn_HtmlTextLogs;
		
		private EntitySet<dnn_HtmlTextUser> _dnn_HtmlTextUsers;
		
		private EntityRef<dnn_WorkflowState> _dnn_WorkflowState;
		
		private EntityRef<dnn_Module> _dnn_Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    partial void OnIsPublishedChanging(System.Nullable<bool> value);
    partial void OnIsPublishedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public dnn_HtmlText()
		{
			this._dnn_HtmlTextLogs = new EntitySet<dnn_HtmlTextLog>(new Action<dnn_HtmlTextLog>(this.attach_dnn_HtmlTextLogs), new Action<dnn_HtmlTextLog>(this.detach_dnn_HtmlTextLogs));
			this._dnn_HtmlTextUsers = new EntitySet<dnn_HtmlTextUser>(new Action<dnn_HtmlTextUser>(this.attach_dnn_HtmlTextUsers), new Action<dnn_HtmlTextUser>(this.detach_dnn_HtmlTextUsers));
			this._dnn_WorkflowState = default(EntityRef<dnn_WorkflowState>);
			this._dnn_Module = default(EntityRef<dnn_Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._dnn_Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._dnn_WorkflowState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit")]
		public System.Nullable<bool> IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_HtmlText_dnn_HtmlTextLog", Storage="_dnn_HtmlTextLogs", ThisKey="ItemID", OtherKey="ItemID")]
		public EntitySet<dnn_HtmlTextLog> dnn_HtmlTextLogs
		{
			get
			{
				return this._dnn_HtmlTextLogs;
			}
			set
			{
				this._dnn_HtmlTextLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_HtmlText_dnn_HtmlTextUser", Storage="_dnn_HtmlTextUsers", ThisKey="ItemID", OtherKey="ItemID")]
		public EntitySet<dnn_HtmlTextUser> dnn_HtmlTextUsers
		{
			get
			{
				return this._dnn_HtmlTextUsers;
			}
			set
			{
				this._dnn_HtmlTextUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_WorkflowState_dnn_HtmlText", Storage="_dnn_WorkflowState", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public dnn_WorkflowState dnn_WorkflowState
		{
			get
			{
				return this._dnn_WorkflowState.Entity;
			}
			set
			{
				dnn_WorkflowState previousValue = this._dnn_WorkflowState.Entity;
				if (((previousValue != value) 
							|| (this._dnn_WorkflowState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_WorkflowState.Entity = null;
						previousValue.dnn_HtmlTexts.Remove(this);
					}
					this._dnn_WorkflowState.Entity = value;
					if ((value != null))
					{
						value.dnn_HtmlTexts.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_WorkflowState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_HtmlText", Storage="_dnn_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Module dnn_Module
		{
			get
			{
				return this._dnn_Module.Entity;
			}
			set
			{
				dnn_Module previousValue = this._dnn_Module.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Module.Entity = null;
						previousValue.dnn_HtmlTexts.Remove(this);
					}
					this._dnn_Module.Entity = value;
					if ((value != null))
					{
						value.dnn_HtmlTexts.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("dnn_Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_HtmlTextLogs(dnn_HtmlTextLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_HtmlText = this;
		}
		
		private void detach_dnn_HtmlTextLogs(dnn_HtmlTextLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_HtmlText = null;
		}
		
		private void attach_dnn_HtmlTextUsers(dnn_HtmlTextUser entity)
		{
			this.SendPropertyChanging();
			entity.dnn_HtmlText = this;
		}
		
		private void detach_dnn_HtmlTextUsers(dnn_HtmlTextUser entity)
		{
			this.SendPropertyChanging();
			entity.dnn_HtmlText = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_HtmlTextLog")]
	public partial class dnn_HtmlTextLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HtmlTextLogID;
		
		private int _ItemID;
		
		private int _StateID;
		
		private string _Comment;
		
		private bool _Approved;
		
		private int _CreatedByUserID;
		
		private System.DateTime _CreatedOnDate;
		
		private EntityRef<dnn_HtmlText> _dnn_HtmlText;
		
		private EntityRef<dnn_WorkflowState> _dnn_WorkflowState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHtmlTextLogIDChanging(int value);
    partial void OnHtmlTextLogIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    #endregion
		
		public dnn_HtmlTextLog()
		{
			this._dnn_HtmlText = default(EntityRef<dnn_HtmlText>);
			this._dnn_WorkflowState = default(EntityRef<dnn_WorkflowState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlTextLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HtmlTextLogID
		{
			get
			{
				return this._HtmlTextLogID;
			}
			set
			{
				if ((this._HtmlTextLogID != value))
				{
					this.OnHtmlTextLogIDChanging(value);
					this.SendPropertyChanging();
					this._HtmlTextLogID = value;
					this.SendPropertyChanged("HtmlTextLogID");
					this.OnHtmlTextLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._dnn_HtmlText.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._dnn_WorkflowState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(4000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_HtmlText_dnn_HtmlTextLog", Storage="_dnn_HtmlText", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_HtmlText dnn_HtmlText
		{
			get
			{
				return this._dnn_HtmlText.Entity;
			}
			set
			{
				dnn_HtmlText previousValue = this._dnn_HtmlText.Entity;
				if (((previousValue != value) 
							|| (this._dnn_HtmlText.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_HtmlText.Entity = null;
						previousValue.dnn_HtmlTextLogs.Remove(this);
					}
					this._dnn_HtmlText.Entity = value;
					if ((value != null))
					{
						value.dnn_HtmlTextLogs.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("dnn_HtmlText");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_WorkflowState_dnn_HtmlTextLog", Storage="_dnn_WorkflowState", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public dnn_WorkflowState dnn_WorkflowState
		{
			get
			{
				return this._dnn_WorkflowState.Entity;
			}
			set
			{
				dnn_WorkflowState previousValue = this._dnn_WorkflowState.Entity;
				if (((previousValue != value) 
							|| (this._dnn_WorkflowState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_WorkflowState.Entity = null;
						previousValue.dnn_HtmlTextLogs.Remove(this);
					}
					this._dnn_WorkflowState.Entity = value;
					if ((value != null))
					{
						value.dnn_HtmlTextLogs.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(int);
					}
					this.SendPropertyChanged("dnn_WorkflowState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_HtmlTextUsers")]
	public partial class dnn_HtmlTextUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HtmlTextUserID;
		
		private int _ItemID;
		
		private int _StateID;
		
		private int _ModuleID;
		
		private int _TabID;
		
		private int _UserID;
		
		private System.DateTime _CreatedOnDate;
		
		private EntityRef<dnn_HtmlText> _dnn_HtmlText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHtmlTextUserIDChanging(int value);
    partial void OnHtmlTextUserIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    #endregion
		
		public dnn_HtmlTextUser()
		{
			this._dnn_HtmlText = default(EntityRef<dnn_HtmlText>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlTextUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HtmlTextUserID
		{
			get
			{
				return this._HtmlTextUserID;
			}
			set
			{
				if ((this._HtmlTextUserID != value))
				{
					this.OnHtmlTextUserIDChanging(value);
					this.SendPropertyChanging();
					this._HtmlTextUserID = value;
					this.SendPropertyChanged("HtmlTextUserID");
					this.OnHtmlTextUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._dnn_HtmlText.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_HtmlText_dnn_HtmlTextUser", Storage="_dnn_HtmlText", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_HtmlText dnn_HtmlText
		{
			get
			{
				return this._dnn_HtmlText.Entity;
			}
			set
			{
				dnn_HtmlText previousValue = this._dnn_HtmlText.Entity;
				if (((previousValue != value) 
							|| (this._dnn_HtmlText.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_HtmlText.Entity = null;
						previousValue.dnn_HtmlTextUsers.Remove(this);
					}
					this._dnn_HtmlText.Entity = value;
					if ((value != null))
					{
						value.dnn_HtmlTextUsers.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("dnn_HtmlText");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_LanguagePacks")]
	public partial class dnn_LanguagePack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LanguagePackID;
		
		private int _PackageID;
		
		private int _DependentPackageID;
		
		private int _LanguageID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_Language> _dnn_Language;
		
		private EntityRef<dnn_Package> _dnn_Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguagePackIDChanging(int value);
    partial void OnLanguagePackIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnDependentPackageIDChanging(int value);
    partial void OnDependentPackageIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_LanguagePack()
		{
			this._dnn_Language = default(EntityRef<dnn_Language>);
			this._dnn_Package = default(EntityRef<dnn_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguagePackID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LanguagePackID
		{
			get
			{
				return this._LanguagePackID;
			}
			set
			{
				if ((this._LanguagePackID != value))
				{
					this.OnLanguagePackIDChanging(value);
					this.SendPropertyChanging();
					this._LanguagePackID = value;
					this.SendPropertyChanged("LanguagePackID");
					this.OnLanguagePackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._dnn_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DependentPackageID", DbType="Int NOT NULL")]
		public int DependentPackageID
		{
			get
			{
				return this._DependentPackageID;
			}
			set
			{
				if ((this._DependentPackageID != value))
				{
					this.OnDependentPackageIDChanging(value);
					this.SendPropertyChanging();
					this._DependentPackageID = value;
					this.SendPropertyChanged("DependentPackageID");
					this.OnDependentPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._dnn_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Language_dnn_LanguagePack", Storage="_dnn_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Language dnn_Language
		{
			get
			{
				return this._dnn_Language.Entity;
			}
			set
			{
				dnn_Language previousValue = this._dnn_Language.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Language.Entity = null;
						previousValue.dnn_LanguagePacks.Remove(this);
					}
					this._dnn_Language.Entity = value;
					if ((value != null))
					{
						value.dnn_LanguagePacks.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(int);
					}
					this.SendPropertyChanged("dnn_Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_LanguagePack", Storage="_dnn_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Package dnn_Package
		{
			get
			{
				return this._dnn_Package.Entity;
			}
			set
			{
				dnn_Package previousValue = this._dnn_Package.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Package.Entity = null;
						previousValue.dnn_LanguagePacks.Remove(this);
					}
					this._dnn_Package.Entity = value;
					if ((value != null))
					{
						value.dnn_LanguagePacks.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("dnn_Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Languages")]
	public partial class dnn_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LanguageID;
		
		private string _CultureCode;
		
		private string _CultureName;
		
		private string _FallbackCulture;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn_LanguagePack> _dnn_LanguagePacks;
		
		private EntitySet<dnn_PortalLanguage> _dnn_PortalLanguages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnCultureNameChanging(string value);
    partial void OnCultureNameChanged();
    partial void OnFallbackCultureChanging(string value);
    partial void OnFallbackCultureChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_Language()
		{
			this._dnn_LanguagePacks = new EntitySet<dnn_LanguagePack>(new Action<dnn_LanguagePack>(this.attach_dnn_LanguagePacks), new Action<dnn_LanguagePack>(this.detach_dnn_LanguagePacks));
			this._dnn_PortalLanguages = new EntitySet<dnn_PortalLanguage>(new Action<dnn_PortalLanguage>(this.attach_dnn_PortalLanguages), new Action<dnn_PortalLanguage>(this.detach_dnn_PortalLanguages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CultureName
		{
			get
			{
				return this._CultureName;
			}
			set
			{
				if ((this._CultureName != value))
				{
					this.OnCultureNameChanging(value);
					this.SendPropertyChanging();
					this._CultureName = value;
					this.SendPropertyChanged("CultureName");
					this.OnCultureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FallbackCulture", DbType="NVarChar(50)")]
		public string FallbackCulture
		{
			get
			{
				return this._FallbackCulture;
			}
			set
			{
				if ((this._FallbackCulture != value))
				{
					this.OnFallbackCultureChanging(value);
					this.SendPropertyChanging();
					this._FallbackCulture = value;
					this.SendPropertyChanged("FallbackCulture");
					this.OnFallbackCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Language_dnn_LanguagePack", Storage="_dnn_LanguagePacks", ThisKey="LanguageID", OtherKey="LanguageID")]
		public EntitySet<dnn_LanguagePack> dnn_LanguagePacks
		{
			get
			{
				return this._dnn_LanguagePacks;
			}
			set
			{
				this._dnn_LanguagePacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Language_dnn_PortalLanguage", Storage="_dnn_PortalLanguages", ThisKey="LanguageID", OtherKey="LanguageID")]
		public EntitySet<dnn_PortalLanguage> dnn_PortalLanguages
		{
			get
			{
				return this._dnn_PortalLanguages;
			}
			set
			{
				this._dnn_PortalLanguages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_LanguagePacks(dnn_LanguagePack entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Language = this;
		}
		
		private void detach_dnn_LanguagePacks(dnn_LanguagePack entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Language = null;
		}
		
		private void attach_dnn_PortalLanguages(dnn_PortalLanguage entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Language = this;
		}
		
		private void detach_dnn_PortalLanguages(dnn_PortalLanguage entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Links")]
	public partial class dnn_Link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _ModuleID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Title;
		
		private string _Url;
		
		private System.Nullable<int> _ViewOrder;
		
		private string _Description;
		
		private int _CreatedByUser;
		
		private EntityRef<dnn_Module> _dnn_Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnViewOrderChanging(System.Nullable<int> value);
    partial void OnViewOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByUserChanging(int value);
    partial void OnCreatedByUserChanged();
    #endregion
		
		public dnn_Link()
		{
			this._dnn_Module = default(EntityRef<dnn_Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._dnn_Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(250)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int")]
		public System.Nullable<int> ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="Int NOT NULL")]
		public int CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_Link", Storage="_dnn_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Module dnn_Module
		{
			get
			{
				return this._dnn_Module.Entity;
			}
			set
			{
				dnn_Module previousValue = this._dnn_Module.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Module.Entity = null;
						previousValue.dnn_Links.Remove(this);
					}
					this._dnn_Module.Entity = value;
					if ((value != null))
					{
						value.dnn_Links.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("dnn_Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Lists")]
	public partial class dnn_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntryID;
		
		private string _ListName;
		
		private string _Value;
		
		private string _Text;
		
		private int _ParentID;
		
		private int _Level;
		
		private int _SortOrder;
		
		private int _DefinitionID;
		
		private string _Description;
		
		private int _PortalID;
		
		private bool _SystemList;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntryIDChanging(int value);
    partial void OnEntryIDChanged();
    partial void OnListNameChanging(string value);
    partial void OnListNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnDefinitionIDChanging(int value);
    partial void OnDefinitionIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnSystemListChanging(bool value);
    partial void OnSystemListChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_List()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ListName
		{
			get
			{
				return this._ListName;
			}
			set
			{
				if ((this._ListName != value))
				{
					this.OnListNameChanging(value);
					this.SendPropertyChanging();
					this._ListName = value;
					this.SendPropertyChanged("ListName");
					this.OnListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefinitionID", DbType="Int NOT NULL")]
		public int DefinitionID
		{
			get
			{
				return this._DefinitionID;
			}
			set
			{
				if ((this._DefinitionID != value))
				{
					this.OnDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._DefinitionID = value;
					this.SendPropertyChanged("DefinitionID");
					this.OnDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemList", DbType="Bit NOT NULL")]
		public bool SystemList
		{
			get
			{
				return this._SystemList;
			}
			set
			{
				if ((this._SystemList != value))
				{
					this.OnSystemListChanging(value);
					this.SendPropertyChanging();
					this._SystemList = value;
					this.SendPropertyChanged("SystemList");
					this.OnSystemListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Messaging_Messages")]
	public partial class dnn_Messaging_Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MessageID;
		
		private int _PortalID;
		
		private int _FromUserID;
		
		private string _ToUserName;
		
		private string _FromUserName;
		
		private System.Nullable<int> _ToUserID;
		
		private System.Nullable<int> _ToRoleID;
		
		private byte _Status;
		
		private string _Subject;
		
		private string _Body;
		
		private System.DateTime _Date;
		
		private System.Guid _Conversation;
		
		private System.Nullable<long> _ReplyTo;
		
		private bool _AllowReply;
		
		private bool _SkipPortal;
		
		private bool _EmailSent;
		
		private System.Nullable<System.DateTime> _EmailSentDate;
		
		private System.Nullable<System.Guid> _EmailSchedulerInstance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(long value);
    partial void OnMessageIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnFromUserIDChanging(int value);
    partial void OnFromUserIDChanged();
    partial void OnToUserNameChanging(string value);
    partial void OnToUserNameChanged();
    partial void OnFromUserNameChanging(string value);
    partial void OnFromUserNameChanged();
    partial void OnToUserIDChanging(System.Nullable<int> value);
    partial void OnToUserIDChanged();
    partial void OnToRoleIDChanging(System.Nullable<int> value);
    partial void OnToRoleIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnConversationChanging(System.Guid value);
    partial void OnConversationChanged();
    partial void OnReplyToChanging(System.Nullable<long> value);
    partial void OnReplyToChanged();
    partial void OnAllowReplyChanging(bool value);
    partial void OnAllowReplyChanged();
    partial void OnSkipPortalChanging(bool value);
    partial void OnSkipPortalChanged();
    partial void OnEmailSentChanging(bool value);
    partial void OnEmailSentChanged();
    partial void OnEmailSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEmailSentDateChanged();
    partial void OnEmailSchedulerInstanceChanging(System.Nullable<System.Guid> value);
    partial void OnEmailSchedulerInstanceChanged();
    #endregion
		
		public dnn_Messaging_Message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUserID", DbType="Int NOT NULL")]
		public int FromUserID
		{
			get
			{
				return this._FromUserID;
			}
			set
			{
				if ((this._FromUserID != value))
				{
					this.OnFromUserIDChanging(value);
					this.SendPropertyChanging();
					this._FromUserID = value;
					this.SendPropertyChanged("FromUserID");
					this.OnFromUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUserName", DbType="NVarChar(50)")]
		public string ToUserName
		{
			get
			{
				return this._ToUserName;
			}
			set
			{
				if ((this._ToUserName != value))
				{
					this.OnToUserNameChanging(value);
					this.SendPropertyChanging();
					this._ToUserName = value;
					this.SendPropertyChanged("ToUserName");
					this.OnToUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUserName", DbType="NVarChar(50)")]
		public string FromUserName
		{
			get
			{
				return this._FromUserName;
			}
			set
			{
				if ((this._FromUserName != value))
				{
					this.OnFromUserNameChanging(value);
					this.SendPropertyChanging();
					this._FromUserName = value;
					this.SendPropertyChanged("FromUserName");
					this.OnFromUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUserID", DbType="Int")]
		public System.Nullable<int> ToUserID
		{
			get
			{
				return this._ToUserID;
			}
			set
			{
				if ((this._ToUserID != value))
				{
					this.OnToUserIDChanging(value);
					this.SendPropertyChanging();
					this._ToUserID = value;
					this.SendPropertyChanged("ToUserID");
					this.OnToUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToRoleID", DbType="Int")]
		public System.Nullable<int> ToRoleID
		{
			get
			{
				return this._ToRoleID;
			}
			set
			{
				if ((this._ToRoleID != value))
				{
					this.OnToRoleIDChanging(value);
					this.SendPropertyChanging();
					this._ToRoleID = value;
					this.SendPropertyChanged("ToRoleID");
					this.OnToRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(MAX)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conversation", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Conversation
		{
			get
			{
				return this._Conversation;
			}
			set
			{
				if ((this._Conversation != value))
				{
					this.OnConversationChanging(value);
					this.SendPropertyChanging();
					this._Conversation = value;
					this.SendPropertyChanged("Conversation");
					this.OnConversationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyTo", DbType="BigInt")]
		public System.Nullable<long> ReplyTo
		{
			get
			{
				return this._ReplyTo;
			}
			set
			{
				if ((this._ReplyTo != value))
				{
					this.OnReplyToChanging(value);
					this.SendPropertyChanging();
					this._ReplyTo = value;
					this.SendPropertyChanged("ReplyTo");
					this.OnReplyToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowReply", DbType="Bit NOT NULL")]
		public bool AllowReply
		{
			get
			{
				return this._AllowReply;
			}
			set
			{
				if ((this._AllowReply != value))
				{
					this.OnAllowReplyChanging(value);
					this.SendPropertyChanging();
					this._AllowReply = value;
					this.SendPropertyChanged("AllowReply");
					this.OnAllowReplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkipPortal", DbType="Bit NOT NULL")]
		public bool SkipPortal
		{
			get
			{
				return this._SkipPortal;
			}
			set
			{
				if ((this._SkipPortal != value))
				{
					this.OnSkipPortalChanging(value);
					this.SendPropertyChanging();
					this._SkipPortal = value;
					this.SendPropertyChanged("SkipPortal");
					this.OnSkipPortalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSent", DbType="Bit NOT NULL")]
		public bool EmailSent
		{
			get
			{
				return this._EmailSent;
			}
			set
			{
				if ((this._EmailSent != value))
				{
					this.OnEmailSentChanging(value);
					this.SendPropertyChanging();
					this._EmailSent = value;
					this.SendPropertyChanged("EmailSent");
					this.OnEmailSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EmailSentDate
		{
			get
			{
				return this._EmailSentDate;
			}
			set
			{
				if ((this._EmailSentDate != value))
				{
					this.OnEmailSentDateChanging(value);
					this.SendPropertyChanging();
					this._EmailSentDate = value;
					this.SendPropertyChanged("EmailSentDate");
					this.OnEmailSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSchedulerInstance", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EmailSchedulerInstance
		{
			get
			{
				return this._EmailSchedulerInstance;
			}
			set
			{
				if ((this._EmailSchedulerInstance != value))
				{
					this.OnEmailSchedulerInstanceChanging(value);
					this.SendPropertyChanging();
					this._EmailSchedulerInstance = value;
					this.SendPropertyChanged("EmailSchedulerInstance");
					this.OnEmailSchedulerInstanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_MetaData")]
	public partial class dnn_MetaData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MetaDataID;
		
		private string _MetaDataName;
		
		private string _MetaDataDescription;
		
		private EntitySet<dnn_ContentItems_MetaData> _dnn_ContentItems_MetaDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMetaDataIDChanging(int value);
    partial void OnMetaDataIDChanged();
    partial void OnMetaDataNameChanging(string value);
    partial void OnMetaDataNameChanged();
    partial void OnMetaDataDescriptionChanging(string value);
    partial void OnMetaDataDescriptionChanged();
    #endregion
		
		public dnn_MetaData()
		{
			this._dnn_ContentItems_MetaDatas = new EntitySet<dnn_ContentItems_MetaData>(new Action<dnn_ContentItems_MetaData>(this.attach_dnn_ContentItems_MetaDatas), new Action<dnn_ContentItems_MetaData>(this.detach_dnn_ContentItems_MetaDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDataID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MetaDataID
		{
			get
			{
				return this._MetaDataID;
			}
			set
			{
				if ((this._MetaDataID != value))
				{
					this.OnMetaDataIDChanging(value);
					this.SendPropertyChanging();
					this._MetaDataID = value;
					this.SendPropertyChanged("MetaDataID");
					this.OnMetaDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDataName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MetaDataName
		{
			get
			{
				return this._MetaDataName;
			}
			set
			{
				if ((this._MetaDataName != value))
				{
					this.OnMetaDataNameChanging(value);
					this.SendPropertyChanging();
					this._MetaDataName = value;
					this.SendPropertyChanged("MetaDataName");
					this.OnMetaDataNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDataDescription", DbType="NVarChar(2500)")]
		public string MetaDataDescription
		{
			get
			{
				return this._MetaDataDescription;
			}
			set
			{
				if ((this._MetaDataDescription != value))
				{
					this.OnMetaDataDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDataDescription = value;
					this.SendPropertyChanged("MetaDataDescription");
					this.OnMetaDataDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_MetaData_dnn_ContentItems_MetaData", Storage="_dnn_ContentItems_MetaDatas", ThisKey="MetaDataID", OtherKey="MetaDataID")]
		public EntitySet<dnn_ContentItems_MetaData> dnn_ContentItems_MetaDatas
		{
			get
			{
				return this._dnn_ContentItems_MetaDatas;
			}
			set
			{
				this._dnn_ContentItems_MetaDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_ContentItems_MetaDatas(dnn_ContentItems_MetaData entity)
		{
			this.SendPropertyChanging();
			entity.dnn_MetaData = this;
		}
		
		private void detach_dnn_ContentItems_MetaDatas(dnn_ContentItems_MetaData entity)
		{
			this.SendPropertyChanging();
			entity.dnn_MetaData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Mobile_PreviewProfiles")]
	public partial class dnn_Mobile_PreviewProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PortalId;
		
		private string _Name;
		
		private int _Width;
		
		private int _Height;
		
		private string _UserAgent;
		
		private int _SortOrder;
		
		private int _CreatedByUserID;
		
		private System.DateTime _CreatedOnDate;
		
		private int _LastModifiedByUserID;
		
		private System.DateTime _LastModifiedOnDate;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(int value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.DateTime value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_Mobile_PreviewProfile()
		{
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="NVarChar(260) NOT NULL", CanBeNull=false)]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int NOT NULL")]
		public int LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Mobile_PreviewProfile", Storage="_dnn_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_Mobile_PreviewProfiles.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_Mobile_PreviewProfiles.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Mobile_RedirectionRules")]
	public partial class dnn_Mobile_RedirectionRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RedirectionId;
		
		private string _Capability;
		
		private string _Expression;
		
		private EntityRef<dnn_Mobile_Redirection> _dnn_Mobile_Redirection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRedirectionIdChanging(int value);
    partial void OnRedirectionIdChanged();
    partial void OnCapabilityChanging(string value);
    partial void OnCapabilityChanged();
    partial void OnExpressionChanging(string value);
    partial void OnExpressionChanged();
    #endregion
		
		public dnn_Mobile_RedirectionRule()
		{
			this._dnn_Mobile_Redirection = default(EntityRef<dnn_Mobile_Redirection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedirectionId", DbType="Int NOT NULL")]
		public int RedirectionId
		{
			get
			{
				return this._RedirectionId;
			}
			set
			{
				if ((this._RedirectionId != value))
				{
					if (this._dnn_Mobile_Redirection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRedirectionIdChanging(value);
					this.SendPropertyChanging();
					this._RedirectionId = value;
					this.SendPropertyChanged("RedirectionId");
					this.OnRedirectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capability", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Capability
		{
			get
			{
				return this._Capability;
			}
			set
			{
				if ((this._Capability != value))
				{
					this.OnCapabilityChanging(value);
					this.SendPropertyChanging();
					this._Capability = value;
					this.SendPropertyChanged("Capability");
					this.OnCapabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expression", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Expression
		{
			get
			{
				return this._Expression;
			}
			set
			{
				if ((this._Expression != value))
				{
					this.OnExpressionChanging(value);
					this.SendPropertyChanging();
					this._Expression = value;
					this.SendPropertyChanged("Expression");
					this.OnExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Mobile_Redirection_dnn_Mobile_RedirectionRule", Storage="_dnn_Mobile_Redirection", ThisKey="RedirectionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Mobile_Redirection dnn_Mobile_Redirection
		{
			get
			{
				return this._dnn_Mobile_Redirection.Entity;
			}
			set
			{
				dnn_Mobile_Redirection previousValue = this._dnn_Mobile_Redirection.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Mobile_Redirection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Mobile_Redirection.Entity = null;
						previousValue.dnn_Mobile_RedirectionRules.Remove(this);
					}
					this._dnn_Mobile_Redirection.Entity = value;
					if ((value != null))
					{
						value.dnn_Mobile_RedirectionRules.Add(this);
						this._RedirectionId = value.Id;
					}
					else
					{
						this._RedirectionId = default(int);
					}
					this.SendPropertyChanged("dnn_Mobile_Redirection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Mobile_Redirections")]
	public partial class dnn_Mobile_Redirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PortalId;
		
		private string _Name;
		
		private int _Type;
		
		private int _SortOrder;
		
		private int _SourceTabId;
		
		private bool _IncludeChildTabs;
		
		private int _TargetType;
		
		private string _TargetValue;
		
		private bool _Enabled;
		
		private int _CreatedByUserID;
		
		private System.DateTime _CreatedOnDate;
		
		private int _LastModifiedByUserID;
		
		private System.DateTime _LastModifiedOnDate;
		
		private EntitySet<dnn_Mobile_RedirectionRule> _dnn_Mobile_RedirectionRules;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnSourceTabIdChanging(int value);
    partial void OnSourceTabIdChanged();
    partial void OnIncludeChildTabsChanging(bool value);
    partial void OnIncludeChildTabsChanged();
    partial void OnTargetTypeChanging(int value);
    partial void OnTargetTypeChanged();
    partial void OnTargetValueChanging(string value);
    partial void OnTargetValueChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.DateTime value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(int value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.DateTime value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_Mobile_Redirection()
		{
			this._dnn_Mobile_RedirectionRules = new EntitySet<dnn_Mobile_RedirectionRule>(new Action<dnn_Mobile_RedirectionRule>(this.attach_dnn_Mobile_RedirectionRules), new Action<dnn_Mobile_RedirectionRule>(this.detach_dnn_Mobile_RedirectionRules));
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceTabId", DbType="Int NOT NULL")]
		public int SourceTabId
		{
			get
			{
				return this._SourceTabId;
			}
			set
			{
				if ((this._SourceTabId != value))
				{
					this.OnSourceTabIdChanging(value);
					this.SendPropertyChanging();
					this._SourceTabId = value;
					this.SendPropertyChanged("SourceTabId");
					this.OnSourceTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeChildTabs", DbType="Bit NOT NULL")]
		public bool IncludeChildTabs
		{
			get
			{
				return this._IncludeChildTabs;
			}
			set
			{
				if ((this._IncludeChildTabs != value))
				{
					this.OnIncludeChildTabsChanging(value);
					this.SendPropertyChanging();
					this._IncludeChildTabs = value;
					this.SendPropertyChanged("IncludeChildTabs");
					this.OnIncludeChildTabsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="Int NOT NULL")]
		public int TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetValue", DbType="NVarChar(260) NOT NULL", CanBeNull=false)]
		public string TargetValue
		{
			get
			{
				return this._TargetValue;
			}
			set
			{
				if ((this._TargetValue != value))
				{
					this.OnTargetValueChanging(value);
					this.SendPropertyChanging();
					this._TargetValue = value;
					this.SendPropertyChanged("TargetValue");
					this.OnTargetValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int NOT NULL")]
		public int LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Mobile_Redirection_dnn_Mobile_RedirectionRule", Storage="_dnn_Mobile_RedirectionRules", ThisKey="Id", OtherKey="RedirectionId")]
		public EntitySet<dnn_Mobile_RedirectionRule> dnn_Mobile_RedirectionRules
		{
			get
			{
				return this._dnn_Mobile_RedirectionRules;
			}
			set
			{
				this._dnn_Mobile_RedirectionRules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Mobile_Redirection", Storage="_dnn_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_Mobile_Redirections.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_Mobile_Redirections.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_Mobile_RedirectionRules(dnn_Mobile_RedirectionRule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Mobile_Redirection = this;
		}
		
		private void detach_dnn_Mobile_RedirectionRules(dnn_Mobile_RedirectionRule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Mobile_Redirection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_ModuleControls")]
	public partial class dnn_ModuleControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleControlID;
		
		private System.Nullable<int> _ModuleDefID;
		
		private string _ControlKey;
		
		private string _ControlTitle;
		
		private string _ControlSrc;
		
		private string _IconFile;
		
		private int _ControlType;
		
		private System.Nullable<int> _ViewOrder;
		
		private string _HelpUrl;
		
		private bool _SupportsPartialRendering;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private bool _SupportsPopUps;
		
		private EntityRef<dnn_ModuleDefinition> _dnn_ModuleDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleControlIDChanging(int value);
    partial void OnModuleControlIDChanged();
    partial void OnModuleDefIDChanging(System.Nullable<int> value);
    partial void OnModuleDefIDChanged();
    partial void OnControlKeyChanging(string value);
    partial void OnControlKeyChanged();
    partial void OnControlTitleChanging(string value);
    partial void OnControlTitleChanged();
    partial void OnControlSrcChanging(string value);
    partial void OnControlSrcChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    partial void OnControlTypeChanging(int value);
    partial void OnControlTypeChanged();
    partial void OnViewOrderChanging(System.Nullable<int> value);
    partial void OnViewOrderChanged();
    partial void OnHelpUrlChanging(string value);
    partial void OnHelpUrlChanged();
    partial void OnSupportsPartialRenderingChanging(bool value);
    partial void OnSupportsPartialRenderingChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnSupportsPopUpsChanging(bool value);
    partial void OnSupportsPopUpsChanged();
    #endregion
		
		public dnn_ModuleControl()
		{
			this._dnn_ModuleDefinition = default(EntityRef<dnn_ModuleDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleControlID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModuleControlID
		{
			get
			{
				return this._ModuleControlID;
			}
			set
			{
				if ((this._ModuleControlID != value))
				{
					this.OnModuleControlIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleControlID = value;
					this.SendPropertyChanged("ModuleControlID");
					this.OnModuleControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int")]
		public System.Nullable<int> ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					if (this._dnn_ModuleDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="NVarChar(50)")]
		public string ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTitle", DbType="NVarChar(50)")]
		public string ControlTitle
		{
			get
			{
				return this._ControlTitle;
			}
			set
			{
				if ((this._ControlTitle != value))
				{
					this.OnControlTitleChanging(value);
					this.SendPropertyChanging();
					this._ControlTitle = value;
					this.SendPropertyChanged("ControlTitle");
					this.OnControlTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlSrc", DbType="NVarChar(256)")]
		public string ControlSrc
		{
			get
			{
				return this._ControlSrc;
			}
			set
			{
				if ((this._ControlSrc != value))
				{
					this.OnControlSrcChanging(value);
					this.SendPropertyChanging();
					this._ControlSrc = value;
					this.SendPropertyChanged("ControlSrc");
					this.OnControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlType", DbType="Int NOT NULL")]
		public int ControlType
		{
			get
			{
				return this._ControlType;
			}
			set
			{
				if ((this._ControlType != value))
				{
					this.OnControlTypeChanging(value);
					this.SendPropertyChanging();
					this._ControlType = value;
					this.SendPropertyChanged("ControlType");
					this.OnControlTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int")]
		public System.Nullable<int> ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpUrl", DbType="NVarChar(200)")]
		public string HelpUrl
		{
			get
			{
				return this._HelpUrl;
			}
			set
			{
				if ((this._HelpUrl != value))
				{
					this.OnHelpUrlChanging(value);
					this.SendPropertyChanging();
					this._HelpUrl = value;
					this.SendPropertyChanged("HelpUrl");
					this.OnHelpUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportsPartialRendering", DbType="Bit NOT NULL")]
		public bool SupportsPartialRendering
		{
			get
			{
				return this._SupportsPartialRendering;
			}
			set
			{
				if ((this._SupportsPartialRendering != value))
				{
					this.OnSupportsPartialRenderingChanging(value);
					this.SendPropertyChanging();
					this._SupportsPartialRendering = value;
					this.SendPropertyChanged("SupportsPartialRendering");
					this.OnSupportsPartialRenderingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportsPopUps", DbType="Bit NOT NULL")]
		public bool SupportsPopUps
		{
			get
			{
				return this._SupportsPopUps;
			}
			set
			{
				if ((this._SupportsPopUps != value))
				{
					this.OnSupportsPopUpsChanging(value);
					this.SendPropertyChanging();
					this._SupportsPopUps = value;
					this.SendPropertyChanged("SupportsPopUps");
					this.OnSupportsPopUpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ModuleDefinition_dnn_ModuleControl", Storage="_dnn_ModuleDefinition", ThisKey="ModuleDefID", OtherKey="ModuleDefID", IsForeignKey=true, DeleteRule="CASCADE")]
		public dnn_ModuleDefinition dnn_ModuleDefinition
		{
			get
			{
				return this._dnn_ModuleDefinition.Entity;
			}
			set
			{
				dnn_ModuleDefinition previousValue = this._dnn_ModuleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._dnn_ModuleDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_ModuleDefinition.Entity = null;
						previousValue.dnn_ModuleControls.Remove(this);
					}
					this._dnn_ModuleDefinition.Entity = value;
					if ((value != null))
					{
						value.dnn_ModuleControls.Add(this);
						this._ModuleDefID = value.ModuleDefID;
					}
					else
					{
						this._ModuleDefID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_ModuleDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_ModuleDefinitions")]
	public partial class dnn_ModuleDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleDefID;
		
		private string _FriendlyName;
		
		private int _DesktopModuleID;
		
		private int _DefaultCacheTime;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn_ModuleControl> _dnn_ModuleControls;
		
		private EntitySet<dnn_Module> _dnn_Modules;
		
		private EntityRef<dnn_DesktopModule> _dnn_DesktopModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleDefIDChanging(int value);
    partial void OnModuleDefIDChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnDesktopModuleIDChanging(int value);
    partial void OnDesktopModuleIDChanged();
    partial void OnDefaultCacheTimeChanging(int value);
    partial void OnDefaultCacheTimeChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_ModuleDefinition()
		{
			this._dnn_ModuleControls = new EntitySet<dnn_ModuleControl>(new Action<dnn_ModuleControl>(this.attach_dnn_ModuleControls), new Action<dnn_ModuleControl>(this.detach_dnn_ModuleControls));
			this._dnn_Modules = new EntitySet<dnn_Module>(new Action<dnn_Module>(this.attach_dnn_Modules), new Action<dnn_Module>(this.detach_dnn_Modules));
			this._dnn_DesktopModule = default(EntityRef<dnn_DesktopModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopModuleID", DbType="Int NOT NULL")]
		public int DesktopModuleID
		{
			get
			{
				return this._DesktopModuleID;
			}
			set
			{
				if ((this._DesktopModuleID != value))
				{
					if (this._dnn_DesktopModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesktopModuleIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopModuleID = value;
					this.SendPropertyChanged("DesktopModuleID");
					this.OnDesktopModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultCacheTime", DbType="Int NOT NULL")]
		public int DefaultCacheTime
		{
			get
			{
				return this._DefaultCacheTime;
			}
			set
			{
				if ((this._DefaultCacheTime != value))
				{
					this.OnDefaultCacheTimeChanging(value);
					this.SendPropertyChanging();
					this._DefaultCacheTime = value;
					this.SendPropertyChanged("DefaultCacheTime");
					this.OnDefaultCacheTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ModuleDefinition_dnn_ModuleControl", Storage="_dnn_ModuleControls", ThisKey="ModuleDefID", OtherKey="ModuleDefID")]
		public EntitySet<dnn_ModuleControl> dnn_ModuleControls
		{
			get
			{
				return this._dnn_ModuleControls;
			}
			set
			{
				this._dnn_ModuleControls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ModuleDefinition_dnn_Module", Storage="_dnn_Modules", ThisKey="ModuleDefID", OtherKey="ModuleDefID")]
		public EntitySet<dnn_Module> dnn_Modules
		{
			get
			{
				return this._dnn_Modules;
			}
			set
			{
				this._dnn_Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_DesktopModule_dnn_ModuleDefinition", Storage="_dnn_DesktopModule", ThisKey="DesktopModuleID", OtherKey="DesktopModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_DesktopModule dnn_DesktopModule
		{
			get
			{
				return this._dnn_DesktopModule.Entity;
			}
			set
			{
				dnn_DesktopModule previousValue = this._dnn_DesktopModule.Entity;
				if (((previousValue != value) 
							|| (this._dnn_DesktopModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_DesktopModule.Entity = null;
						previousValue.dnn_ModuleDefinitions.Remove(this);
					}
					this._dnn_DesktopModule.Entity = value;
					if ((value != null))
					{
						value.dnn_ModuleDefinitions.Add(this);
						this._DesktopModuleID = value.DesktopModuleID;
					}
					else
					{
						this._DesktopModuleID = default(int);
					}
					this.SendPropertyChanged("dnn_DesktopModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_ModuleControls(dnn_ModuleControl entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ModuleDefinition = this;
		}
		
		private void detach_dnn_ModuleControls(dnn_ModuleControl entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ModuleDefinition = null;
		}
		
		private void attach_dnn_Modules(dnn_Module entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ModuleDefinition = this;
		}
		
		private void detach_dnn_Modules(dnn_Module entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ModuleDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_ModulePermission")]
	public partial class dnn_ModulePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModulePermissionID;
		
		private int _ModuleID;
		
		private int _PermissionID;
		
		private bool _AllowAccess;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_Module> _dnn_Module;
		
		private EntityRef<dnn_Permission> _dnn_Permission;
		
		private EntityRef<dnn_User> _dnn_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModulePermissionIDChanging(int value);
    partial void OnModulePermissionIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnAllowAccessChanging(bool value);
    partial void OnAllowAccessChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_ModulePermission()
		{
			this._dnn_Module = default(EntityRef<dnn_Module>);
			this._dnn_Permission = default(EntityRef<dnn_Permission>);
			this._dnn_User = default(EntityRef<dnn_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModulePermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModulePermissionID
		{
			get
			{
				return this._ModulePermissionID;
			}
			set
			{
				if ((this._ModulePermissionID != value))
				{
					this.OnModulePermissionIDChanging(value);
					this.SendPropertyChanging();
					this._ModulePermissionID = value;
					this.SendPropertyChanged("ModulePermissionID");
					this.OnModulePermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._dnn_Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="Int NOT NULL")]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					if (this._dnn_Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAccess", DbType="Bit NOT NULL")]
		public bool AllowAccess
		{
			get
			{
				return this._AllowAccess;
			}
			set
			{
				if ((this._AllowAccess != value))
				{
					this.OnAllowAccessChanging(value);
					this.SendPropertyChanging();
					this._AllowAccess = value;
					this.SendPropertyChanged("AllowAccess");
					this.OnAllowAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._dnn_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_ModulePermission", Storage="_dnn_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Module dnn_Module
		{
			get
			{
				return this._dnn_Module.Entity;
			}
			set
			{
				dnn_Module previousValue = this._dnn_Module.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Module.Entity = null;
						previousValue.dnn_ModulePermissions.Remove(this);
					}
					this._dnn_Module.Entity = value;
					if ((value != null))
					{
						value.dnn_ModulePermissions.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("dnn_Module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Permission_dnn_ModulePermission", Storage="_dnn_Permission", ThisKey="PermissionID", OtherKey="PermissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Permission dnn_Permission
		{
			get
			{
				return this._dnn_Permission.Entity;
			}
			set
			{
				dnn_Permission previousValue = this._dnn_Permission.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Permission.Entity = null;
						previousValue.dnn_ModulePermissions.Remove(this);
					}
					this._dnn_Permission.Entity = value;
					if ((value != null))
					{
						value.dnn_ModulePermissions.Add(this);
						this._PermissionID = value.PermissionID;
					}
					else
					{
						this._PermissionID = default(int);
					}
					this.SendPropertyChanged("dnn_Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_ModulePermission", Storage="_dnn_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public dnn_User dnn_User
		{
			get
			{
				return this._dnn_User.Entity;
			}
			set
			{
				dnn_User previousValue = this._dnn_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_User.Entity = null;
						previousValue.dnn_ModulePermissions.Remove(this);
					}
					this._dnn_User.Entity = value;
					if ((value != null))
					{
						value.dnn_ModulePermissions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Modules")]
	public partial class dnn_Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private int _ModuleDefID;
		
		private bool _AllTabs;
		
		private bool _IsDeleted;
		
		private System.Nullable<bool> _InheritViewPermissions;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _PortalID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.DateTime _LastContentModifiedOnDate;
		
		private System.Nullable<int> _ContentItemID;
		
		private EntitySet<dnn_HtmlText> _dnn_HtmlTexts;
		
		private EntitySet<dnn_Link> _dnn_Links;
		
		private EntitySet<dnn_ModulePermission> _dnn_ModulePermissions;
		
		private EntitySet<dnn_ModuleSetting> _dnn_ModuleSettings;
		
		private EntitySet<dnn_MySite_Article> _dnn_MySite_Articles;
		
		private EntitySet<dnn_SearchItem> _dnn_SearchItems;
		
		private EntitySet<dnn_TabModule> _dnn_TabModules;
		
		private EntityRef<dnn_ContentItem> _dnn_ContentItem;
		
		private EntityRef<dnn_ModuleDefinition> _dnn_ModuleDefinition;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnModuleDefIDChanging(int value);
    partial void OnModuleDefIDChanged();
    partial void OnAllTabsChanging(bool value);
    partial void OnAllTabsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnInheritViewPermissionsChanging(System.Nullable<bool> value);
    partial void OnInheritViewPermissionsChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnLastContentModifiedOnDateChanging(System.DateTime value);
    partial void OnLastContentModifiedOnDateChanged();
    partial void OnContentItemIDChanging(System.Nullable<int> value);
    partial void OnContentItemIDChanged();
    #endregion
		
		public dnn_Module()
		{
			this._dnn_HtmlTexts = new EntitySet<dnn_HtmlText>(new Action<dnn_HtmlText>(this.attach_dnn_HtmlTexts), new Action<dnn_HtmlText>(this.detach_dnn_HtmlTexts));
			this._dnn_Links = new EntitySet<dnn_Link>(new Action<dnn_Link>(this.attach_dnn_Links), new Action<dnn_Link>(this.detach_dnn_Links));
			this._dnn_ModulePermissions = new EntitySet<dnn_ModulePermission>(new Action<dnn_ModulePermission>(this.attach_dnn_ModulePermissions), new Action<dnn_ModulePermission>(this.detach_dnn_ModulePermissions));
			this._dnn_ModuleSettings = new EntitySet<dnn_ModuleSetting>(new Action<dnn_ModuleSetting>(this.attach_dnn_ModuleSettings), new Action<dnn_ModuleSetting>(this.detach_dnn_ModuleSettings));
			this._dnn_MySite_Articles = new EntitySet<dnn_MySite_Article>(new Action<dnn_MySite_Article>(this.attach_dnn_MySite_Articles), new Action<dnn_MySite_Article>(this.detach_dnn_MySite_Articles));
			this._dnn_SearchItems = new EntitySet<dnn_SearchItem>(new Action<dnn_SearchItem>(this.attach_dnn_SearchItems), new Action<dnn_SearchItem>(this.detach_dnn_SearchItems));
			this._dnn_TabModules = new EntitySet<dnn_TabModule>(new Action<dnn_TabModule>(this.attach_dnn_TabModules), new Action<dnn_TabModule>(this.detach_dnn_TabModules));
			this._dnn_ContentItem = default(EntityRef<dnn_ContentItem>);
			this._dnn_ModuleDefinition = default(EntityRef<dnn_ModuleDefinition>);
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int NOT NULL")]
		public int ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					if (this._dnn_ModuleDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllTabs", DbType="Bit NOT NULL")]
		public bool AllTabs
		{
			get
			{
				return this._AllTabs;
			}
			set
			{
				if ((this._AllTabs != value))
				{
					this.OnAllTabsChanging(value);
					this.SendPropertyChanging();
					this._AllTabs = value;
					this.SendPropertyChanged("AllTabs");
					this.OnAllTabsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InheritViewPermissions", DbType="Bit")]
		public System.Nullable<bool> InheritViewPermissions
		{
			get
			{
				return this._InheritViewPermissions;
			}
			set
			{
				if ((this._InheritViewPermissions != value))
				{
					this.OnInheritViewPermissionsChanging(value);
					this.SendPropertyChanging();
					this._InheritViewPermissions = value;
					this.SendPropertyChanged("InheritViewPermissions");
					this.OnInheritViewPermissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastContentModifiedOnDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastContentModifiedOnDate
		{
			get
			{
				return this._LastContentModifiedOnDate;
			}
			set
			{
				if ((this._LastContentModifiedOnDate != value))
				{
					this.OnLastContentModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastContentModifiedOnDate = value;
					this.SendPropertyChanged("LastContentModifiedOnDate");
					this.OnLastContentModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", DbType="Int")]
		public System.Nullable<int> ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					if (this._dnn_ContentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_HtmlText", Storage="_dnn_HtmlTexts", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<dnn_HtmlText> dnn_HtmlTexts
		{
			get
			{
				return this._dnn_HtmlTexts;
			}
			set
			{
				this._dnn_HtmlTexts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_Link", Storage="_dnn_Links", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<dnn_Link> dnn_Links
		{
			get
			{
				return this._dnn_Links;
			}
			set
			{
				this._dnn_Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_ModulePermission", Storage="_dnn_ModulePermissions", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<dnn_ModulePermission> dnn_ModulePermissions
		{
			get
			{
				return this._dnn_ModulePermissions;
			}
			set
			{
				this._dnn_ModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_ModuleSetting", Storage="_dnn_ModuleSettings", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<dnn_ModuleSetting> dnn_ModuleSettings
		{
			get
			{
				return this._dnn_ModuleSettings;
			}
			set
			{
				this._dnn_ModuleSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_MySite_Article", Storage="_dnn_MySite_Articles", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<dnn_MySite_Article> dnn_MySite_Articles
		{
			get
			{
				return this._dnn_MySite_Articles;
			}
			set
			{
				this._dnn_MySite_Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_SearchItem", Storage="_dnn_SearchItems", ThisKey="ModuleID", OtherKey="ModuleId")]
		public EntitySet<dnn_SearchItem> dnn_SearchItems
		{
			get
			{
				return this._dnn_SearchItems;
			}
			set
			{
				this._dnn_SearchItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_TabModule", Storage="_dnn_TabModules", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<dnn_TabModule> dnn_TabModules
		{
			get
			{
				return this._dnn_TabModules;
			}
			set
			{
				this._dnn_TabModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ContentItem_dnn_Module", Storage="_dnn_ContentItem", ThisKey="ContentItemID", OtherKey="ContentItemID", IsForeignKey=true)]
		public dnn_ContentItem dnn_ContentItem
		{
			get
			{
				return this._dnn_ContentItem.Entity;
			}
			set
			{
				dnn_ContentItem previousValue = this._dnn_ContentItem.Entity;
				if (((previousValue != value) 
							|| (this._dnn_ContentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_ContentItem.Entity = null;
						previousValue.dnn_Modules.Remove(this);
					}
					this._dnn_ContentItem.Entity = value;
					if ((value != null))
					{
						value.dnn_Modules.Add(this);
						this._ContentItemID = value.ContentItemID;
					}
					else
					{
						this._ContentItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_ContentItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ModuleDefinition_dnn_Module", Storage="_dnn_ModuleDefinition", ThisKey="ModuleDefID", OtherKey="ModuleDefID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_ModuleDefinition dnn_ModuleDefinition
		{
			get
			{
				return this._dnn_ModuleDefinition.Entity;
			}
			set
			{
				dnn_ModuleDefinition previousValue = this._dnn_ModuleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._dnn_ModuleDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_ModuleDefinition.Entity = null;
						previousValue.dnn_Modules.Remove(this);
					}
					this._dnn_ModuleDefinition.Entity = value;
					if ((value != null))
					{
						value.dnn_Modules.Add(this);
						this._ModuleDefID = value.ModuleDefID;
					}
					else
					{
						this._ModuleDefID = default(int);
					}
					this.SendPropertyChanged("dnn_ModuleDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Module", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true)]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_Modules.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_Modules.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_HtmlTexts(dnn_HtmlText entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = this;
		}
		
		private void detach_dnn_HtmlTexts(dnn_HtmlText entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = null;
		}
		
		private void attach_dnn_Links(dnn_Link entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = this;
		}
		
		private void detach_dnn_Links(dnn_Link entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = null;
		}
		
		private void attach_dnn_ModulePermissions(dnn_ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = this;
		}
		
		private void detach_dnn_ModulePermissions(dnn_ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = null;
		}
		
		private void attach_dnn_ModuleSettings(dnn_ModuleSetting entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = this;
		}
		
		private void detach_dnn_ModuleSettings(dnn_ModuleSetting entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = null;
		}
		
		private void attach_dnn_MySite_Articles(dnn_MySite_Article entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = this;
		}
		
		private void detach_dnn_MySite_Articles(dnn_MySite_Article entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = null;
		}
		
		private void attach_dnn_SearchItems(dnn_SearchItem entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = this;
		}
		
		private void detach_dnn_SearchItems(dnn_SearchItem entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = null;
		}
		
		private void attach_dnn_TabModules(dnn_TabModule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = this;
		}
		
		private void detach_dnn_TabModules(dnn_TabModule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_ModuleSettings")]
	public partial class dnn_ModuleSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_Module> _dnn_Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_ModuleSetting()
		{
			this._dnn_Module = default(EntityRef<dnn_Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._dnn_Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_ModuleSetting", Storage="_dnn_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Module dnn_Module
		{
			get
			{
				return this._dnn_Module.Entity;
			}
			set
			{
				dnn_Module previousValue = this._dnn_Module.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Module.Entity = null;
						previousValue.dnn_ModuleSettings.Remove(this);
					}
					this._dnn_Module.Entity = value;
					if ((value != null))
					{
						value.dnn_ModuleSettings.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("dnn_Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_MySite_Article")]
	public partial class dnn_MySite_Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private int _ItemID;
		
		private string _Title;
		
		private string _Summary;
		
		private string _Author;
		
		private string _Image;
		
		private string _Content;
		
		private int _CreatedByUser;
		
		private System.DateTime _CreatedDate;
		
		private EntityRef<dnn_Module> _dnn_Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedByUserChanging(int value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public dnn_MySite_Article()
		{
			this._dnn_Module = default(EntityRef<dnn_Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._dnn_Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="Int NOT NULL")]
		public int CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_MySite_Article", Storage="_dnn_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Module dnn_Module
		{
			get
			{
				return this._dnn_Module.Entity;
			}
			set
			{
				dnn_Module previousValue = this._dnn_Module.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Module.Entity = null;
						previousValue.dnn_MySite_Articles.Remove(this);
					}
					this._dnn_Module.Entity = value;
					if ((value != null))
					{
						value.dnn_MySite_Articles.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("dnn_Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_NewNews_Articles")]
	public partial class dnn_NewNews_Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArticleID;
		
		private System.Nullable<int> _CatID;
		
		private string _Title;
		
		private string _Summary;
		
		private string _Image;
		
		private string _Content;
		
		private int _CreatedByUser;
		
		private System.DateTime _CreatedDate;
		
		private EntityRef<dnn_NewNews_Category> _dnn_NewNews_Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleIDChanging(int value);
    partial void OnArticleIDChanged();
    partial void OnCatIDChanging(System.Nullable<int> value);
    partial void OnCatIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedByUserChanging(int value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public dnn_NewNews_Article()
		{
			this._dnn_NewNews_Category = default(EntityRef<dnn_NewNews_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArticleID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					this.OnArticleIDChanging(value);
					this.SendPropertyChanging();
					this._ArticleID = value;
					this.SendPropertyChanged("ArticleID");
					this.OnArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int")]
		public System.Nullable<int> CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					if (this._dnn_NewNews_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="Int NOT NULL")]
		public int CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_NewNews_Category_dnn_NewNews_Article", Storage="_dnn_NewNews_Category", ThisKey="CatID", OtherKey="CatID", IsForeignKey=true, DeleteRule="SET NULL")]
		public dnn_NewNews_Category dnn_NewNews_Category
		{
			get
			{
				return this._dnn_NewNews_Category.Entity;
			}
			set
			{
				dnn_NewNews_Category previousValue = this._dnn_NewNews_Category.Entity;
				if (((previousValue != value) 
							|| (this._dnn_NewNews_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_NewNews_Category.Entity = null;
						previousValue.dnn_NewNews_Articles.Remove(this);
					}
					this._dnn_NewNews_Category.Entity = value;
					if ((value != null))
					{
						value.dnn_NewNews_Articles.Add(this);
						this._CatID = value.CatID;
					}
					else
					{
						this._CatID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_NewNews_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_NewNews_Categories")]
	public partial class dnn_NewNews_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatID;
		
		private string _Title;
		
		private string _Description;
		
		private string _Image;
		
		private int _CreatedByUser;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<dnn_NewNews_Article> _dnn_NewNews_Articles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIDChanging(int value);
    partial void OnCatIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnCreatedByUserChanging(int value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public dnn_NewNews_Category()
		{
			this._dnn_NewNews_Articles = new EntitySet<dnn_NewNews_Article>(new Action<dnn_NewNews_Article>(this.attach_dnn_NewNews_Articles), new Action<dnn_NewNews_Article>(this.detach_dnn_NewNews_Articles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="Int NOT NULL")]
		public int CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_NewNews_Category_dnn_NewNews_Article", Storage="_dnn_NewNews_Articles", ThisKey="CatID", OtherKey="CatID")]
		public EntitySet<dnn_NewNews_Article> dnn_NewNews_Articles
		{
			get
			{
				return this._dnn_NewNews_Articles;
			}
			set
			{
				this._dnn_NewNews_Articles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_NewNews_Articles(dnn_NewNews_Article entity)
		{
			this.SendPropertyChanging();
			entity.dnn_NewNews_Category = this;
		}
		
		private void detach_dnn_NewNews_Articles(dnn_NewNews_Article entity)
		{
			this.SendPropertyChanging();
			entity.dnn_NewNews_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Packages")]
	public partial class dnn_Package : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageID;
		
		private System.Nullable<int> _PortalID;
		
		private string _Name;
		
		private string _FriendlyName;
		
		private string _Description;
		
		private string _PackageType;
		
		private string _Version;
		
		private string _License;
		
		private string _Manifest;
		
		private string _Owner;
		
		private string _Organization;
		
		private string _Url;
		
		private string _Email;
		
		private string _ReleaseNotes;
		
		private bool _IsSystemPackage;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private string _FolderName;
		
		private string _IconFile;
		
		private EntitySet<dnn_Assembly> _dnn_Assemblies;
		
		private EntitySet<dnn_Authentication> _dnn_Authentications;
		
		private EntitySet<dnn_Dashboard_Control> _dnn_Dashboard_Controls;
		
		private EntitySet<dnn_DesktopModule> _dnn_DesktopModules;
		
		private EntitySet<dnn_LanguagePack> _dnn_LanguagePacks;
		
		private EntitySet<dnn_SkinControl> _dnn_SkinControls;
		
		private EntitySet<dnn_SkinPackage> _dnn_SkinPackages;
		
		private EntityRef<dnn_PackageType> _dnn_PackageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPackageTypeChanging(string value);
    partial void OnPackageTypeChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnLicenseChanging(string value);
    partial void OnLicenseChanged();
    partial void OnManifestChanging(string value);
    partial void OnManifestChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnOrganizationChanging(string value);
    partial void OnOrganizationChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnReleaseNotesChanging(string value);
    partial void OnReleaseNotesChanged();
    partial void OnIsSystemPackageChanging(bool value);
    partial void OnIsSystemPackageChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnFolderNameChanging(string value);
    partial void OnFolderNameChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    #endregion
		
		public dnn_Package()
		{
			this._dnn_Assemblies = new EntitySet<dnn_Assembly>(new Action<dnn_Assembly>(this.attach_dnn_Assemblies), new Action<dnn_Assembly>(this.detach_dnn_Assemblies));
			this._dnn_Authentications = new EntitySet<dnn_Authentication>(new Action<dnn_Authentication>(this.attach_dnn_Authentications), new Action<dnn_Authentication>(this.detach_dnn_Authentications));
			this._dnn_Dashboard_Controls = new EntitySet<dnn_Dashboard_Control>(new Action<dnn_Dashboard_Control>(this.attach_dnn_Dashboard_Controls), new Action<dnn_Dashboard_Control>(this.detach_dnn_Dashboard_Controls));
			this._dnn_DesktopModules = new EntitySet<dnn_DesktopModule>(new Action<dnn_DesktopModule>(this.attach_dnn_DesktopModules), new Action<dnn_DesktopModule>(this.detach_dnn_DesktopModules));
			this._dnn_LanguagePacks = new EntitySet<dnn_LanguagePack>(new Action<dnn_LanguagePack>(this.attach_dnn_LanguagePacks), new Action<dnn_LanguagePack>(this.detach_dnn_LanguagePacks));
			this._dnn_SkinControls = new EntitySet<dnn_SkinControl>(new Action<dnn_SkinControl>(this.attach_dnn_SkinControls), new Action<dnn_SkinControl>(this.detach_dnn_SkinControls));
			this._dnn_SkinPackages = new EntitySet<dnn_SkinPackage>(new Action<dnn_SkinPackage>(this.attach_dnn_SkinPackages), new Action<dnn_SkinPackage>(this.detach_dnn_SkinPackages));
			this._dnn_PackageType = default(EntityRef<dnn_PackageType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PackageType
		{
			get
			{
				return this._PackageType;
			}
			set
			{
				if ((this._PackageType != value))
				{
					if (this._dnn_PackageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageTypeChanging(value);
					this.SendPropertyChanging();
					this._PackageType = value;
					this.SendPropertyChanged("PackageType");
					this.OnPackageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_License", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string License
		{
			get
			{
				return this._License;
			}
			set
			{
				if ((this._License != value))
				{
					this.OnLicenseChanging(value);
					this.SendPropertyChanging();
					this._License = value;
					this.SendPropertyChanged("License");
					this.OnLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manifest", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Manifest
		{
			get
			{
				return this._Manifest;
			}
			set
			{
				if ((this._Manifest != value))
				{
					this.OnManifestChanging(value);
					this.SendPropertyChanging();
					this._Manifest = value;
					this.SendPropertyChanged("Manifest");
					this.OnManifestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="NVarChar(100)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization", DbType="NVarChar(100)")]
		public string Organization
		{
			get
			{
				return this._Organization;
			}
			set
			{
				if ((this._Organization != value))
				{
					this.OnOrganizationChanging(value);
					this.SendPropertyChanging();
					this._Organization = value;
					this.SendPropertyChanged("Organization");
					this.OnOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(250)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseNotes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ReleaseNotes
		{
			get
			{
				return this._ReleaseNotes;
			}
			set
			{
				if ((this._ReleaseNotes != value))
				{
					this.OnReleaseNotesChanging(value);
					this.SendPropertyChanging();
					this._ReleaseNotes = value;
					this.SendPropertyChanged("ReleaseNotes");
					this.OnReleaseNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystemPackage", DbType="Bit NOT NULL")]
		public bool IsSystemPackage
		{
			get
			{
				return this._IsSystemPackage;
			}
			set
			{
				if ((this._IsSystemPackage != value))
				{
					this.OnIsSystemPackageChanging(value);
					this.SendPropertyChanging();
					this._IsSystemPackage = value;
					this.SendPropertyChanged("IsSystemPackage");
					this.OnIsSystemPackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderName", DbType="NVarChar(128)")]
		public string FolderName
		{
			get
			{
				return this._FolderName;
			}
			set
			{
				if ((this._FolderName != value))
				{
					this.OnFolderNameChanging(value);
					this.SendPropertyChanging();
					this._FolderName = value;
					this.SendPropertyChanged("FolderName");
					this.OnFolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_Assembly", Storage="_dnn_Assemblies", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<dnn_Assembly> dnn_Assemblies
		{
			get
			{
				return this._dnn_Assemblies;
			}
			set
			{
				this._dnn_Assemblies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_Authentication", Storage="_dnn_Authentications", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<dnn_Authentication> dnn_Authentications
		{
			get
			{
				return this._dnn_Authentications;
			}
			set
			{
				this._dnn_Authentications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_Dashboard_Control", Storage="_dnn_Dashboard_Controls", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<dnn_Dashboard_Control> dnn_Dashboard_Controls
		{
			get
			{
				return this._dnn_Dashboard_Controls;
			}
			set
			{
				this._dnn_Dashboard_Controls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_DesktopModule", Storage="_dnn_DesktopModules", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<dnn_DesktopModule> dnn_DesktopModules
		{
			get
			{
				return this._dnn_DesktopModules;
			}
			set
			{
				this._dnn_DesktopModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_LanguagePack", Storage="_dnn_LanguagePacks", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<dnn_LanguagePack> dnn_LanguagePacks
		{
			get
			{
				return this._dnn_LanguagePacks;
			}
			set
			{
				this._dnn_LanguagePacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_SkinControl", Storage="_dnn_SkinControls", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<dnn_SkinControl> dnn_SkinControls
		{
			get
			{
				return this._dnn_SkinControls;
			}
			set
			{
				this._dnn_SkinControls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_SkinPackage", Storage="_dnn_SkinPackages", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<dnn_SkinPackage> dnn_SkinPackages
		{
			get
			{
				return this._dnn_SkinPackages;
			}
			set
			{
				this._dnn_SkinPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_PackageType_dnn_Package", Storage="_dnn_PackageType", ThisKey="PackageType", OtherKey="PackageType", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_PackageType dnn_PackageType
		{
			get
			{
				return this._dnn_PackageType.Entity;
			}
			set
			{
				dnn_PackageType previousValue = this._dnn_PackageType.Entity;
				if (((previousValue != value) 
							|| (this._dnn_PackageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_PackageType.Entity = null;
						previousValue.dnn_Packages.Remove(this);
					}
					this._dnn_PackageType.Entity = value;
					if ((value != null))
					{
						value.dnn_Packages.Add(this);
						this._PackageType = value.PackageType;
					}
					else
					{
						this._PackageType = default(string);
					}
					this.SendPropertyChanged("dnn_PackageType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_Assemblies(dnn_Assembly entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = this;
		}
		
		private void detach_dnn_Assemblies(dnn_Assembly entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = null;
		}
		
		private void attach_dnn_Authentications(dnn_Authentication entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = this;
		}
		
		private void detach_dnn_Authentications(dnn_Authentication entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = null;
		}
		
		private void attach_dnn_Dashboard_Controls(dnn_Dashboard_Control entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = this;
		}
		
		private void detach_dnn_Dashboard_Controls(dnn_Dashboard_Control entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = null;
		}
		
		private void attach_dnn_DesktopModules(dnn_DesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = this;
		}
		
		private void detach_dnn_DesktopModules(dnn_DesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = null;
		}
		
		private void attach_dnn_LanguagePacks(dnn_LanguagePack entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = this;
		}
		
		private void detach_dnn_LanguagePacks(dnn_LanguagePack entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = null;
		}
		
		private void attach_dnn_SkinControls(dnn_SkinControl entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = this;
		}
		
		private void detach_dnn_SkinControls(dnn_SkinControl entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = null;
		}
		
		private void attach_dnn_SkinPackages(dnn_SkinPackage entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = this;
		}
		
		private void detach_dnn_SkinPackages(dnn_SkinPackage entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Package = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_PackageTypes")]
	public partial class dnn_PackageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PackageType;
		
		private string _Description;
		
		private int _SecurityAccessLevel;
		
		private string _EditorControlSrc;
		
		private EntitySet<dnn_Package> _dnn_Packages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageTypeChanging(string value);
    partial void OnPackageTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSecurityAccessLevelChanging(int value);
    partial void OnSecurityAccessLevelChanged();
    partial void OnEditorControlSrcChanging(string value);
    partial void OnEditorControlSrcChanged();
    #endregion
		
		public dnn_PackageType()
		{
			this._dnn_Packages = new EntitySet<dnn_Package>(new Action<dnn_Package>(this.attach_dnn_Packages), new Action<dnn_Package>(this.detach_dnn_Packages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageType", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PackageType
		{
			get
			{
				return this._PackageType;
			}
			set
			{
				if ((this._PackageType != value))
				{
					this.OnPackageTypeChanging(value);
					this.SendPropertyChanging();
					this._PackageType = value;
					this.SendPropertyChanged("PackageType");
					this.OnPackageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityAccessLevel", DbType="Int NOT NULL")]
		public int SecurityAccessLevel
		{
			get
			{
				return this._SecurityAccessLevel;
			}
			set
			{
				if ((this._SecurityAccessLevel != value))
				{
					this.OnSecurityAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._SecurityAccessLevel = value;
					this.SendPropertyChanged("SecurityAccessLevel");
					this.OnSecurityAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorControlSrc", DbType="NVarChar(250)")]
		public string EditorControlSrc
		{
			get
			{
				return this._EditorControlSrc;
			}
			set
			{
				if ((this._EditorControlSrc != value))
				{
					this.OnEditorControlSrcChanging(value);
					this.SendPropertyChanging();
					this._EditorControlSrc = value;
					this.SendPropertyChanged("EditorControlSrc");
					this.OnEditorControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_PackageType_dnn_Package", Storage="_dnn_Packages", ThisKey="PackageType", OtherKey="PackageType")]
		public EntitySet<dnn_Package> dnn_Packages
		{
			get
			{
				return this._dnn_Packages;
			}
			set
			{
				this._dnn_Packages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_Packages(dnn_Package entity)
		{
			this.SendPropertyChanging();
			entity.dnn_PackageType = this;
		}
		
		private void detach_dnn_Packages(dnn_Package entity)
		{
			this.SendPropertyChanging();
			entity.dnn_PackageType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Permission")]
	public partial class dnn_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PermissionID;
		
		private string _PermissionCode;
		
		private int _ModuleDefID;
		
		private string _PermissionKey;
		
		private string _PermissionName;
		
		private int _ViewOrder;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn_DesktopModulePermission> _dnn_DesktopModulePermissions;
		
		private EntitySet<dnn_FolderPermission> _dnn_FolderPermissions;
		
		private EntitySet<dnn_ModulePermission> _dnn_ModulePermissions;
		
		private EntitySet<dnn_TabPermission> _dnn_TabPermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnPermissionCodeChanging(string value);
    partial void OnPermissionCodeChanged();
    partial void OnModuleDefIDChanging(int value);
    partial void OnModuleDefIDChanged();
    partial void OnPermissionKeyChanging(string value);
    partial void OnPermissionKeyChanged();
    partial void OnPermissionNameChanging(string value);
    partial void OnPermissionNameChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_Permission()
		{
			this._dnn_DesktopModulePermissions = new EntitySet<dnn_DesktopModulePermission>(new Action<dnn_DesktopModulePermission>(this.attach_dnn_DesktopModulePermissions), new Action<dnn_DesktopModulePermission>(this.detach_dnn_DesktopModulePermissions));
			this._dnn_FolderPermissions = new EntitySet<dnn_FolderPermission>(new Action<dnn_FolderPermission>(this.attach_dnn_FolderPermissions), new Action<dnn_FolderPermission>(this.detach_dnn_FolderPermissions));
			this._dnn_ModulePermissions = new EntitySet<dnn_ModulePermission>(new Action<dnn_ModulePermission>(this.attach_dnn_ModulePermissions), new Action<dnn_ModulePermission>(this.detach_dnn_ModulePermissions));
			this._dnn_TabPermissions = new EntitySet<dnn_TabPermission>(new Action<dnn_TabPermission>(this.attach_dnn_TabPermissions), new Action<dnn_TabPermission>(this.detach_dnn_TabPermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionCode
		{
			get
			{
				return this._PermissionCode;
			}
			set
			{
				if ((this._PermissionCode != value))
				{
					this.OnPermissionCodeChanging(value);
					this.SendPropertyChanging();
					this._PermissionCode = value;
					this.SendPropertyChanged("PermissionCode");
					this.OnPermissionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int NOT NULL")]
		public int ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionKey", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionKey
		{
			get
			{
				return this._PermissionKey;
			}
			set
			{
				if ((this._PermissionKey != value))
				{
					this.OnPermissionKeyChanging(value);
					this.SendPropertyChanging();
					this._PermissionKey = value;
					this.SendPropertyChanged("PermissionKey");
					this.OnPermissionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionName
		{
			get
			{
				return this._PermissionName;
			}
			set
			{
				if ((this._PermissionName != value))
				{
					this.OnPermissionNameChanging(value);
					this.SendPropertyChanging();
					this._PermissionName = value;
					this.SendPropertyChanged("PermissionName");
					this.OnPermissionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int NOT NULL")]
		public int ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Permission_dnn_DesktopModulePermission", Storage="_dnn_DesktopModulePermissions", ThisKey="PermissionID", OtherKey="PermissionID")]
		public EntitySet<dnn_DesktopModulePermission> dnn_DesktopModulePermissions
		{
			get
			{
				return this._dnn_DesktopModulePermissions;
			}
			set
			{
				this._dnn_DesktopModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Permission_dnn_FolderPermission", Storage="_dnn_FolderPermissions", ThisKey="PermissionID", OtherKey="PermissionID")]
		public EntitySet<dnn_FolderPermission> dnn_FolderPermissions
		{
			get
			{
				return this._dnn_FolderPermissions;
			}
			set
			{
				this._dnn_FolderPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Permission_dnn_ModulePermission", Storage="_dnn_ModulePermissions", ThisKey="PermissionID", OtherKey="PermissionID")]
		public EntitySet<dnn_ModulePermission> dnn_ModulePermissions
		{
			get
			{
				return this._dnn_ModulePermissions;
			}
			set
			{
				this._dnn_ModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Permission_dnn_TabPermission", Storage="_dnn_TabPermissions", ThisKey="PermissionID", OtherKey="PermissionID")]
		public EntitySet<dnn_TabPermission> dnn_TabPermissions
		{
			get
			{
				return this._dnn_TabPermissions;
			}
			set
			{
				this._dnn_TabPermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_DesktopModulePermissions(dnn_DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Permission = this;
		}
		
		private void detach_dnn_DesktopModulePermissions(dnn_DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Permission = null;
		}
		
		private void attach_dnn_FolderPermissions(dnn_FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Permission = this;
		}
		
		private void detach_dnn_FolderPermissions(dnn_FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Permission = null;
		}
		
		private void attach_dnn_ModulePermissions(dnn_ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Permission = this;
		}
		
		private void detach_dnn_ModulePermissions(dnn_ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Permission = null;
		}
		
		private void attach_dnn_TabPermissions(dnn_TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Permission = this;
		}
		
		private void detach_dnn_TabPermissions(dnn_TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_PortalAlias")]
	public partial class dnn_PortalAlia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalAliasID;
		
		private int _PortalID;
		
		private string _HTTPAlias;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalAliasIDChanging(int value);
    partial void OnPortalAliasIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnHTTPAliasChanging(string value);
    partial void OnHTTPAliasChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_PortalAlia()
		{
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalAliasID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PortalAliasID
		{
			get
			{
				return this._PortalAliasID;
			}
			set
			{
				if ((this._PortalAliasID != value))
				{
					this.OnPortalAliasIDChanging(value);
					this.SendPropertyChanging();
					this._PortalAliasID = value;
					this.SendPropertyChanged("PortalAliasID");
					this.OnPortalAliasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTTPAlias", DbType="NVarChar(200)")]
		public string HTTPAlias
		{
			get
			{
				return this._HTTPAlias;
			}
			set
			{
				if ((this._HTTPAlias != value))
				{
					this.OnHTTPAliasChanging(value);
					this.SendPropertyChanging();
					this._HTTPAlias = value;
					this.SendPropertyChanged("HTTPAlias");
					this.OnHTTPAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_PortalAlia", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_PortalAlias.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_PortalAlias.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_PortalDesktopModules")]
	public partial class dnn_PortalDesktopModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalDesktopModuleID;
		
		private int _PortalID;
		
		private int _DesktopModuleID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn_DesktopModulePermission> _dnn_DesktopModulePermissions;
		
		private EntityRef<dnn_DesktopModule> _dnn_DesktopModule;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalDesktopModuleIDChanging(int value);
    partial void OnPortalDesktopModuleIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnDesktopModuleIDChanging(int value);
    partial void OnDesktopModuleIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_PortalDesktopModule()
		{
			this._dnn_DesktopModulePermissions = new EntitySet<dnn_DesktopModulePermission>(new Action<dnn_DesktopModulePermission>(this.attach_dnn_DesktopModulePermissions), new Action<dnn_DesktopModulePermission>(this.detach_dnn_DesktopModulePermissions));
			this._dnn_DesktopModule = default(EntityRef<dnn_DesktopModule>);
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalDesktopModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PortalDesktopModuleID
		{
			get
			{
				return this._PortalDesktopModuleID;
			}
			set
			{
				if ((this._PortalDesktopModuleID != value))
				{
					this.OnPortalDesktopModuleIDChanging(value);
					this.SendPropertyChanging();
					this._PortalDesktopModuleID = value;
					this.SendPropertyChanged("PortalDesktopModuleID");
					this.OnPortalDesktopModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopModuleID", DbType="Int NOT NULL")]
		public int DesktopModuleID
		{
			get
			{
				return this._DesktopModuleID;
			}
			set
			{
				if ((this._DesktopModuleID != value))
				{
					if (this._dnn_DesktopModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesktopModuleIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopModuleID = value;
					this.SendPropertyChanged("DesktopModuleID");
					this.OnDesktopModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_PortalDesktopModule_dnn_DesktopModulePermission", Storage="_dnn_DesktopModulePermissions", ThisKey="PortalDesktopModuleID", OtherKey="PortalDesktopModuleID")]
		public EntitySet<dnn_DesktopModulePermission> dnn_DesktopModulePermissions
		{
			get
			{
				return this._dnn_DesktopModulePermissions;
			}
			set
			{
				this._dnn_DesktopModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_DesktopModule_dnn_PortalDesktopModule", Storage="_dnn_DesktopModule", ThisKey="DesktopModuleID", OtherKey="DesktopModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_DesktopModule dnn_DesktopModule
		{
			get
			{
				return this._dnn_DesktopModule.Entity;
			}
			set
			{
				dnn_DesktopModule previousValue = this._dnn_DesktopModule.Entity;
				if (((previousValue != value) 
							|| (this._dnn_DesktopModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_DesktopModule.Entity = null;
						previousValue.dnn_PortalDesktopModules.Remove(this);
					}
					this._dnn_DesktopModule.Entity = value;
					if ((value != null))
					{
						value.dnn_PortalDesktopModules.Add(this);
						this._DesktopModuleID = value.DesktopModuleID;
					}
					else
					{
						this._DesktopModuleID = default(int);
					}
					this.SendPropertyChanged("dnn_DesktopModule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_PortalDesktopModule", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_PortalDesktopModules.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_PortalDesktopModules.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_DesktopModulePermissions(dnn_DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_PortalDesktopModule = this;
		}
		
		private void detach_dnn_DesktopModulePermissions(dnn_DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_PortalDesktopModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_PortalGroups")]
	public partial class dnn_PortalGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalGroupID;
		
		private System.Nullable<int> _MasterPortalID;
		
		private string _PortalGroupName;
		
		private string _PortalGroupDescription;
		
		private string _AuthenticationDomain;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalGroupIDChanging(int value);
    partial void OnPortalGroupIDChanged();
    partial void OnMasterPortalIDChanging(System.Nullable<int> value);
    partial void OnMasterPortalIDChanged();
    partial void OnPortalGroupNameChanging(string value);
    partial void OnPortalGroupNameChanged();
    partial void OnPortalGroupDescriptionChanging(string value);
    partial void OnPortalGroupDescriptionChanged();
    partial void OnAuthenticationDomainChanging(string value);
    partial void OnAuthenticationDomainChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_PortalGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PortalGroupID
		{
			get
			{
				return this._PortalGroupID;
			}
			set
			{
				if ((this._PortalGroupID != value))
				{
					this.OnPortalGroupIDChanging(value);
					this.SendPropertyChanging();
					this._PortalGroupID = value;
					this.SendPropertyChanged("PortalGroupID");
					this.OnPortalGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterPortalID", DbType="Int")]
		public System.Nullable<int> MasterPortalID
		{
			get
			{
				return this._MasterPortalID;
			}
			set
			{
				if ((this._MasterPortalID != value))
				{
					this.OnMasterPortalIDChanging(value);
					this.SendPropertyChanging();
					this._MasterPortalID = value;
					this.SendPropertyChanged("MasterPortalID");
					this.OnMasterPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalGroupName", DbType="NVarChar(100)")]
		public string PortalGroupName
		{
			get
			{
				return this._PortalGroupName;
			}
			set
			{
				if ((this._PortalGroupName != value))
				{
					this.OnPortalGroupNameChanging(value);
					this.SendPropertyChanging();
					this._PortalGroupName = value;
					this.SendPropertyChanged("PortalGroupName");
					this.OnPortalGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalGroupDescription", DbType="NVarChar(2000)")]
		public string PortalGroupDescription
		{
			get
			{
				return this._PortalGroupDescription;
			}
			set
			{
				if ((this._PortalGroupDescription != value))
				{
					this.OnPortalGroupDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PortalGroupDescription = value;
					this.SendPropertyChanged("PortalGroupDescription");
					this.OnPortalGroupDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationDomain", DbType="NVarChar(200)")]
		public string AuthenticationDomain
		{
			get
			{
				return this._AuthenticationDomain;
			}
			set
			{
				if ((this._AuthenticationDomain != value))
				{
					this.OnAuthenticationDomainChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationDomain = value;
					this.SendPropertyChanged("AuthenticationDomain");
					this.OnAuthenticationDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_PortalLanguages")]
	public partial class dnn_PortalLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalLanguageID;
		
		private int _PortalID;
		
		private int _LanguageID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private bool _IsPublished;
		
		private EntityRef<dnn_Language> _dnn_Language;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalLanguageIDChanging(int value);
    partial void OnPortalLanguageIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnIsPublishedChanging(bool value);
    partial void OnIsPublishedChanged();
    #endregion
		
		public dnn_PortalLanguage()
		{
			this._dnn_Language = default(EntityRef<dnn_Language>);
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalLanguageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PortalLanguageID
		{
			get
			{
				return this._PortalLanguageID;
			}
			set
			{
				if ((this._PortalLanguageID != value))
				{
					this.OnPortalLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._PortalLanguageID = value;
					this.SendPropertyChanged("PortalLanguageID");
					this.OnPortalLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._dnn_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit NOT NULL")]
		public bool IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Language_dnn_PortalLanguage", Storage="_dnn_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Language dnn_Language
		{
			get
			{
				return this._dnn_Language.Entity;
			}
			set
			{
				dnn_Language previousValue = this._dnn_Language.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Language.Entity = null;
						previousValue.dnn_PortalLanguages.Remove(this);
					}
					this._dnn_Language.Entity = value;
					if ((value != null))
					{
						value.dnn_PortalLanguages.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(int);
					}
					this.SendPropertyChanged("dnn_Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_PortalLanguage", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_PortalLanguages.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_PortalLanguages.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_PortalLocalization")]
	public partial class dnn_PortalLocalization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalID;
		
		private string _CultureCode;
		
		private string _PortalName;
		
		private string _LogoFile;
		
		private string _FooterText;
		
		private string _Description;
		
		private string _KeyWords;
		
		private string _BackgroundFile;
		
		private System.Nullable<int> _HomeTabId;
		
		private System.Nullable<int> _LoginTabId;
		
		private System.Nullable<int> _UserTabId;
		
		private System.Nullable<int> _AdminTabId;
		
		private System.Nullable<int> _SplashTabId;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<int> _RegisterTabId;
		
		private System.Nullable<int> _SearchTabId;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnPortalNameChanging(string value);
    partial void OnPortalNameChanged();
    partial void OnLogoFileChanging(string value);
    partial void OnLogoFileChanged();
    partial void OnFooterTextChanging(string value);
    partial void OnFooterTextChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    partial void OnBackgroundFileChanging(string value);
    partial void OnBackgroundFileChanged();
    partial void OnHomeTabIdChanging(System.Nullable<int> value);
    partial void OnHomeTabIdChanged();
    partial void OnLoginTabIdChanging(System.Nullable<int> value);
    partial void OnLoginTabIdChanged();
    partial void OnUserTabIdChanging(System.Nullable<int> value);
    partial void OnUserTabIdChanged();
    partial void OnAdminTabIdChanging(System.Nullable<int> value);
    partial void OnAdminTabIdChanged();
    partial void OnSplashTabIdChanging(System.Nullable<int> value);
    partial void OnSplashTabIdChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnRegisterTabIdChanging(System.Nullable<int> value);
    partial void OnRegisterTabIdChanged();
    partial void OnSearchTabIdChanging(System.Nullable<int> value);
    partial void OnSearchTabIdChanged();
    #endregion
		
		public dnn_PortalLocalization()
		{
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PortalName
		{
			get
			{
				return this._PortalName;
			}
			set
			{
				if ((this._PortalName != value))
				{
					this.OnPortalNameChanging(value);
					this.SendPropertyChanging();
					this._PortalName = value;
					this.SendPropertyChanged("PortalName");
					this.OnPortalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoFile", DbType="NVarChar(50)")]
		public string LogoFile
		{
			get
			{
				return this._LogoFile;
			}
			set
			{
				if ((this._LogoFile != value))
				{
					this.OnLogoFileChanging(value);
					this.SendPropertyChanging();
					this._LogoFile = value;
					this.SendPropertyChanged("LogoFile");
					this.OnLogoFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FooterText", DbType="NVarChar(100)")]
		public string FooterText
		{
			get
			{
				return this._FooterText;
			}
			set
			{
				if ((this._FooterText != value))
				{
					this.OnFooterTextChanging(value);
					this.SendPropertyChanging();
					this._FooterText = value;
					this.SendPropertyChanged("FooterText");
					this.OnFooterTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="NVarChar(500)")]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundFile", DbType="NVarChar(50)")]
		public string BackgroundFile
		{
			get
			{
				return this._BackgroundFile;
			}
			set
			{
				if ((this._BackgroundFile != value))
				{
					this.OnBackgroundFileChanging(value);
					this.SendPropertyChanging();
					this._BackgroundFile = value;
					this.SendPropertyChanged("BackgroundFile");
					this.OnBackgroundFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeTabId", DbType="Int")]
		public System.Nullable<int> HomeTabId
		{
			get
			{
				return this._HomeTabId;
			}
			set
			{
				if ((this._HomeTabId != value))
				{
					this.OnHomeTabIdChanging(value);
					this.SendPropertyChanging();
					this._HomeTabId = value;
					this.SendPropertyChanged("HomeTabId");
					this.OnHomeTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTabId", DbType="Int")]
		public System.Nullable<int> LoginTabId
		{
			get
			{
				return this._LoginTabId;
			}
			set
			{
				if ((this._LoginTabId != value))
				{
					this.OnLoginTabIdChanging(value);
					this.SendPropertyChanging();
					this._LoginTabId = value;
					this.SendPropertyChanged("LoginTabId");
					this.OnLoginTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTabId", DbType="Int")]
		public System.Nullable<int> UserTabId
		{
			get
			{
				return this._UserTabId;
			}
			set
			{
				if ((this._UserTabId != value))
				{
					this.OnUserTabIdChanging(value);
					this.SendPropertyChanging();
					this._UserTabId = value;
					this.SendPropertyChanged("UserTabId");
					this.OnUserTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminTabId", DbType="Int")]
		public System.Nullable<int> AdminTabId
		{
			get
			{
				return this._AdminTabId;
			}
			set
			{
				if ((this._AdminTabId != value))
				{
					this.OnAdminTabIdChanging(value);
					this.SendPropertyChanging();
					this._AdminTabId = value;
					this.SendPropertyChanged("AdminTabId");
					this.OnAdminTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplashTabId", DbType="Int")]
		public System.Nullable<int> SplashTabId
		{
			get
			{
				return this._SplashTabId;
			}
			set
			{
				if ((this._SplashTabId != value))
				{
					this.OnSplashTabIdChanging(value);
					this.SendPropertyChanging();
					this._SplashTabId = value;
					this.SendPropertyChanged("SplashTabId");
					this.OnSplashTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterTabId", DbType="Int")]
		public System.Nullable<int> RegisterTabId
		{
			get
			{
				return this._RegisterTabId;
			}
			set
			{
				if ((this._RegisterTabId != value))
				{
					this.OnRegisterTabIdChanging(value);
					this.SendPropertyChanging();
					this._RegisterTabId = value;
					this.SendPropertyChanged("RegisterTabId");
					this.OnRegisterTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchTabId", DbType="Int")]
		public System.Nullable<int> SearchTabId
		{
			get
			{
				return this._SearchTabId;
			}
			set
			{
				if ((this._SearchTabId != value))
				{
					this.OnSearchTabIdChanging(value);
					this.SendPropertyChanging();
					this._SearchTabId = value;
					this.SendPropertyChanged("SearchTabId");
					this.OnSearchTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_PortalLocalization", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_PortalLocalizations.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_PortalLocalizations.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Portals")]
	public partial class dnn_Portal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalID;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private int _UserRegistration;
		
		private int _BannerAdvertising;
		
		private System.Nullable<int> _AdministratorId;
		
		private string _Currency;
		
		private decimal _HostFee;
		
		private int _HostSpace;
		
		private System.Nullable<int> _AdministratorRoleId;
		
		private System.Nullable<int> _RegisteredRoleId;
		
		private System.Guid _GUID;
		
		private string _PaymentProcessor;
		
		private string _ProcessorUserId;
		
		private string _ProcessorPassword;
		
		private System.Nullable<int> _SiteLogHistory;
		
		private string _DefaultLanguage;
		
		private int _TimezoneOffset;
		
		private string _HomeDirectory;
		
		private int _PageQuota;
		
		private int _UserQuota;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<int> _PortalGroupID;
		
		private EntitySet<dnn_AnonymousUser> _dnn_AnonymousUsers;
		
		private EntitySet<dnn_File> _dnn_Files;
		
		private EntitySet<dnn_FolderMapping> _dnn_FolderMappings;
		
		private EntitySet<dnn_Folder> _dnn_Folders;
		
		private EntitySet<dnn_Mobile_PreviewProfile> _dnn_Mobile_PreviewProfiles;
		
		private EntitySet<dnn_Mobile_Redirection> _dnn_Mobile_Redirections;
		
		private EntitySet<dnn_Module> _dnn_Modules;
		
		private EntitySet<dnn_PortalAlia> _dnn_PortalAlias;
		
		private EntitySet<dnn_PortalDesktopModule> _dnn_PortalDesktopModules;
		
		private EntitySet<dnn_PortalLanguage> _dnn_PortalLanguages;
		
		private EntitySet<dnn_PortalLocalization> _dnn_PortalLocalizations;
		
		private EntitySet<dnn_PortalSetting> _dnn_PortalSettings;
		
		private EntitySet<dnn_Profile> _dnn_Profiles;
		
		private EntitySet<dnn_ProfilePropertyDefinition> _dnn_ProfilePropertyDefinitions;
		
		private EntitySet<dnn_RoleGroup> _dnn_RoleGroups;
		
		private EntitySet<dnn_Role> _dnn_Roles;
		
		private EntitySet<dnn_SiteLog> _dnn_SiteLogs;
		
		private EntitySet<dnn_SystemMessage> _dnn_SystemMessages;
		
		private EntitySet<dnn_Tab> _dnn_Tabs;
		
		private EntitySet<dnn_Url> _dnn_Urls;
		
		private EntitySet<dnn_UrlTracking> _dnn_UrlTrackings;
		
		private EntitySet<dnn_UserPortal> _dnn_UserPortals;
		
		private EntitySet<dnn_UsersOnline> _dnn_UsersOnlines;
		
		private EntitySet<dnn_Vendor> _dnn_Vendors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnUserRegistrationChanging(int value);
    partial void OnUserRegistrationChanged();
    partial void OnBannerAdvertisingChanging(int value);
    partial void OnBannerAdvertisingChanged();
    partial void OnAdministratorIdChanging(System.Nullable<int> value);
    partial void OnAdministratorIdChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnHostFeeChanging(decimal value);
    partial void OnHostFeeChanged();
    partial void OnHostSpaceChanging(int value);
    partial void OnHostSpaceChanged();
    partial void OnAdministratorRoleIdChanging(System.Nullable<int> value);
    partial void OnAdministratorRoleIdChanged();
    partial void OnRegisteredRoleIdChanging(System.Nullable<int> value);
    partial void OnRegisteredRoleIdChanged();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnPaymentProcessorChanging(string value);
    partial void OnPaymentProcessorChanged();
    partial void OnProcessorUserIdChanging(string value);
    partial void OnProcessorUserIdChanged();
    partial void OnProcessorPasswordChanging(string value);
    partial void OnProcessorPasswordChanged();
    partial void OnSiteLogHistoryChanging(System.Nullable<int> value);
    partial void OnSiteLogHistoryChanged();
    partial void OnDefaultLanguageChanging(string value);
    partial void OnDefaultLanguageChanged();
    partial void OnTimezoneOffsetChanging(int value);
    partial void OnTimezoneOffsetChanged();
    partial void OnHomeDirectoryChanging(string value);
    partial void OnHomeDirectoryChanged();
    partial void OnPageQuotaChanging(int value);
    partial void OnPageQuotaChanged();
    partial void OnUserQuotaChanging(int value);
    partial void OnUserQuotaChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnPortalGroupIDChanging(System.Nullable<int> value);
    partial void OnPortalGroupIDChanged();
    #endregion
		
		public dnn_Portal()
		{
			this._dnn_AnonymousUsers = new EntitySet<dnn_AnonymousUser>(new Action<dnn_AnonymousUser>(this.attach_dnn_AnonymousUsers), new Action<dnn_AnonymousUser>(this.detach_dnn_AnonymousUsers));
			this._dnn_Files = new EntitySet<dnn_File>(new Action<dnn_File>(this.attach_dnn_Files), new Action<dnn_File>(this.detach_dnn_Files));
			this._dnn_FolderMappings = new EntitySet<dnn_FolderMapping>(new Action<dnn_FolderMapping>(this.attach_dnn_FolderMappings), new Action<dnn_FolderMapping>(this.detach_dnn_FolderMappings));
			this._dnn_Folders = new EntitySet<dnn_Folder>(new Action<dnn_Folder>(this.attach_dnn_Folders), new Action<dnn_Folder>(this.detach_dnn_Folders));
			this._dnn_Mobile_PreviewProfiles = new EntitySet<dnn_Mobile_PreviewProfile>(new Action<dnn_Mobile_PreviewProfile>(this.attach_dnn_Mobile_PreviewProfiles), new Action<dnn_Mobile_PreviewProfile>(this.detach_dnn_Mobile_PreviewProfiles));
			this._dnn_Mobile_Redirections = new EntitySet<dnn_Mobile_Redirection>(new Action<dnn_Mobile_Redirection>(this.attach_dnn_Mobile_Redirections), new Action<dnn_Mobile_Redirection>(this.detach_dnn_Mobile_Redirections));
			this._dnn_Modules = new EntitySet<dnn_Module>(new Action<dnn_Module>(this.attach_dnn_Modules), new Action<dnn_Module>(this.detach_dnn_Modules));
			this._dnn_PortalAlias = new EntitySet<dnn_PortalAlia>(new Action<dnn_PortalAlia>(this.attach_dnn_PortalAlias), new Action<dnn_PortalAlia>(this.detach_dnn_PortalAlias));
			this._dnn_PortalDesktopModules = new EntitySet<dnn_PortalDesktopModule>(new Action<dnn_PortalDesktopModule>(this.attach_dnn_PortalDesktopModules), new Action<dnn_PortalDesktopModule>(this.detach_dnn_PortalDesktopModules));
			this._dnn_PortalLanguages = new EntitySet<dnn_PortalLanguage>(new Action<dnn_PortalLanguage>(this.attach_dnn_PortalLanguages), new Action<dnn_PortalLanguage>(this.detach_dnn_PortalLanguages));
			this._dnn_PortalLocalizations = new EntitySet<dnn_PortalLocalization>(new Action<dnn_PortalLocalization>(this.attach_dnn_PortalLocalizations), new Action<dnn_PortalLocalization>(this.detach_dnn_PortalLocalizations));
			this._dnn_PortalSettings = new EntitySet<dnn_PortalSetting>(new Action<dnn_PortalSetting>(this.attach_dnn_PortalSettings), new Action<dnn_PortalSetting>(this.detach_dnn_PortalSettings));
			this._dnn_Profiles = new EntitySet<dnn_Profile>(new Action<dnn_Profile>(this.attach_dnn_Profiles), new Action<dnn_Profile>(this.detach_dnn_Profiles));
			this._dnn_ProfilePropertyDefinitions = new EntitySet<dnn_ProfilePropertyDefinition>(new Action<dnn_ProfilePropertyDefinition>(this.attach_dnn_ProfilePropertyDefinitions), new Action<dnn_ProfilePropertyDefinition>(this.detach_dnn_ProfilePropertyDefinitions));
			this._dnn_RoleGroups = new EntitySet<dnn_RoleGroup>(new Action<dnn_RoleGroup>(this.attach_dnn_RoleGroups), new Action<dnn_RoleGroup>(this.detach_dnn_RoleGroups));
			this._dnn_Roles = new EntitySet<dnn_Role>(new Action<dnn_Role>(this.attach_dnn_Roles), new Action<dnn_Role>(this.detach_dnn_Roles));
			this._dnn_SiteLogs = new EntitySet<dnn_SiteLog>(new Action<dnn_SiteLog>(this.attach_dnn_SiteLogs), new Action<dnn_SiteLog>(this.detach_dnn_SiteLogs));
			this._dnn_SystemMessages = new EntitySet<dnn_SystemMessage>(new Action<dnn_SystemMessage>(this.attach_dnn_SystemMessages), new Action<dnn_SystemMessage>(this.detach_dnn_SystemMessages));
			this._dnn_Tabs = new EntitySet<dnn_Tab>(new Action<dnn_Tab>(this.attach_dnn_Tabs), new Action<dnn_Tab>(this.detach_dnn_Tabs));
			this._dnn_Urls = new EntitySet<dnn_Url>(new Action<dnn_Url>(this.attach_dnn_Urls), new Action<dnn_Url>(this.detach_dnn_Urls));
			this._dnn_UrlTrackings = new EntitySet<dnn_UrlTracking>(new Action<dnn_UrlTracking>(this.attach_dnn_UrlTrackings), new Action<dnn_UrlTracking>(this.detach_dnn_UrlTrackings));
			this._dnn_UserPortals = new EntitySet<dnn_UserPortal>(new Action<dnn_UserPortal>(this.attach_dnn_UserPortals), new Action<dnn_UserPortal>(this.detach_dnn_UserPortals));
			this._dnn_UsersOnlines = new EntitySet<dnn_UsersOnline>(new Action<dnn_UsersOnline>(this.attach_dnn_UsersOnlines), new Action<dnn_UsersOnline>(this.detach_dnn_UsersOnlines));
			this._dnn_Vendors = new EntitySet<dnn_Vendor>(new Action<dnn_Vendor>(this.attach_dnn_Vendors), new Action<dnn_Vendor>(this.detach_dnn_Vendors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRegistration", DbType="Int NOT NULL")]
		public int UserRegistration
		{
			get
			{
				return this._UserRegistration;
			}
			set
			{
				if ((this._UserRegistration != value))
				{
					this.OnUserRegistrationChanging(value);
					this.SendPropertyChanging();
					this._UserRegistration = value;
					this.SendPropertyChanged("UserRegistration");
					this.OnUserRegistrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerAdvertising", DbType="Int NOT NULL")]
		public int BannerAdvertising
		{
			get
			{
				return this._BannerAdvertising;
			}
			set
			{
				if ((this._BannerAdvertising != value))
				{
					this.OnBannerAdvertisingChanging(value);
					this.SendPropertyChanging();
					this._BannerAdvertising = value;
					this.SendPropertyChanged("BannerAdvertising");
					this.OnBannerAdvertisingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministratorId", DbType="Int")]
		public System.Nullable<int> AdministratorId
		{
			get
			{
				return this._AdministratorId;
			}
			set
			{
				if ((this._AdministratorId != value))
				{
					this.OnAdministratorIdChanging(value);
					this.SendPropertyChanging();
					this._AdministratorId = value;
					this.SendPropertyChanged("AdministratorId");
					this.OnAdministratorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="Char(3)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostFee", DbType="Money NOT NULL")]
		public decimal HostFee
		{
			get
			{
				return this._HostFee;
			}
			set
			{
				if ((this._HostFee != value))
				{
					this.OnHostFeeChanging(value);
					this.SendPropertyChanging();
					this._HostFee = value;
					this.SendPropertyChanged("HostFee");
					this.OnHostFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostSpace", DbType="Int NOT NULL")]
		public int HostSpace
		{
			get
			{
				return this._HostSpace;
			}
			set
			{
				if ((this._HostSpace != value))
				{
					this.OnHostSpaceChanging(value);
					this.SendPropertyChanging();
					this._HostSpace = value;
					this.SendPropertyChanged("HostSpace");
					this.OnHostSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministratorRoleId", DbType="Int")]
		public System.Nullable<int> AdministratorRoleId
		{
			get
			{
				return this._AdministratorRoleId;
			}
			set
			{
				if ((this._AdministratorRoleId != value))
				{
					this.OnAdministratorRoleIdChanging(value);
					this.SendPropertyChanging();
					this._AdministratorRoleId = value;
					this.SendPropertyChanged("AdministratorRoleId");
					this.OnAdministratorRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisteredRoleId", DbType="Int")]
		public System.Nullable<int> RegisteredRoleId
		{
			get
			{
				return this._RegisteredRoleId;
			}
			set
			{
				if ((this._RegisteredRoleId != value))
				{
					this.OnRegisteredRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RegisteredRoleId = value;
					this.SendPropertyChanged("RegisteredRoleId");
					this.OnRegisteredRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentProcessor", DbType="NVarChar(50)")]
		public string PaymentProcessor
		{
			get
			{
				return this._PaymentProcessor;
			}
			set
			{
				if ((this._PaymentProcessor != value))
				{
					this.OnPaymentProcessorChanging(value);
					this.SendPropertyChanging();
					this._PaymentProcessor = value;
					this.SendPropertyChanged("PaymentProcessor");
					this.OnPaymentProcessorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorUserId", DbType="NVarChar(50)")]
		public string ProcessorUserId
		{
			get
			{
				return this._ProcessorUserId;
			}
			set
			{
				if ((this._ProcessorUserId != value))
				{
					this.OnProcessorUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessorUserId = value;
					this.SendPropertyChanged("ProcessorUserId");
					this.OnProcessorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorPassword", DbType="NVarChar(50)")]
		public string ProcessorPassword
		{
			get
			{
				return this._ProcessorPassword;
			}
			set
			{
				if ((this._ProcessorPassword != value))
				{
					this.OnProcessorPasswordChanging(value);
					this.SendPropertyChanging();
					this._ProcessorPassword = value;
					this.SendPropertyChanged("ProcessorPassword");
					this.OnProcessorPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteLogHistory", DbType="Int")]
		public System.Nullable<int> SiteLogHistory
		{
			get
			{
				return this._SiteLogHistory;
			}
			set
			{
				if ((this._SiteLogHistory != value))
				{
					this.OnSiteLogHistoryChanging(value);
					this.SendPropertyChanging();
					this._SiteLogHistory = value;
					this.SendPropertyChanged("SiteLogHistory");
					this.OnSiteLogHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLanguage", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DefaultLanguage
		{
			get
			{
				return this._DefaultLanguage;
			}
			set
			{
				if ((this._DefaultLanguage != value))
				{
					this.OnDefaultLanguageChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguage = value;
					this.SendPropertyChanged("DefaultLanguage");
					this.OnDefaultLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimezoneOffset", DbType="Int NOT NULL")]
		public int TimezoneOffset
		{
			get
			{
				return this._TimezoneOffset;
			}
			set
			{
				if ((this._TimezoneOffset != value))
				{
					this.OnTimezoneOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimezoneOffset = value;
					this.SendPropertyChanged("TimezoneOffset");
					this.OnTimezoneOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeDirectory", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string HomeDirectory
		{
			get
			{
				return this._HomeDirectory;
			}
			set
			{
				if ((this._HomeDirectory != value))
				{
					this.OnHomeDirectoryChanging(value);
					this.SendPropertyChanging();
					this._HomeDirectory = value;
					this.SendPropertyChanged("HomeDirectory");
					this.OnHomeDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageQuota", DbType="Int NOT NULL")]
		public int PageQuota
		{
			get
			{
				return this._PageQuota;
			}
			set
			{
				if ((this._PageQuota != value))
				{
					this.OnPageQuotaChanging(value);
					this.SendPropertyChanging();
					this._PageQuota = value;
					this.SendPropertyChanged("PageQuota");
					this.OnPageQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserQuota", DbType="Int NOT NULL")]
		public int UserQuota
		{
			get
			{
				return this._UserQuota;
			}
			set
			{
				if ((this._UserQuota != value))
				{
					this.OnUserQuotaChanging(value);
					this.SendPropertyChanging();
					this._UserQuota = value;
					this.SendPropertyChanged("UserQuota");
					this.OnUserQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalGroupID", DbType="Int")]
		public System.Nullable<int> PortalGroupID
		{
			get
			{
				return this._PortalGroupID;
			}
			set
			{
				if ((this._PortalGroupID != value))
				{
					this.OnPortalGroupIDChanging(value);
					this.SendPropertyChanging();
					this._PortalGroupID = value;
					this.SendPropertyChanged("PortalGroupID");
					this.OnPortalGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_AnonymousUser", Storage="_dnn_AnonymousUsers", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_AnonymousUser> dnn_AnonymousUsers
		{
			get
			{
				return this._dnn_AnonymousUsers;
			}
			set
			{
				this._dnn_AnonymousUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_File", Storage="_dnn_Files", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<dnn_File> dnn_Files
		{
			get
			{
				return this._dnn_Files;
			}
			set
			{
				this._dnn_Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_FolderMapping", Storage="_dnn_FolderMappings", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_FolderMapping> dnn_FolderMappings
		{
			get
			{
				return this._dnn_FolderMappings;
			}
			set
			{
				this._dnn_FolderMappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Folder", Storage="_dnn_Folders", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_Folder> dnn_Folders
		{
			get
			{
				return this._dnn_Folders;
			}
			set
			{
				this._dnn_Folders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Mobile_PreviewProfile", Storage="_dnn_Mobile_PreviewProfiles", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<dnn_Mobile_PreviewProfile> dnn_Mobile_PreviewProfiles
		{
			get
			{
				return this._dnn_Mobile_PreviewProfiles;
			}
			set
			{
				this._dnn_Mobile_PreviewProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Mobile_Redirection", Storage="_dnn_Mobile_Redirections", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<dnn_Mobile_Redirection> dnn_Mobile_Redirections
		{
			get
			{
				return this._dnn_Mobile_Redirections;
			}
			set
			{
				this._dnn_Mobile_Redirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Module", Storage="_dnn_Modules", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_Module> dnn_Modules
		{
			get
			{
				return this._dnn_Modules;
			}
			set
			{
				this._dnn_Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_PortalAlia", Storage="_dnn_PortalAlias", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_PortalAlia> dnn_PortalAlias
		{
			get
			{
				return this._dnn_PortalAlias;
			}
			set
			{
				this._dnn_PortalAlias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_PortalDesktopModule", Storage="_dnn_PortalDesktopModules", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_PortalDesktopModule> dnn_PortalDesktopModules
		{
			get
			{
				return this._dnn_PortalDesktopModules;
			}
			set
			{
				this._dnn_PortalDesktopModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_PortalLanguage", Storage="_dnn_PortalLanguages", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_PortalLanguage> dnn_PortalLanguages
		{
			get
			{
				return this._dnn_PortalLanguages;
			}
			set
			{
				this._dnn_PortalLanguages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_PortalLocalization", Storage="_dnn_PortalLocalizations", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_PortalLocalization> dnn_PortalLocalizations
		{
			get
			{
				return this._dnn_PortalLocalizations;
			}
			set
			{
				this._dnn_PortalLocalizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_PortalSetting", Storage="_dnn_PortalSettings", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_PortalSetting> dnn_PortalSettings
		{
			get
			{
				return this._dnn_PortalSettings;
			}
			set
			{
				this._dnn_PortalSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Profile", Storage="_dnn_Profiles", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<dnn_Profile> dnn_Profiles
		{
			get
			{
				return this._dnn_Profiles;
			}
			set
			{
				this._dnn_Profiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_ProfilePropertyDefinition", Storage="_dnn_ProfilePropertyDefinitions", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_ProfilePropertyDefinition> dnn_ProfilePropertyDefinitions
		{
			get
			{
				return this._dnn_ProfilePropertyDefinitions;
			}
			set
			{
				this._dnn_ProfilePropertyDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_RoleGroup", Storage="_dnn_RoleGroups", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_RoleGroup> dnn_RoleGroups
		{
			get
			{
				return this._dnn_RoleGroups;
			}
			set
			{
				this._dnn_RoleGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Role", Storage="_dnn_Roles", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_Role> dnn_Roles
		{
			get
			{
				return this._dnn_Roles;
			}
			set
			{
				this._dnn_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_SiteLog", Storage="_dnn_SiteLogs", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<dnn_SiteLog> dnn_SiteLogs
		{
			get
			{
				return this._dnn_SiteLogs;
			}
			set
			{
				this._dnn_SiteLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_SystemMessage", Storage="_dnn_SystemMessages", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_SystemMessage> dnn_SystemMessages
		{
			get
			{
				return this._dnn_SystemMessages;
			}
			set
			{
				this._dnn_SystemMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Tab", Storage="_dnn_Tabs", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_Tab> dnn_Tabs
		{
			get
			{
				return this._dnn_Tabs;
			}
			set
			{
				this._dnn_Tabs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Url", Storage="_dnn_Urls", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_Url> dnn_Urls
		{
			get
			{
				return this._dnn_Urls;
			}
			set
			{
				this._dnn_Urls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_UrlTracking", Storage="_dnn_UrlTrackings", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_UrlTracking> dnn_UrlTrackings
		{
			get
			{
				return this._dnn_UrlTrackings;
			}
			set
			{
				this._dnn_UrlTrackings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_UserPortal", Storage="_dnn_UserPortals", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<dnn_UserPortal> dnn_UserPortals
		{
			get
			{
				return this._dnn_UserPortals;
			}
			set
			{
				this._dnn_UserPortals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_UsersOnline", Storage="_dnn_UsersOnlines", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<dnn_UsersOnline> dnn_UsersOnlines
		{
			get
			{
				return this._dnn_UsersOnlines;
			}
			set
			{
				this._dnn_UsersOnlines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Vendor", Storage="_dnn_Vendors", ThisKey="PortalID", OtherKey="PortalId")]
		public EntitySet<dnn_Vendor> dnn_Vendors
		{
			get
			{
				return this._dnn_Vendors;
			}
			set
			{
				this._dnn_Vendors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_AnonymousUsers(dnn_AnonymousUser entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_AnonymousUsers(dnn_AnonymousUser entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_Files(dnn_File entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_Files(dnn_File entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_FolderMappings(dnn_FolderMapping entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_FolderMappings(dnn_FolderMapping entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_Folders(dnn_Folder entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_Folders(dnn_Folder entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_Mobile_PreviewProfiles(dnn_Mobile_PreviewProfile entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_Mobile_PreviewProfiles(dnn_Mobile_PreviewProfile entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_Mobile_Redirections(dnn_Mobile_Redirection entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_Mobile_Redirections(dnn_Mobile_Redirection entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_Modules(dnn_Module entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_Modules(dnn_Module entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_PortalAlias(dnn_PortalAlia entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_PortalAlias(dnn_PortalAlia entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_PortalDesktopModules(dnn_PortalDesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_PortalDesktopModules(dnn_PortalDesktopModule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_PortalLanguages(dnn_PortalLanguage entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_PortalLanguages(dnn_PortalLanguage entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_PortalLocalizations(dnn_PortalLocalization entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_PortalLocalizations(dnn_PortalLocalization entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_PortalSettings(dnn_PortalSetting entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_PortalSettings(dnn_PortalSetting entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_Profiles(dnn_Profile entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_Profiles(dnn_Profile entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_ProfilePropertyDefinitions(dnn_ProfilePropertyDefinition entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_ProfilePropertyDefinitions(dnn_ProfilePropertyDefinition entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_RoleGroups(dnn_RoleGroup entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_RoleGroups(dnn_RoleGroup entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_Roles(dnn_Role entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_Roles(dnn_Role entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_SiteLogs(dnn_SiteLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_SiteLogs(dnn_SiteLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_SystemMessages(dnn_SystemMessage entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_SystemMessages(dnn_SystemMessage entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_Tabs(dnn_Tab entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_Tabs(dnn_Tab entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_Urls(dnn_Url entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_Urls(dnn_Url entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_UrlTrackings(dnn_UrlTracking entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_UrlTrackings(dnn_UrlTracking entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_UserPortals(dnn_UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_UserPortals(dnn_UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_UsersOnlines(dnn_UsersOnline entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_UsersOnlines(dnn_UsersOnline entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
		
		private void attach_dnn_Vendors(dnn_Vendor entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = this;
		}
		
		private void detach_dnn_Vendors(dnn_Vendor entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Portal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_PortalSettings")]
	public partial class dnn_PortalSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private string _CultureCode;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    #endregion
		
		public dnn_PortalSetting()
		{
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(2000)")]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_PortalSetting", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_PortalSettings.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_PortalSettings.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Profile")]
	public partial class dnn_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfileId;
		
		private int _UserId;
		
		private int _PortalId;
		
		private string _ProfileData;
		
		private System.DateTime _CreatedDate;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
		private EntityRef<dnn_User> _dnn_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileIdChanging(int value);
    partial void OnProfileIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnProfileDataChanging(string value);
    partial void OnProfileDataChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public dnn_Profile()
		{
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			this._dnn_User = default(EntityRef<dnn_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProfileId
		{
			get
			{
				return this._ProfileId;
			}
			set
			{
				if ((this._ProfileId != value))
				{
					this.OnProfileIdChanging(value);
					this.SendPropertyChanging();
					this._ProfileId = value;
					this.SendPropertyChanged("ProfileId");
					this.OnProfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._dnn_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileData", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ProfileData
		{
			get
			{
				return this._ProfileData;
			}
			set
			{
				if ((this._ProfileData != value))
				{
					this.OnProfileDataChanging(value);
					this.SendPropertyChanging();
					this._ProfileData = value;
					this.SendPropertyChanged("ProfileData");
					this.OnProfileDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Profile", Storage="_dnn_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_Profiles.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_Profiles.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_Profile", Storage="_dnn_User", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_User dnn_User
		{
			get
			{
				return this._dnn_User.Entity;
			}
			set
			{
				dnn_User previousValue = this._dnn_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_User.Entity = null;
						previousValue.dnn_Profiles.Remove(this);
					}
					this._dnn_User.Entity = value;
					if ((value != null))
					{
						value.dnn_Profiles.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("dnn_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_ProfilePropertyDefinition")]
	public partial class dnn_ProfilePropertyDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PropertyDefinitionID;
		
		private System.Nullable<int> _PortalID;
		
		private System.Nullable<int> _ModuleDefID;
		
		private bool _Deleted;
		
		private int _DataType;
		
		private string _DefaultValue;
		
		private string _PropertyCategory;
		
		private string _PropertyName;
		
		private int _Length;
		
		private bool _Required;
		
		private string _ValidationExpression;
		
		private int _ViewOrder;
		
		private bool _Visible;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<int> _DefaultVisibility;
		
		private EntitySet<dnn_UserProfile> _dnn_UserProfiles;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyDefinitionIDChanging(int value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnModuleDefIDChanging(System.Nullable<int> value);
    partial void OnModuleDefIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDataTypeChanging(int value);
    partial void OnDataTypeChanged();
    partial void OnDefaultValueChanging(string value);
    partial void OnDefaultValueChanged();
    partial void OnPropertyCategoryChanging(string value);
    partial void OnPropertyCategoryChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnRequiredChanging(bool value);
    partial void OnRequiredChanged();
    partial void OnValidationExpressionChanging(string value);
    partial void OnValidationExpressionChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnDefaultVisibilityChanging(System.Nullable<int> value);
    partial void OnDefaultVisibilityChanged();
    #endregion
		
		public dnn_ProfilePropertyDefinition()
		{
			this._dnn_UserProfiles = new EntitySet<dnn_UserProfile>(new Action<dnn_UserProfile>(this.attach_dnn_UserProfiles), new Action<dnn_UserProfile>(this.detach_dnn_UserProfiles));
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int")]
		public System.Nullable<int> ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="Int NOT NULL")]
		public int DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyCategory", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyCategory
		{
			get
			{
				return this._PropertyCategory;
			}
			set
			{
				if ((this._PropertyCategory != value))
				{
					this.OnPropertyCategoryChanging(value);
					this.SendPropertyChanging();
					this._PropertyCategory = value;
					this.SendPropertyChanged("PropertyCategory");
					this.OnPropertyCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Required", DbType="Bit NOT NULL")]
		public bool Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationExpression", DbType="NVarChar(2000)")]
		public string ValidationExpression
		{
			get
			{
				return this._ValidationExpression;
			}
			set
			{
				if ((this._ValidationExpression != value))
				{
					this.OnValidationExpressionChanging(value);
					this.SendPropertyChanging();
					this._ValidationExpression = value;
					this.SendPropertyChanged("ValidationExpression");
					this.OnValidationExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int NOT NULL")]
		public int ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultVisibility", DbType="Int")]
		public System.Nullable<int> DefaultVisibility
		{
			get
			{
				return this._DefaultVisibility;
			}
			set
			{
				if ((this._DefaultVisibility != value))
				{
					this.OnDefaultVisibilityChanging(value);
					this.SendPropertyChanging();
					this._DefaultVisibility = value;
					this.SendPropertyChanged("DefaultVisibility");
					this.OnDefaultVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ProfilePropertyDefinition_dnn_UserProfile", Storage="_dnn_UserProfiles", ThisKey="PropertyDefinitionID", OtherKey="PropertyDefinitionID")]
		public EntitySet<dnn_UserProfile> dnn_UserProfiles
		{
			get
			{
				return this._dnn_UserProfiles;
			}
			set
			{
				this._dnn_UserProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_ProfilePropertyDefinition", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_ProfilePropertyDefinitions.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_ProfilePropertyDefinitions.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_UserProfiles(dnn_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ProfilePropertyDefinition = this;
		}
		
		private void detach_dnn_UserProfiles(dnn_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.dnn_ProfilePropertyDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_RoleGroups")]
	public partial class dnn_RoleGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleGroupID;
		
		private int _PortalID;
		
		private string _RoleGroupName;
		
		private string _Description;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn_Role> _dnn_Roles;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleGroupIDChanging(int value);
    partial void OnRoleGroupIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnRoleGroupNameChanging(string value);
    partial void OnRoleGroupNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_RoleGroup()
		{
			this._dnn_Roles = new EntitySet<dnn_Role>(new Action<dnn_Role>(this.attach_dnn_Roles), new Action<dnn_Role>(this.detach_dnn_Roles));
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleGroupID
		{
			get
			{
				return this._RoleGroupID;
			}
			set
			{
				if ((this._RoleGroupID != value))
				{
					this.OnRoleGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupID = value;
					this.SendPropertyChanged("RoleGroupID");
					this.OnRoleGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleGroupName
		{
			get
			{
				return this._RoleGroupName;
			}
			set
			{
				if ((this._RoleGroupName != value))
				{
					this.OnRoleGroupNameChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupName = value;
					this.SendPropertyChanged("RoleGroupName");
					this.OnRoleGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_RoleGroup_dnn_Role", Storage="_dnn_Roles", ThisKey="RoleGroupID", OtherKey="RoleGroupID")]
		public EntitySet<dnn_Role> dnn_Roles
		{
			get
			{
				return this._dnn_Roles;
			}
			set
			{
				this._dnn_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_RoleGroup", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_RoleGroups.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_RoleGroups.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_Roles(dnn_Role entity)
		{
			this.SendPropertyChanging();
			entity.dnn_RoleGroup = this;
		}
		
		private void detach_dnn_Roles(dnn_Role entity)
		{
			this.SendPropertyChanging();
			entity.dnn_RoleGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Roles")]
	public partial class dnn_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private int _PortalID;
		
		private string _RoleName;
		
		private string _Description;
		
		private System.Nullable<decimal> _ServiceFee;
		
		private System.Nullable<char> _BillingFrequency;
		
		private System.Nullable<int> _TrialPeriod;
		
		private System.Nullable<char> _TrialFrequency;
		
		private System.Nullable<int> _BillingPeriod;
		
		private System.Nullable<decimal> _TrialFee;
		
		private bool _IsPublic;
		
		private bool _AutoAssignment;
		
		private System.Nullable<int> _RoleGroupID;
		
		private string _RSVPCode;
		
		private string _IconFile;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn_UserRole> _dnn_UserRoles;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
		private EntityRef<dnn_RoleGroup> _dnn_RoleGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnServiceFeeChanging(System.Nullable<decimal> value);
    partial void OnServiceFeeChanged();
    partial void OnBillingFrequencyChanging(System.Nullable<char> value);
    partial void OnBillingFrequencyChanged();
    partial void OnTrialPeriodChanging(System.Nullable<int> value);
    partial void OnTrialPeriodChanged();
    partial void OnTrialFrequencyChanging(System.Nullable<char> value);
    partial void OnTrialFrequencyChanged();
    partial void OnBillingPeriodChanging(System.Nullable<int> value);
    partial void OnBillingPeriodChanged();
    partial void OnTrialFeeChanging(System.Nullable<decimal> value);
    partial void OnTrialFeeChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnAutoAssignmentChanging(bool value);
    partial void OnAutoAssignmentChanged();
    partial void OnRoleGroupIDChanging(System.Nullable<int> value);
    partial void OnRoleGroupIDChanged();
    partial void OnRSVPCodeChanging(string value);
    partial void OnRSVPCodeChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_Role()
		{
			this._dnn_UserRoles = new EntitySet<dnn_UserRole>(new Action<dnn_UserRole>(this.attach_dnn_UserRoles), new Action<dnn_UserRole>(this.detach_dnn_UserRoles));
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			this._dnn_RoleGroup = default(EntityRef<dnn_RoleGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceFee", DbType="Money")]
		public System.Nullable<decimal> ServiceFee
		{
			get
			{
				return this._ServiceFee;
			}
			set
			{
				if ((this._ServiceFee != value))
				{
					this.OnServiceFeeChanging(value);
					this.SendPropertyChanging();
					this._ServiceFee = value;
					this.SendPropertyChanged("ServiceFee");
					this.OnServiceFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingFrequency", DbType="Char(1)")]
		public System.Nullable<char> BillingFrequency
		{
			get
			{
				return this._BillingFrequency;
			}
			set
			{
				if ((this._BillingFrequency != value))
				{
					this.OnBillingFrequencyChanging(value);
					this.SendPropertyChanging();
					this._BillingFrequency = value;
					this.SendPropertyChanged("BillingFrequency");
					this.OnBillingFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialPeriod", DbType="Int")]
		public System.Nullable<int> TrialPeriod
		{
			get
			{
				return this._TrialPeriod;
			}
			set
			{
				if ((this._TrialPeriod != value))
				{
					this.OnTrialPeriodChanging(value);
					this.SendPropertyChanging();
					this._TrialPeriod = value;
					this.SendPropertyChanged("TrialPeriod");
					this.OnTrialPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialFrequency", DbType="Char(1)")]
		public System.Nullable<char> TrialFrequency
		{
			get
			{
				return this._TrialFrequency;
			}
			set
			{
				if ((this._TrialFrequency != value))
				{
					this.OnTrialFrequencyChanging(value);
					this.SendPropertyChanging();
					this._TrialFrequency = value;
					this.SendPropertyChanged("TrialFrequency");
					this.OnTrialFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingPeriod", DbType="Int")]
		public System.Nullable<int> BillingPeriod
		{
			get
			{
				return this._BillingPeriod;
			}
			set
			{
				if ((this._BillingPeriod != value))
				{
					this.OnBillingPeriodChanging(value);
					this.SendPropertyChanging();
					this._BillingPeriod = value;
					this.SendPropertyChanged("BillingPeriod");
					this.OnBillingPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrialFee", DbType="Money")]
		public System.Nullable<decimal> TrialFee
		{
			get
			{
				return this._TrialFee;
			}
			set
			{
				if ((this._TrialFee != value))
				{
					this.OnTrialFeeChanging(value);
					this.SendPropertyChanging();
					this._TrialFee = value;
					this.SendPropertyChanged("TrialFee");
					this.OnTrialFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoAssignment", DbType="Bit NOT NULL")]
		public bool AutoAssignment
		{
			get
			{
				return this._AutoAssignment;
			}
			set
			{
				if ((this._AutoAssignment != value))
				{
					this.OnAutoAssignmentChanging(value);
					this.SendPropertyChanging();
					this._AutoAssignment = value;
					this.SendPropertyChanged("AutoAssignment");
					this.OnAutoAssignmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupID", DbType="Int")]
		public System.Nullable<int> RoleGroupID
		{
			get
			{
				return this._RoleGroupID;
			}
			set
			{
				if ((this._RoleGroupID != value))
				{
					if (this._dnn_RoleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleGroupIDChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupID = value;
					this.SendPropertyChanged("RoleGroupID");
					this.OnRoleGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSVPCode", DbType="NVarChar(50)")]
		public string RSVPCode
		{
			get
			{
				return this._RSVPCode;
			}
			set
			{
				if ((this._RSVPCode != value))
				{
					this.OnRSVPCodeChanging(value);
					this.SendPropertyChanging();
					this._RSVPCode = value;
					this.SendPropertyChanged("RSVPCode");
					this.OnRSVPCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Role_dnn_UserRole", Storage="_dnn_UserRoles", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<dnn_UserRole> dnn_UserRoles
		{
			get
			{
				return this._dnn_UserRoles;
			}
			set
			{
				this._dnn_UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Role", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_Roles.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_Roles.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_RoleGroup_dnn_Role", Storage="_dnn_RoleGroup", ThisKey="RoleGroupID", OtherKey="RoleGroupID", IsForeignKey=true)]
		public dnn_RoleGroup dnn_RoleGroup
		{
			get
			{
				return this._dnn_RoleGroup.Entity;
			}
			set
			{
				dnn_RoleGroup previousValue = this._dnn_RoleGroup.Entity;
				if (((previousValue != value) 
							|| (this._dnn_RoleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_RoleGroup.Entity = null;
						previousValue.dnn_Roles.Remove(this);
					}
					this._dnn_RoleGroup.Entity = value;
					if ((value != null))
					{
						value.dnn_Roles.Add(this);
						this._RoleGroupID = value.RoleGroupID;
					}
					else
					{
						this._RoleGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_RoleGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_UserRoles(dnn_UserRole entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Role = this;
		}
		
		private void detach_dnn_UserRoles(dnn_UserRole entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Schedule")]
	public partial class dnn_Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleID;
		
		private string _TypeFullName;
		
		private int _TimeLapse;
		
		private string _TimeLapseMeasurement;
		
		private int _RetryTimeLapse;
		
		private string _RetryTimeLapseMeasurement;
		
		private int _RetainHistoryNum;
		
		private string _AttachToEvent;
		
		private bool _CatchUpEnabled;
		
		private bool _Enabled;
		
		private string _ObjectDependencies;
		
		private string _Servers;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private string _FriendlyName;
		
		private EntitySet<dnn_ScheduleHistory> _dnn_ScheduleHistories;
		
		private EntitySet<dnn_ScheduleItemSetting> _dnn_ScheduleItemSettings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleIDChanging(int value);
    partial void OnScheduleIDChanged();
    partial void OnTypeFullNameChanging(string value);
    partial void OnTypeFullNameChanged();
    partial void OnTimeLapseChanging(int value);
    partial void OnTimeLapseChanged();
    partial void OnTimeLapseMeasurementChanging(string value);
    partial void OnTimeLapseMeasurementChanged();
    partial void OnRetryTimeLapseChanging(int value);
    partial void OnRetryTimeLapseChanged();
    partial void OnRetryTimeLapseMeasurementChanging(string value);
    partial void OnRetryTimeLapseMeasurementChanged();
    partial void OnRetainHistoryNumChanging(int value);
    partial void OnRetainHistoryNumChanged();
    partial void OnAttachToEventChanging(string value);
    partial void OnAttachToEventChanged();
    partial void OnCatchUpEnabledChanging(bool value);
    partial void OnCatchUpEnabledChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnObjectDependenciesChanging(string value);
    partial void OnObjectDependenciesChanged();
    partial void OnServersChanging(string value);
    partial void OnServersChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    #endregion
		
		public dnn_Schedule()
		{
			this._dnn_ScheduleHistories = new EntitySet<dnn_ScheduleHistory>(new Action<dnn_ScheduleHistory>(this.attach_dnn_ScheduleHistories), new Action<dnn_ScheduleHistory>(this.detach_dnn_ScheduleHistories));
			this._dnn_ScheduleItemSettings = new EntitySet<dnn_ScheduleItemSetting>(new Action<dnn_ScheduleItemSetting>(this.attach_dnn_ScheduleItemSettings), new Action<dnn_ScheduleItemSetting>(this.detach_dnn_ScheduleItemSettings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeFullName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TypeFullName
		{
			get
			{
				return this._TypeFullName;
			}
			set
			{
				if ((this._TypeFullName != value))
				{
					this.OnTypeFullNameChanging(value);
					this.SendPropertyChanging();
					this._TypeFullName = value;
					this.SendPropertyChanged("TypeFullName");
					this.OnTypeFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLapse", DbType="Int NOT NULL")]
		public int TimeLapse
		{
			get
			{
				return this._TimeLapse;
			}
			set
			{
				if ((this._TimeLapse != value))
				{
					this.OnTimeLapseChanging(value);
					this.SendPropertyChanging();
					this._TimeLapse = value;
					this.SendPropertyChanged("TimeLapse");
					this.OnTimeLapseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLapseMeasurement", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string TimeLapseMeasurement
		{
			get
			{
				return this._TimeLapseMeasurement;
			}
			set
			{
				if ((this._TimeLapseMeasurement != value))
				{
					this.OnTimeLapseMeasurementChanging(value);
					this.SendPropertyChanging();
					this._TimeLapseMeasurement = value;
					this.SendPropertyChanged("TimeLapseMeasurement");
					this.OnTimeLapseMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetryTimeLapse", DbType="Int NOT NULL")]
		public int RetryTimeLapse
		{
			get
			{
				return this._RetryTimeLapse;
			}
			set
			{
				if ((this._RetryTimeLapse != value))
				{
					this.OnRetryTimeLapseChanging(value);
					this.SendPropertyChanging();
					this._RetryTimeLapse = value;
					this.SendPropertyChanged("RetryTimeLapse");
					this.OnRetryTimeLapseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetryTimeLapseMeasurement", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string RetryTimeLapseMeasurement
		{
			get
			{
				return this._RetryTimeLapseMeasurement;
			}
			set
			{
				if ((this._RetryTimeLapseMeasurement != value))
				{
					this.OnRetryTimeLapseMeasurementChanging(value);
					this.SendPropertyChanging();
					this._RetryTimeLapseMeasurement = value;
					this.SendPropertyChanged("RetryTimeLapseMeasurement");
					this.OnRetryTimeLapseMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetainHistoryNum", DbType="Int NOT NULL")]
		public int RetainHistoryNum
		{
			get
			{
				return this._RetainHistoryNum;
			}
			set
			{
				if ((this._RetainHistoryNum != value))
				{
					this.OnRetainHistoryNumChanging(value);
					this.SendPropertyChanging();
					this._RetainHistoryNum = value;
					this.SendPropertyChanged("RetainHistoryNum");
					this.OnRetainHistoryNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachToEvent", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AttachToEvent
		{
			get
			{
				return this._AttachToEvent;
			}
			set
			{
				if ((this._AttachToEvent != value))
				{
					this.OnAttachToEventChanging(value);
					this.SendPropertyChanging();
					this._AttachToEvent = value;
					this.SendPropertyChanged("AttachToEvent");
					this.OnAttachToEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatchUpEnabled", DbType="Bit NOT NULL")]
		public bool CatchUpEnabled
		{
			get
			{
				return this._CatchUpEnabled;
			}
			set
			{
				if ((this._CatchUpEnabled != value))
				{
					this.OnCatchUpEnabledChanging(value);
					this.SendPropertyChanging();
					this._CatchUpEnabled = value;
					this.SendPropertyChanged("CatchUpEnabled");
					this.OnCatchUpEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectDependencies", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string ObjectDependencies
		{
			get
			{
				return this._ObjectDependencies;
			}
			set
			{
				if ((this._ObjectDependencies != value))
				{
					this.OnObjectDependenciesChanging(value);
					this.SendPropertyChanging();
					this._ObjectDependencies = value;
					this.SendPropertyChanged("ObjectDependencies");
					this.OnObjectDependenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Servers", DbType="NVarChar(2000)")]
		public string Servers
		{
			get
			{
				return this._Servers;
			}
			set
			{
				if ((this._Servers != value))
				{
					this.OnServersChanging(value);
					this.SendPropertyChanging();
					this._Servers = value;
					this.SendPropertyChanged("Servers");
					this.OnServersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="NVarChar(200)")]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Schedule_dnn_ScheduleHistory", Storage="_dnn_ScheduleHistories", ThisKey="ScheduleID", OtherKey="ScheduleID")]
		public EntitySet<dnn_ScheduleHistory> dnn_ScheduleHistories
		{
			get
			{
				return this._dnn_ScheduleHistories;
			}
			set
			{
				this._dnn_ScheduleHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Schedule_dnn_ScheduleItemSetting", Storage="_dnn_ScheduleItemSettings", ThisKey="ScheduleID", OtherKey="ScheduleID")]
		public EntitySet<dnn_ScheduleItemSetting> dnn_ScheduleItemSettings
		{
			get
			{
				return this._dnn_ScheduleItemSettings;
			}
			set
			{
				this._dnn_ScheduleItemSettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_ScheduleHistories(dnn_ScheduleHistory entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Schedule = this;
		}
		
		private void detach_dnn_ScheduleHistories(dnn_ScheduleHistory entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Schedule = null;
		}
		
		private void attach_dnn_ScheduleItemSettings(dnn_ScheduleItemSetting entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Schedule = this;
		}
		
		private void detach_dnn_ScheduleItemSettings(dnn_ScheduleItemSetting entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_ScheduleHistory")]
	public partial class dnn_ScheduleHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleHistoryID;
		
		private int _ScheduleID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<bool> _Succeeded;
		
		private string _LogNotes;
		
		private System.Nullable<System.DateTime> _NextStart;
		
		private string _Server;
		
		private EntityRef<dnn_Schedule> _dnn_Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleHistoryIDChanging(int value);
    partial void OnScheduleHistoryIDChanged();
    partial void OnScheduleIDChanging(int value);
    partial void OnScheduleIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnSucceededChanging(System.Nullable<bool> value);
    partial void OnSucceededChanged();
    partial void OnLogNotesChanging(string value);
    partial void OnLogNotesChanged();
    partial void OnNextStartChanging(System.Nullable<System.DateTime> value);
    partial void OnNextStartChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    #endregion
		
		public dnn_ScheduleHistory()
		{
			this._dnn_Schedule = default(EntityRef<dnn_Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleHistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleHistoryID
		{
			get
			{
				return this._ScheduleHistoryID;
			}
			set
			{
				if ((this._ScheduleHistoryID != value))
				{
					this.OnScheduleHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleHistoryID = value;
					this.SendPropertyChanged("ScheduleHistoryID");
					this.OnScheduleHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int NOT NULL")]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					if (this._dnn_Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Succeeded", DbType="Bit")]
		public System.Nullable<bool> Succeeded
		{
			get
			{
				return this._Succeeded;
			}
			set
			{
				if ((this._Succeeded != value))
				{
					this.OnSucceededChanging(value);
					this.SendPropertyChanging();
					this._Succeeded = value;
					this.SendPropertyChanged("Succeeded");
					this.OnSucceededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogNotes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string LogNotes
		{
			get
			{
				return this._LogNotes;
			}
			set
			{
				if ((this._LogNotes != value))
				{
					this.OnLogNotesChanging(value);
					this.SendPropertyChanging();
					this._LogNotes = value;
					this.SendPropertyChanged("LogNotes");
					this.OnLogNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextStart
		{
			get
			{
				return this._NextStart;
			}
			set
			{
				if ((this._NextStart != value))
				{
					this.OnNextStartChanging(value);
					this.SendPropertyChanging();
					this._NextStart = value;
					this.SendPropertyChanged("NextStart");
					this.OnNextStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Server", DbType="NVarChar(150)")]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Schedule_dnn_ScheduleHistory", Storage="_dnn_Schedule", ThisKey="ScheduleID", OtherKey="ScheduleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Schedule dnn_Schedule
		{
			get
			{
				return this._dnn_Schedule.Entity;
			}
			set
			{
				dnn_Schedule previousValue = this._dnn_Schedule.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Schedule.Entity = null;
						previousValue.dnn_ScheduleHistories.Remove(this);
					}
					this._dnn_Schedule.Entity = value;
					if ((value != null))
					{
						value.dnn_ScheduleHistories.Add(this);
						this._ScheduleID = value.ScheduleID;
					}
					else
					{
						this._ScheduleID = default(int);
					}
					this.SendPropertyChanged("dnn_Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_ScheduleItemSettings")]
	public partial class dnn_ScheduleItemSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private EntityRef<dnn_Schedule> _dnn_Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleIDChanging(int value);
    partial void OnScheduleIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    #endregion
		
		public dnn_ScheduleItemSetting()
		{
			this._dnn_Schedule = default(EntityRef<dnn_Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					if (this._dnn_Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Schedule_dnn_ScheduleItemSetting", Storage="_dnn_Schedule", ThisKey="ScheduleID", OtherKey="ScheduleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Schedule dnn_Schedule
		{
			get
			{
				return this._dnn_Schedule.Entity;
			}
			set
			{
				dnn_Schedule previousValue = this._dnn_Schedule.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Schedule.Entity = null;
						previousValue.dnn_ScheduleItemSettings.Remove(this);
					}
					this._dnn_Schedule.Entity = value;
					if ((value != null))
					{
						value.dnn_ScheduleItemSettings.Add(this);
						this._ScheduleID = value.ScheduleID;
					}
					else
					{
						this._ScheduleID = default(int);
					}
					this.SendPropertyChanged("dnn_Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_SearchCommonWords")]
	public partial class dnn_SearchCommonWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommonWordID;
		
		private string _CommonWord;
		
		private string _Locale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommonWordIDChanging(int value);
    partial void OnCommonWordIDChanged();
    partial void OnCommonWordChanging(string value);
    partial void OnCommonWordChanged();
    partial void OnLocaleChanging(string value);
    partial void OnLocaleChanged();
    #endregion
		
		public dnn_SearchCommonWord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommonWordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommonWordID
		{
			get
			{
				return this._CommonWordID;
			}
			set
			{
				if ((this._CommonWordID != value))
				{
					this.OnCommonWordIDChanging(value);
					this.SendPropertyChanging();
					this._CommonWordID = value;
					this.SendPropertyChanged("CommonWordID");
					this.OnCommonWordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommonWord", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CommonWord
		{
			get
			{
				return this._CommonWord;
			}
			set
			{
				if ((this._CommonWord != value))
				{
					this.OnCommonWordChanging(value);
					this.SendPropertyChanging();
					this._CommonWord = value;
					this.SendPropertyChanged("CommonWord");
					this.OnCommonWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locale", DbType="NVarChar(10)")]
		public string Locale
		{
			get
			{
				return this._Locale;
			}
			set
			{
				if ((this._Locale != value))
				{
					this.OnLocaleChanging(value);
					this.SendPropertyChanging();
					this._Locale = value;
					this.SendPropertyChanged("Locale");
					this.OnLocaleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_SearchIndexer")]
	public partial class dnn_SearchIndexer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchIndexerID;
		
		private string _SearchIndexerAssemblyQualifiedName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchIndexerIDChanging(int value);
    partial void OnSearchIndexerIDChanged();
    partial void OnSearchIndexerAssemblyQualifiedNameChanging(string value);
    partial void OnSearchIndexerAssemblyQualifiedNameChanged();
    #endregion
		
		public dnn_SearchIndexer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchIndexerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchIndexerID
		{
			get
			{
				return this._SearchIndexerID;
			}
			set
			{
				if ((this._SearchIndexerID != value))
				{
					this.OnSearchIndexerIDChanging(value);
					this.SendPropertyChanging();
					this._SearchIndexerID = value;
					this.SendPropertyChanged("SearchIndexerID");
					this.OnSearchIndexerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchIndexerAssemblyQualifiedName", DbType="Char(200) NOT NULL", CanBeNull=false)]
		public string SearchIndexerAssemblyQualifiedName
		{
			get
			{
				return this._SearchIndexerAssemblyQualifiedName;
			}
			set
			{
				if ((this._SearchIndexerAssemblyQualifiedName != value))
				{
					this.OnSearchIndexerAssemblyQualifiedNameChanging(value);
					this.SendPropertyChanging();
					this._SearchIndexerAssemblyQualifiedName = value;
					this.SendPropertyChanged("SearchIndexerAssemblyQualifiedName");
					this.OnSearchIndexerAssemblyQualifiedNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_SearchItem")]
	public partial class dnn_SearchItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchItemID;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<int> _Author;
		
		private System.DateTime _PubDate;
		
		private int _ModuleId;
		
		private string _SearchKey;
		
		private string _Guid;
		
		private System.Nullable<int> _HitCount;
		
		private System.Nullable<int> _ImageFileId;
		
		private EntitySet<dnn_SearchItemWord> _dnn_SearchItemWords;
		
		private EntityRef<dnn_Module> _dnn_Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchItemIDChanging(int value);
    partial void OnSearchItemIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAuthorChanging(System.Nullable<int> value);
    partial void OnAuthorChanged();
    partial void OnPubDateChanging(System.DateTime value);
    partial void OnPubDateChanged();
    partial void OnModuleIdChanging(int value);
    partial void OnModuleIdChanged();
    partial void OnSearchKeyChanging(string value);
    partial void OnSearchKeyChanged();
    partial void OnGuidChanging(string value);
    partial void OnGuidChanged();
    partial void OnHitCountChanging(System.Nullable<int> value);
    partial void OnHitCountChanged();
    partial void OnImageFileIdChanging(System.Nullable<int> value);
    partial void OnImageFileIdChanged();
    #endregion
		
		public dnn_SearchItem()
		{
			this._dnn_SearchItemWords = new EntitySet<dnn_SearchItemWord>(new Action<dnn_SearchItemWord>(this.attach_dnn_SearchItemWords), new Action<dnn_SearchItemWord>(this.detach_dnn_SearchItemWords));
			this._dnn_Module = default(EntityRef<dnn_Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchItemID
		{
			get
			{
				return this._SearchItemID;
			}
			set
			{
				if ((this._SearchItemID != value))
				{
					this.OnSearchItemIDChanging(value);
					this.SendPropertyChanging();
					this._SearchItemID = value;
					this.SendPropertyChanged("SearchItemID");
					this.OnSearchItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="Int")]
		public System.Nullable<int> Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PubDate", DbType="DateTime NOT NULL")]
		public System.DateTime PubDate
		{
			get
			{
				return this._PubDate;
			}
			set
			{
				if ((this._PubDate != value))
				{
					this.OnPubDateChanging(value);
					this.SendPropertyChanging();
					this._PubDate = value;
					this.SendPropertyChanged("PubDate");
					this.OnPubDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL")]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					if (this._dnn_Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchKey", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SearchKey
		{
			get
			{
				return this._SearchKey;
			}
			set
			{
				if ((this._SearchKey != value))
				{
					this.OnSearchKeyChanging(value);
					this.SendPropertyChanging();
					this._SearchKey = value;
					this.SendPropertyChanged("SearchKey");
					this.OnSearchKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="VarChar(200)")]
		public string Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitCount", DbType="Int")]
		public System.Nullable<int> HitCount
		{
			get
			{
				return this._HitCount;
			}
			set
			{
				if ((this._HitCount != value))
				{
					this.OnHitCountChanging(value);
					this.SendPropertyChanging();
					this._HitCount = value;
					this.SendPropertyChanged("HitCount");
					this.OnHitCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFileId", DbType="Int")]
		public System.Nullable<int> ImageFileId
		{
			get
			{
				return this._ImageFileId;
			}
			set
			{
				if ((this._ImageFileId != value))
				{
					this.OnImageFileIdChanging(value);
					this.SendPropertyChanging();
					this._ImageFileId = value;
					this.SendPropertyChanged("ImageFileId");
					this.OnImageFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_SearchItem_dnn_SearchItemWord", Storage="_dnn_SearchItemWords", ThisKey="SearchItemID", OtherKey="SearchItemID")]
		public EntitySet<dnn_SearchItemWord> dnn_SearchItemWords
		{
			get
			{
				return this._dnn_SearchItemWords;
			}
			set
			{
				this._dnn_SearchItemWords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_SearchItem", Storage="_dnn_Module", ThisKey="ModuleId", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Module dnn_Module
		{
			get
			{
				return this._dnn_Module.Entity;
			}
			set
			{
				dnn_Module previousValue = this._dnn_Module.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Module.Entity = null;
						previousValue.dnn_SearchItems.Remove(this);
					}
					this._dnn_Module.Entity = value;
					if ((value != null))
					{
						value.dnn_SearchItems.Add(this);
						this._ModuleId = value.ModuleID;
					}
					else
					{
						this._ModuleId = default(int);
					}
					this.SendPropertyChanged("dnn_Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_SearchItemWords(dnn_SearchItemWord entity)
		{
			this.SendPropertyChanging();
			entity.dnn_SearchItem = this;
		}
		
		private void detach_dnn_SearchItemWords(dnn_SearchItemWord entity)
		{
			this.SendPropertyChanging();
			entity.dnn_SearchItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_SearchItemWord")]
	public partial class dnn_SearchItemWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchItemWordID;
		
		private int _SearchItemID;
		
		private int _SearchWordsID;
		
		private int _Occurrences;
		
		private EntitySet<dnn_SearchItemWordPosition> _dnn_SearchItemWordPositions;
		
		private EntityRef<dnn_SearchItem> _dnn_SearchItem;
		
		private EntityRef<dnn_SearchWord> _dnn_SearchWord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchItemWordIDChanging(int value);
    partial void OnSearchItemWordIDChanged();
    partial void OnSearchItemIDChanging(int value);
    partial void OnSearchItemIDChanged();
    partial void OnSearchWordsIDChanging(int value);
    partial void OnSearchWordsIDChanged();
    partial void OnOccurrencesChanging(int value);
    partial void OnOccurrencesChanged();
    #endregion
		
		public dnn_SearchItemWord()
		{
			this._dnn_SearchItemWordPositions = new EntitySet<dnn_SearchItemWordPosition>(new Action<dnn_SearchItemWordPosition>(this.attach_dnn_SearchItemWordPositions), new Action<dnn_SearchItemWordPosition>(this.detach_dnn_SearchItemWordPositions));
			this._dnn_SearchItem = default(EntityRef<dnn_SearchItem>);
			this._dnn_SearchWord = default(EntityRef<dnn_SearchWord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemWordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchItemWordID
		{
			get
			{
				return this._SearchItemWordID;
			}
			set
			{
				if ((this._SearchItemWordID != value))
				{
					this.OnSearchItemWordIDChanging(value);
					this.SendPropertyChanging();
					this._SearchItemWordID = value;
					this.SendPropertyChanged("SearchItemWordID");
					this.OnSearchItemWordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemID", DbType="Int NOT NULL")]
		public int SearchItemID
		{
			get
			{
				return this._SearchItemID;
			}
			set
			{
				if ((this._SearchItemID != value))
				{
					if (this._dnn_SearchItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSearchItemIDChanging(value);
					this.SendPropertyChanging();
					this._SearchItemID = value;
					this.SendPropertyChanged("SearchItemID");
					this.OnSearchItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordsID", DbType="Int NOT NULL")]
		public int SearchWordsID
		{
			get
			{
				return this._SearchWordsID;
			}
			set
			{
				if ((this._SearchWordsID != value))
				{
					if (this._dnn_SearchWord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSearchWordsIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordsID = value;
					this.SendPropertyChanged("SearchWordsID");
					this.OnSearchWordsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occurrences", DbType="Int NOT NULL")]
		public int Occurrences
		{
			get
			{
				return this._Occurrences;
			}
			set
			{
				if ((this._Occurrences != value))
				{
					this.OnOccurrencesChanging(value);
					this.SendPropertyChanging();
					this._Occurrences = value;
					this.SendPropertyChanged("Occurrences");
					this.OnOccurrencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_SearchItemWord_dnn_SearchItemWordPosition", Storage="_dnn_SearchItemWordPositions", ThisKey="SearchItemWordID", OtherKey="SearchItemWordID")]
		public EntitySet<dnn_SearchItemWordPosition> dnn_SearchItemWordPositions
		{
			get
			{
				return this._dnn_SearchItemWordPositions;
			}
			set
			{
				this._dnn_SearchItemWordPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_SearchItem_dnn_SearchItemWord", Storage="_dnn_SearchItem", ThisKey="SearchItemID", OtherKey="SearchItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_SearchItem dnn_SearchItem
		{
			get
			{
				return this._dnn_SearchItem.Entity;
			}
			set
			{
				dnn_SearchItem previousValue = this._dnn_SearchItem.Entity;
				if (((previousValue != value) 
							|| (this._dnn_SearchItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_SearchItem.Entity = null;
						previousValue.dnn_SearchItemWords.Remove(this);
					}
					this._dnn_SearchItem.Entity = value;
					if ((value != null))
					{
						value.dnn_SearchItemWords.Add(this);
						this._SearchItemID = value.SearchItemID;
					}
					else
					{
						this._SearchItemID = default(int);
					}
					this.SendPropertyChanged("dnn_SearchItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_SearchWord_dnn_SearchItemWord", Storage="_dnn_SearchWord", ThisKey="SearchWordsID", OtherKey="SearchWordsID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_SearchWord dnn_SearchWord
		{
			get
			{
				return this._dnn_SearchWord.Entity;
			}
			set
			{
				dnn_SearchWord previousValue = this._dnn_SearchWord.Entity;
				if (((previousValue != value) 
							|| (this._dnn_SearchWord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_SearchWord.Entity = null;
						previousValue.dnn_SearchItemWords.Remove(this);
					}
					this._dnn_SearchWord.Entity = value;
					if ((value != null))
					{
						value.dnn_SearchItemWords.Add(this);
						this._SearchWordsID = value.SearchWordsID;
					}
					else
					{
						this._SearchWordsID = default(int);
					}
					this.SendPropertyChanged("dnn_SearchWord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_SearchItemWordPositions(dnn_SearchItemWordPosition entity)
		{
			this.SendPropertyChanging();
			entity.dnn_SearchItemWord = this;
		}
		
		private void detach_dnn_SearchItemWordPositions(dnn_SearchItemWordPosition entity)
		{
			this.SendPropertyChanging();
			entity.dnn_SearchItemWord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_SearchItemWordPosition")]
	public partial class dnn_SearchItemWordPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchItemWordPositionID;
		
		private int _SearchItemWordID;
		
		private int _ContentPosition;
		
		private EntityRef<dnn_SearchItemWord> _dnn_SearchItemWord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchItemWordPositionIDChanging(int value);
    partial void OnSearchItemWordPositionIDChanged();
    partial void OnSearchItemWordIDChanging(int value);
    partial void OnSearchItemWordIDChanged();
    partial void OnContentPositionChanging(int value);
    partial void OnContentPositionChanged();
    #endregion
		
		public dnn_SearchItemWordPosition()
		{
			this._dnn_SearchItemWord = default(EntityRef<dnn_SearchItemWord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemWordPositionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchItemWordPositionID
		{
			get
			{
				return this._SearchItemWordPositionID;
			}
			set
			{
				if ((this._SearchItemWordPositionID != value))
				{
					this.OnSearchItemWordPositionIDChanging(value);
					this.SendPropertyChanging();
					this._SearchItemWordPositionID = value;
					this.SendPropertyChanged("SearchItemWordPositionID");
					this.OnSearchItemWordPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemWordID", DbType="Int NOT NULL")]
		public int SearchItemWordID
		{
			get
			{
				return this._SearchItemWordID;
			}
			set
			{
				if ((this._SearchItemWordID != value))
				{
					if (this._dnn_SearchItemWord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSearchItemWordIDChanging(value);
					this.SendPropertyChanging();
					this._SearchItemWordID = value;
					this.SendPropertyChanged("SearchItemWordID");
					this.OnSearchItemWordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentPosition", DbType="Int NOT NULL")]
		public int ContentPosition
		{
			get
			{
				return this._ContentPosition;
			}
			set
			{
				if ((this._ContentPosition != value))
				{
					this.OnContentPositionChanging(value);
					this.SendPropertyChanging();
					this._ContentPosition = value;
					this.SendPropertyChanged("ContentPosition");
					this.OnContentPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_SearchItemWord_dnn_SearchItemWordPosition", Storage="_dnn_SearchItemWord", ThisKey="SearchItemWordID", OtherKey="SearchItemWordID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_SearchItemWord dnn_SearchItemWord
		{
			get
			{
				return this._dnn_SearchItemWord.Entity;
			}
			set
			{
				dnn_SearchItemWord previousValue = this._dnn_SearchItemWord.Entity;
				if (((previousValue != value) 
							|| (this._dnn_SearchItemWord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_SearchItemWord.Entity = null;
						previousValue.dnn_SearchItemWordPositions.Remove(this);
					}
					this._dnn_SearchItemWord.Entity = value;
					if ((value != null))
					{
						value.dnn_SearchItemWordPositions.Add(this);
						this._SearchItemWordID = value.SearchItemWordID;
					}
					else
					{
						this._SearchItemWordID = default(int);
					}
					this.SendPropertyChanged("dnn_SearchItemWord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_SearchWord")]
	public partial class dnn_SearchWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SearchWordsID;
		
		private string _Word;
		
		private System.Nullable<bool> _IsCommon;
		
		private int _HitCount;
		
		private EntitySet<dnn_SearchItemWord> _dnn_SearchItemWords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWordsIDChanging(int value);
    partial void OnSearchWordsIDChanged();
    partial void OnWordChanging(string value);
    partial void OnWordChanged();
    partial void OnIsCommonChanging(System.Nullable<bool> value);
    partial void OnIsCommonChanged();
    partial void OnHitCountChanging(int value);
    partial void OnHitCountChanged();
    #endregion
		
		public dnn_SearchWord()
		{
			this._dnn_SearchItemWords = new EntitySet<dnn_SearchItemWord>(new Action<dnn_SearchItemWord>(this.attach_dnn_SearchItemWords), new Action<dnn_SearchItemWord>(this.detach_dnn_SearchItemWords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWordsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SearchWordsID
		{
			get
			{
				return this._SearchWordsID;
			}
			set
			{
				if ((this._SearchWordsID != value))
				{
					this.OnSearchWordsIDChanging(value);
					this.SendPropertyChanging();
					this._SearchWordsID = value;
					this.SendPropertyChanged("SearchWordsID");
					this.OnSearchWordsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Word", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Word
		{
			get
			{
				return this._Word;
			}
			set
			{
				if ((this._Word != value))
				{
					this.OnWordChanging(value);
					this.SendPropertyChanging();
					this._Word = value;
					this.SendPropertyChanged("Word");
					this.OnWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCommon", DbType="Bit")]
		public System.Nullable<bool> IsCommon
		{
			get
			{
				return this._IsCommon;
			}
			set
			{
				if ((this._IsCommon != value))
				{
					this.OnIsCommonChanging(value);
					this.SendPropertyChanging();
					this._IsCommon = value;
					this.SendPropertyChanged("IsCommon");
					this.OnIsCommonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitCount", DbType="Int NOT NULL")]
		public int HitCount
		{
			get
			{
				return this._HitCount;
			}
			set
			{
				if ((this._HitCount != value))
				{
					this.OnHitCountChanging(value);
					this.SendPropertyChanging();
					this._HitCount = value;
					this.SendPropertyChanged("HitCount");
					this.OnHitCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_SearchWord_dnn_SearchItemWord", Storage="_dnn_SearchItemWords", ThisKey="SearchWordsID", OtherKey="SearchWordsID")]
		public EntitySet<dnn_SearchItemWord> dnn_SearchItemWords
		{
			get
			{
				return this._dnn_SearchItemWords;
			}
			set
			{
				this._dnn_SearchItemWords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_SearchItemWords(dnn_SearchItemWord entity)
		{
			this.SendPropertyChanging();
			entity.dnn_SearchWord = this;
		}
		
		private void detach_dnn_SearchItemWords(dnn_SearchItemWord entity)
		{
			this.SendPropertyChanging();
			entity.dnn_SearchWord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_SiteLog")]
	public partial class dnn_SiteLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteLogId;
		
		private System.DateTime _DateTime;
		
		private int _PortalId;
		
		private System.Nullable<int> _UserId;
		
		private string _Referrer;
		
		private string _Url;
		
		private string _UserAgent;
		
		private string _UserHostAddress;
		
		private string _UserHostName;
		
		private System.Nullable<int> _TabId;
		
		private System.Nullable<int> _AffiliateId;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteLogIdChanging(int value);
    partial void OnSiteLogIdChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnReferrerChanging(string value);
    partial void OnReferrerChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnUserHostAddressChanging(string value);
    partial void OnUserHostAddressChanged();
    partial void OnUserHostNameChanging(string value);
    partial void OnUserHostNameChanged();
    partial void OnTabIdChanging(System.Nullable<int> value);
    partial void OnTabIdChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    #endregion
		
		public dnn_SiteLog()
		{
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SiteLogId
		{
			get
			{
				return this._SiteLogId;
			}
			set
			{
				if ((this._SiteLogId != value))
				{
					this.OnSiteLogIdChanging(value);
					this.SendPropertyChanging();
					this._SiteLogId = value;
					this.SendPropertyChanged("SiteLogId");
					this.OnSiteLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referrer", DbType="NVarChar(255)")]
		public string Referrer
		{
			get
			{
				return this._Referrer;
			}
			set
			{
				if ((this._Referrer != value))
				{
					this.OnReferrerChanging(value);
					this.SendPropertyChanging();
					this._Referrer = value;
					this.SendPropertyChanged("Referrer");
					this.OnReferrerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="NVarChar(255)")]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserHostAddress", DbType="NVarChar(255)")]
		public string UserHostAddress
		{
			get
			{
				return this._UserHostAddress;
			}
			set
			{
				if ((this._UserHostAddress != value))
				{
					this.OnUserHostAddressChanging(value);
					this.SendPropertyChanging();
					this._UserHostAddress = value;
					this.SendPropertyChanged("UserHostAddress");
					this.OnUserHostAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserHostName", DbType="NVarChar(255)")]
		public string UserHostName
		{
			get
			{
				return this._UserHostName;
			}
			set
			{
				if ((this._UserHostName != value))
				{
					this.OnUserHostNameChanging(value);
					this.SendPropertyChanging();
					this._UserHostName = value;
					this.SendPropertyChanged("UserHostName");
					this.OnUserHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabId", DbType="Int")]
		public System.Nullable<int> TabId
		{
			get
			{
				return this._TabId;
			}
			set
			{
				if ((this._TabId != value))
				{
					this.OnTabIdChanging(value);
					this.SendPropertyChanging();
					this._TabId = value;
					this.SendPropertyChanged("TabId");
					this.OnTabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_SiteLog", Storage="_dnn_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_SiteLogs.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_SiteLogs.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_SkinControls")]
	public partial class dnn_SkinControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SkinControlID;
		
		private int _PackageID;
		
		private string _ControlKey;
		
		private string _ControlSrc;
		
		private string _IconFile;
		
		private string _HelpUrl;
		
		private bool _SupportsPartialRendering;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_Package> _dnn_Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkinControlIDChanging(int value);
    partial void OnSkinControlIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnControlKeyChanging(string value);
    partial void OnControlKeyChanged();
    partial void OnControlSrcChanging(string value);
    partial void OnControlSrcChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    partial void OnHelpUrlChanging(string value);
    partial void OnHelpUrlChanged();
    partial void OnSupportsPartialRenderingChanging(bool value);
    partial void OnSupportsPartialRenderingChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_SkinControl()
		{
			this._dnn_Package = default(EntityRef<dnn_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinControlID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SkinControlID
		{
			get
			{
				return this._SkinControlID;
			}
			set
			{
				if ((this._SkinControlID != value))
				{
					this.OnSkinControlIDChanging(value);
					this.SendPropertyChanging();
					this._SkinControlID = value;
					this.SendPropertyChanged("SkinControlID");
					this.OnSkinControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._dnn_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlKey", DbType="NVarChar(50)")]
		public string ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this.OnControlKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlKey = value;
					this.SendPropertyChanged("ControlKey");
					this.OnControlKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlSrc", DbType="NVarChar(256)")]
		public string ControlSrc
		{
			get
			{
				return this._ControlSrc;
			}
			set
			{
				if ((this._ControlSrc != value))
				{
					this.OnControlSrcChanging(value);
					this.SendPropertyChanging();
					this._ControlSrc = value;
					this.SendPropertyChanged("ControlSrc");
					this.OnControlSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpUrl", DbType="NVarChar(200)")]
		public string HelpUrl
		{
			get
			{
				return this._HelpUrl;
			}
			set
			{
				if ((this._HelpUrl != value))
				{
					this.OnHelpUrlChanging(value);
					this.SendPropertyChanging();
					this._HelpUrl = value;
					this.SendPropertyChanged("HelpUrl");
					this.OnHelpUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportsPartialRendering", DbType="Bit NOT NULL")]
		public bool SupportsPartialRendering
		{
			get
			{
				return this._SupportsPartialRendering;
			}
			set
			{
				if ((this._SupportsPartialRendering != value))
				{
					this.OnSupportsPartialRenderingChanging(value);
					this.SendPropertyChanging();
					this._SupportsPartialRendering = value;
					this.SendPropertyChanged("SupportsPartialRendering");
					this.OnSupportsPartialRenderingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_SkinControl", Storage="_dnn_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Package dnn_Package
		{
			get
			{
				return this._dnn_Package.Entity;
			}
			set
			{
				dnn_Package previousValue = this._dnn_Package.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Package.Entity = null;
						previousValue.dnn_SkinControls.Remove(this);
					}
					this._dnn_Package.Entity = value;
					if ((value != null))
					{
						value.dnn_SkinControls.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("dnn_Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_SkinPackages")]
	public partial class dnn_SkinPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SkinPackageID;
		
		private int _PackageID;
		
		private System.Nullable<int> _PortalID;
		
		private string _SkinName;
		
		private string _SkinType;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn_Skin> _dnn_Skins;
		
		private EntityRef<dnn_Package> _dnn_Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkinPackageIDChanging(int value);
    partial void OnSkinPackageIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnSkinNameChanging(string value);
    partial void OnSkinNameChanged();
    partial void OnSkinTypeChanging(string value);
    partial void OnSkinTypeChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_SkinPackage()
		{
			this._dnn_Skins = new EntitySet<dnn_Skin>(new Action<dnn_Skin>(this.attach_dnn_Skins), new Action<dnn_Skin>(this.detach_dnn_Skins));
			this._dnn_Package = default(EntityRef<dnn_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinPackageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SkinPackageID
		{
			get
			{
				return this._SkinPackageID;
			}
			set
			{
				if ((this._SkinPackageID != value))
				{
					this.OnSkinPackageIDChanging(value);
					this.SendPropertyChanging();
					this._SkinPackageID = value;
					this.SendPropertyChanged("SkinPackageID");
					this.OnSkinPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._dnn_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SkinName
		{
			get
			{
				return this._SkinName;
			}
			set
			{
				if ((this._SkinName != value))
				{
					this.OnSkinNameChanging(value);
					this.SendPropertyChanging();
					this._SkinName = value;
					this.SendPropertyChanged("SkinName");
					this.OnSkinNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SkinType
		{
			get
			{
				return this._SkinType;
			}
			set
			{
				if ((this._SkinType != value))
				{
					this.OnSkinTypeChanging(value);
					this.SendPropertyChanging();
					this._SkinType = value;
					this.SendPropertyChanged("SkinType");
					this.OnSkinTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_SkinPackage_dnn_Skin", Storage="_dnn_Skins", ThisKey="SkinPackageID", OtherKey="SkinPackageID")]
		public EntitySet<dnn_Skin> dnn_Skins
		{
			get
			{
				return this._dnn_Skins;
			}
			set
			{
				this._dnn_Skins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Package_dnn_SkinPackage", Storage="_dnn_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Package dnn_Package
		{
			get
			{
				return this._dnn_Package.Entity;
			}
			set
			{
				dnn_Package previousValue = this._dnn_Package.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Package.Entity = null;
						previousValue.dnn_SkinPackages.Remove(this);
					}
					this._dnn_Package.Entity = value;
					if ((value != null))
					{
						value.dnn_SkinPackages.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("dnn_Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_Skins(dnn_Skin entity)
		{
			this.SendPropertyChanging();
			entity.dnn_SkinPackage = this;
		}
		
		private void detach_dnn_Skins(dnn_Skin entity)
		{
			this.SendPropertyChanging();
			entity.dnn_SkinPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Skins")]
	public partial class dnn_Skin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SkinID;
		
		private int _SkinPackageID;
		
		private string _SkinSrc;
		
		private EntityRef<dnn_SkinPackage> _dnn_SkinPackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkinIDChanging(int value);
    partial void OnSkinIDChanged();
    partial void OnSkinPackageIDChanging(int value);
    partial void OnSkinPackageIDChanged();
    partial void OnSkinSrcChanging(string value);
    partial void OnSkinSrcChanged();
    #endregion
		
		public dnn_Skin()
		{
			this._dnn_SkinPackage = default(EntityRef<dnn_SkinPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SkinID
		{
			get
			{
				return this._SkinID;
			}
			set
			{
				if ((this._SkinID != value))
				{
					this.OnSkinIDChanging(value);
					this.SendPropertyChanging();
					this._SkinID = value;
					this.SendPropertyChanged("SkinID");
					this.OnSkinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinPackageID", DbType="Int NOT NULL")]
		public int SkinPackageID
		{
			get
			{
				return this._SkinPackageID;
			}
			set
			{
				if ((this._SkinPackageID != value))
				{
					if (this._dnn_SkinPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkinPackageIDChanging(value);
					this.SendPropertyChanging();
					this._SkinPackageID = value;
					this.SendPropertyChanged("SkinPackageID");
					this.OnSkinPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinSrc", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SkinSrc
		{
			get
			{
				return this._SkinSrc;
			}
			set
			{
				if ((this._SkinSrc != value))
				{
					this.OnSkinSrcChanging(value);
					this.SendPropertyChanging();
					this._SkinSrc = value;
					this.SendPropertyChanged("SkinSrc");
					this.OnSkinSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_SkinPackage_dnn_Skin", Storage="_dnn_SkinPackage", ThisKey="SkinPackageID", OtherKey="SkinPackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_SkinPackage dnn_SkinPackage
		{
			get
			{
				return this._dnn_SkinPackage.Entity;
			}
			set
			{
				dnn_SkinPackage previousValue = this._dnn_SkinPackage.Entity;
				if (((previousValue != value) 
							|| (this._dnn_SkinPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_SkinPackage.Entity = null;
						previousValue.dnn_Skins.Remove(this);
					}
					this._dnn_SkinPackage.Entity = value;
					if ((value != null))
					{
						value.dnn_Skins.Add(this);
						this._SkinPackageID = value.SkinPackageID;
					}
					else
					{
						this._SkinPackageID = default(int);
					}
					this.SendPropertyChanged("dnn_SkinPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_SystemMessages")]
	public partial class dnn_SystemMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private System.Nullable<int> _PortalID;
		
		private string _MessageName;
		
		private string _MessageValue;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnMessageNameChanging(string value);
    partial void OnMessageNameChanged();
    partial void OnMessageValueChanging(string value);
    partial void OnMessageValueChanged();
    #endregion
		
		public dnn_SystemMessage()
		{
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MessageName
		{
			get
			{
				return this._MessageName;
			}
			set
			{
				if ((this._MessageName != value))
				{
					this.OnMessageNameChanging(value);
					this.SendPropertyChanging();
					this._MessageName = value;
					this.SendPropertyChanged("MessageName");
					this.OnMessageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageValue", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MessageValue
		{
			get
			{
				return this._MessageValue;
			}
			set
			{
				if ((this._MessageValue != value))
				{
					this.OnMessageValueChanging(value);
					this.SendPropertyChanging();
					this._MessageValue = value;
					this.SendPropertyChanged("MessageValue");
					this.OnMessageValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_SystemMessage", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_SystemMessages.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_SystemMessages.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_TabModules")]
	public partial class dnn_TabModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TabModuleID;
		
		private int _TabID;
		
		private int _ModuleID;
		
		private string _PaneName;
		
		private int _ModuleOrder;
		
		private int _CacheTime;
		
		private string _Alignment;
		
		private string _Color;
		
		private string _Border;
		
		private string _IconFile;
		
		private int _Visibility;
		
		private string _ContainerSrc;
		
		private bool _DisplayTitle;
		
		private bool _DisplayPrint;
		
		private bool _DisplaySyndicate;
		
		private bool _IsWebSlice;
		
		private string _WebSliceTitle;
		
		private System.Nullable<System.DateTime> _WebSliceExpiryDate;
		
		private System.Nullable<int> _WebSliceTTL;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private bool _IsDeleted;
		
		private string _CacheMethod;
		
		private string _ModuleTitle;
		
		private string _Header;
		
		private string _Footer;
		
		private string _CultureCode;
		
		private System.Guid _UniqueId;
		
		private System.Guid _VersionGuid;
		
		private System.Nullable<System.Guid> _DefaultLanguageGuid;
		
		private System.Guid _LocalizedVersionGuid;
		
		private EntitySet<dnn_TabModuleSetting> _dnn_TabModuleSettings;
		
		private EntityRef<dnn_Module> _dnn_Module;
		
		private EntityRef<dnn_Tab> _dnn_Tab;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTabModuleIDChanging(int value);
    partial void OnTabModuleIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnPaneNameChanging(string value);
    partial void OnPaneNameChanged();
    partial void OnModuleOrderChanging(int value);
    partial void OnModuleOrderChanged();
    partial void OnCacheTimeChanging(int value);
    partial void OnCacheTimeChanged();
    partial void OnAlignmentChanging(string value);
    partial void OnAlignmentChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnBorderChanging(string value);
    partial void OnBorderChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    partial void OnVisibilityChanging(int value);
    partial void OnVisibilityChanged();
    partial void OnContainerSrcChanging(string value);
    partial void OnContainerSrcChanged();
    partial void OnDisplayTitleChanging(bool value);
    partial void OnDisplayTitleChanged();
    partial void OnDisplayPrintChanging(bool value);
    partial void OnDisplayPrintChanged();
    partial void OnDisplaySyndicateChanging(bool value);
    partial void OnDisplaySyndicateChanged();
    partial void OnIsWebSliceChanging(bool value);
    partial void OnIsWebSliceChanged();
    partial void OnWebSliceTitleChanging(string value);
    partial void OnWebSliceTitleChanged();
    partial void OnWebSliceExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWebSliceExpiryDateChanged();
    partial void OnWebSliceTTLChanging(System.Nullable<int> value);
    partial void OnWebSliceTTLChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCacheMethodChanging(string value);
    partial void OnCacheMethodChanged();
    partial void OnModuleTitleChanging(string value);
    partial void OnModuleTitleChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnFooterChanging(string value);
    partial void OnFooterChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnVersionGuidChanging(System.Guid value);
    partial void OnVersionGuidChanged();
    partial void OnDefaultLanguageGuidChanging(System.Nullable<System.Guid> value);
    partial void OnDefaultLanguageGuidChanged();
    partial void OnLocalizedVersionGuidChanging(System.Guid value);
    partial void OnLocalizedVersionGuidChanged();
    #endregion
		
		public dnn_TabModule()
		{
			this._dnn_TabModuleSettings = new EntitySet<dnn_TabModuleSetting>(new Action<dnn_TabModuleSetting>(this.attach_dnn_TabModuleSettings), new Action<dnn_TabModuleSetting>(this.detach_dnn_TabModuleSettings));
			this._dnn_Module = default(EntityRef<dnn_Module>);
			this._dnn_Tab = default(EntityRef<dnn_Tab>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TabModuleID
		{
			get
			{
				return this._TabModuleID;
			}
			set
			{
				if ((this._TabModuleID != value))
				{
					this.OnTabModuleIDChanging(value);
					this.SendPropertyChanging();
					this._TabModuleID = value;
					this.SendPropertyChanged("TabModuleID");
					this.OnTabModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					if (this._dnn_Tab.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._dnn_Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaneName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PaneName
		{
			get
			{
				return this._PaneName;
			}
			set
			{
				if ((this._PaneName != value))
				{
					this.OnPaneNameChanging(value);
					this.SendPropertyChanging();
					this._PaneName = value;
					this.SendPropertyChanged("PaneName");
					this.OnPaneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleOrder", DbType="Int NOT NULL")]
		public int ModuleOrder
		{
			get
			{
				return this._ModuleOrder;
			}
			set
			{
				if ((this._ModuleOrder != value))
				{
					this.OnModuleOrderChanging(value);
					this.SendPropertyChanging();
					this._ModuleOrder = value;
					this.SendPropertyChanged("ModuleOrder");
					this.OnModuleOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CacheTime", DbType="Int NOT NULL")]
		public int CacheTime
		{
			get
			{
				return this._CacheTime;
			}
			set
			{
				if ((this._CacheTime != value))
				{
					this.OnCacheTimeChanging(value);
					this.SendPropertyChanging();
					this._CacheTime = value;
					this.SendPropertyChanged("CacheTime");
					this.OnCacheTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alignment", DbType="NVarChar(10)")]
		public string Alignment
		{
			get
			{
				return this._Alignment;
			}
			set
			{
				if ((this._Alignment != value))
				{
					this.OnAlignmentChanging(value);
					this.SendPropertyChanging();
					this._Alignment = value;
					this.SendPropertyChanged("Alignment");
					this.OnAlignmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Border", DbType="NVarChar(1)")]
		public string Border
		{
			get
			{
				return this._Border;
			}
			set
			{
				if ((this._Border != value))
				{
					this.OnBorderChanging(value);
					this.SendPropertyChanging();
					this._Border = value;
					this.SendPropertyChanged("Border");
					this.OnBorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Int NOT NULL")]
		public int Visibility
		{
			get
			{
				return this._Visibility;
			}
			set
			{
				if ((this._Visibility != value))
				{
					this.OnVisibilityChanging(value);
					this.SendPropertyChanging();
					this._Visibility = value;
					this.SendPropertyChanged("Visibility");
					this.OnVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerSrc", DbType="NVarChar(200)")]
		public string ContainerSrc
		{
			get
			{
				return this._ContainerSrc;
			}
			set
			{
				if ((this._ContainerSrc != value))
				{
					this.OnContainerSrcChanging(value);
					this.SendPropertyChanging();
					this._ContainerSrc = value;
					this.SendPropertyChanged("ContainerSrc");
					this.OnContainerSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayTitle", DbType="Bit NOT NULL")]
		public bool DisplayTitle
		{
			get
			{
				return this._DisplayTitle;
			}
			set
			{
				if ((this._DisplayTitle != value))
				{
					this.OnDisplayTitleChanging(value);
					this.SendPropertyChanging();
					this._DisplayTitle = value;
					this.SendPropertyChanged("DisplayTitle");
					this.OnDisplayTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayPrint", DbType="Bit NOT NULL")]
		public bool DisplayPrint
		{
			get
			{
				return this._DisplayPrint;
			}
			set
			{
				if ((this._DisplayPrint != value))
				{
					this.OnDisplayPrintChanging(value);
					this.SendPropertyChanging();
					this._DisplayPrint = value;
					this.SendPropertyChanged("DisplayPrint");
					this.OnDisplayPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplaySyndicate", DbType="Bit NOT NULL")]
		public bool DisplaySyndicate
		{
			get
			{
				return this._DisplaySyndicate;
			}
			set
			{
				if ((this._DisplaySyndicate != value))
				{
					this.OnDisplaySyndicateChanging(value);
					this.SendPropertyChanging();
					this._DisplaySyndicate = value;
					this.SendPropertyChanged("DisplaySyndicate");
					this.OnDisplaySyndicateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWebSlice", DbType="Bit NOT NULL")]
		public bool IsWebSlice
		{
			get
			{
				return this._IsWebSlice;
			}
			set
			{
				if ((this._IsWebSlice != value))
				{
					this.OnIsWebSliceChanging(value);
					this.SendPropertyChanging();
					this._IsWebSlice = value;
					this.SendPropertyChanged("IsWebSlice");
					this.OnIsWebSliceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSliceTitle", DbType="NVarChar(256)")]
		public string WebSliceTitle
		{
			get
			{
				return this._WebSliceTitle;
			}
			set
			{
				if ((this._WebSliceTitle != value))
				{
					this.OnWebSliceTitleChanging(value);
					this.SendPropertyChanging();
					this._WebSliceTitle = value;
					this.SendPropertyChanged("WebSliceTitle");
					this.OnWebSliceTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSliceExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WebSliceExpiryDate
		{
			get
			{
				return this._WebSliceExpiryDate;
			}
			set
			{
				if ((this._WebSliceExpiryDate != value))
				{
					this.OnWebSliceExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._WebSliceExpiryDate = value;
					this.SendPropertyChanged("WebSliceExpiryDate");
					this.OnWebSliceExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSliceTTL", DbType="Int")]
		public System.Nullable<int> WebSliceTTL
		{
			get
			{
				return this._WebSliceTTL;
			}
			set
			{
				if ((this._WebSliceTTL != value))
				{
					this.OnWebSliceTTLChanging(value);
					this.SendPropertyChanging();
					this._WebSliceTTL = value;
					this.SendPropertyChanged("WebSliceTTL");
					this.OnWebSliceTTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CacheMethod", DbType="VarChar(50)")]
		public string CacheMethod
		{
			get
			{
				return this._CacheMethod;
			}
			set
			{
				if ((this._CacheMethod != value))
				{
					this.OnCacheMethodChanging(value);
					this.SendPropertyChanging();
					this._CacheMethod = value;
					this.SendPropertyChanged("CacheMethod");
					this.OnCacheMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleTitle", DbType="NVarChar(256)")]
		public string ModuleTitle
		{
			get
			{
				return this._ModuleTitle;
			}
			set
			{
				if ((this._ModuleTitle != value))
				{
					this.OnModuleTitleChanging(value);
					this.SendPropertyChanging();
					this._ModuleTitle = value;
					this.SendPropertyChanged("ModuleTitle");
					this.OnModuleTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Footer", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Footer
		{
			get
			{
				return this._Footer;
			}
			set
			{
				if ((this._Footer != value))
				{
					this.OnFooterChanging(value);
					this.SendPropertyChanging();
					this._Footer = value;
					this.SendPropertyChanged("Footer");
					this.OnFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(10)")]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionGuid
		{
			get
			{
				return this._VersionGuid;
			}
			set
			{
				if ((this._VersionGuid != value))
				{
					this.OnVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._VersionGuid = value;
					this.SendPropertyChanged("VersionGuid");
					this.OnVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLanguageGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DefaultLanguageGuid
		{
			get
			{
				return this._DefaultLanguageGuid;
			}
			set
			{
				if ((this._DefaultLanguageGuid != value))
				{
					this.OnDefaultLanguageGuidChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguageGuid = value;
					this.SendPropertyChanged("DefaultLanguageGuid");
					this.OnDefaultLanguageGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalizedVersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocalizedVersionGuid
		{
			get
			{
				return this._LocalizedVersionGuid;
			}
			set
			{
				if ((this._LocalizedVersionGuid != value))
				{
					this.OnLocalizedVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._LocalizedVersionGuid = value;
					this.SendPropertyChanged("LocalizedVersionGuid");
					this.OnLocalizedVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_TabModule_dnn_TabModuleSetting", Storage="_dnn_TabModuleSettings", ThisKey="TabModuleID", OtherKey="TabModuleID")]
		public EntitySet<dnn_TabModuleSetting> dnn_TabModuleSettings
		{
			get
			{
				return this._dnn_TabModuleSettings;
			}
			set
			{
				this._dnn_TabModuleSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Module_dnn_TabModule", Storage="_dnn_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Module dnn_Module
		{
			get
			{
				return this._dnn_Module.Entity;
			}
			set
			{
				dnn_Module previousValue = this._dnn_Module.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Module.Entity = null;
						previousValue.dnn_TabModules.Remove(this);
					}
					this._dnn_Module.Entity = value;
					if ((value != null))
					{
						value.dnn_TabModules.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("dnn_Module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Tab_dnn_TabModule", Storage="_dnn_Tab", ThisKey="TabID", OtherKey="TabID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Tab dnn_Tab
		{
			get
			{
				return this._dnn_Tab.Entity;
			}
			set
			{
				dnn_Tab previousValue = this._dnn_Tab.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Tab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Tab.Entity = null;
						previousValue.dnn_TabModules.Remove(this);
					}
					this._dnn_Tab.Entity = value;
					if ((value != null))
					{
						value.dnn_TabModules.Add(this);
						this._TabID = value.TabID;
					}
					else
					{
						this._TabID = default(int);
					}
					this.SendPropertyChanged("dnn_Tab");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_TabModuleSettings(dnn_TabModuleSetting entity)
		{
			this.SendPropertyChanging();
			entity.dnn_TabModule = this;
		}
		
		private void detach_dnn_TabModuleSettings(dnn_TabModuleSetting entity)
		{
			this.SendPropertyChanging();
			entity.dnn_TabModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_TabModuleSettings")]
	public partial class dnn_TabModuleSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TabModuleID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_TabModule> _dnn_TabModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTabModuleIDChanging(int value);
    partial void OnTabModuleIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_TabModuleSetting()
		{
			this._dnn_TabModule = default(EntityRef<dnn_TabModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabModuleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TabModuleID
		{
			get
			{
				return this._TabModuleID;
			}
			set
			{
				if ((this._TabModuleID != value))
				{
					if (this._dnn_TabModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTabModuleIDChanging(value);
					this.SendPropertyChanging();
					this._TabModuleID = value;
					this.SendPropertyChanged("TabModuleID");
					this.OnTabModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_TabModule_dnn_TabModuleSetting", Storage="_dnn_TabModule", ThisKey="TabModuleID", OtherKey="TabModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_TabModule dnn_TabModule
		{
			get
			{
				return this._dnn_TabModule.Entity;
			}
			set
			{
				dnn_TabModule previousValue = this._dnn_TabModule.Entity;
				if (((previousValue != value) 
							|| (this._dnn_TabModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_TabModule.Entity = null;
						previousValue.dnn_TabModuleSettings.Remove(this);
					}
					this._dnn_TabModule.Entity = value;
					if ((value != null))
					{
						value.dnn_TabModuleSettings.Add(this);
						this._TabModuleID = value.TabModuleID;
					}
					else
					{
						this._TabModuleID = default(int);
					}
					this.SendPropertyChanged("dnn_TabModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_TabPermission")]
	public partial class dnn_TabPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TabPermissionID;
		
		private int _TabID;
		
		private int _PermissionID;
		
		private bool _AllowAccess;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_Permission> _dnn_Permission;
		
		private EntityRef<dnn_Tab> _dnn_Tab;
		
		private EntityRef<dnn_User> _dnn_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTabPermissionIDChanging(int value);
    partial void OnTabPermissionIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnAllowAccessChanging(bool value);
    partial void OnAllowAccessChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_TabPermission()
		{
			this._dnn_Permission = default(EntityRef<dnn_Permission>);
			this._dnn_Tab = default(EntityRef<dnn_Tab>);
			this._dnn_User = default(EntityRef<dnn_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabPermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TabPermissionID
		{
			get
			{
				return this._TabPermissionID;
			}
			set
			{
				if ((this._TabPermissionID != value))
				{
					this.OnTabPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._TabPermissionID = value;
					this.SendPropertyChanged("TabPermissionID");
					this.OnTabPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					if (this._dnn_Tab.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="Int NOT NULL")]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					if (this._dnn_Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAccess", DbType="Bit NOT NULL")]
		public bool AllowAccess
		{
			get
			{
				return this._AllowAccess;
			}
			set
			{
				if ((this._AllowAccess != value))
				{
					this.OnAllowAccessChanging(value);
					this.SendPropertyChanging();
					this._AllowAccess = value;
					this.SendPropertyChanged("AllowAccess");
					this.OnAllowAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._dnn_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Permission_dnn_TabPermission", Storage="_dnn_Permission", ThisKey="PermissionID", OtherKey="PermissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Permission dnn_Permission
		{
			get
			{
				return this._dnn_Permission.Entity;
			}
			set
			{
				dnn_Permission previousValue = this._dnn_Permission.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Permission.Entity = null;
						previousValue.dnn_TabPermissions.Remove(this);
					}
					this._dnn_Permission.Entity = value;
					if ((value != null))
					{
						value.dnn_TabPermissions.Add(this);
						this._PermissionID = value.PermissionID;
					}
					else
					{
						this._PermissionID = default(int);
					}
					this.SendPropertyChanged("dnn_Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Tab_dnn_TabPermission", Storage="_dnn_Tab", ThisKey="TabID", OtherKey="TabID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Tab dnn_Tab
		{
			get
			{
				return this._dnn_Tab.Entity;
			}
			set
			{
				dnn_Tab previousValue = this._dnn_Tab.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Tab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Tab.Entity = null;
						previousValue.dnn_TabPermissions.Remove(this);
					}
					this._dnn_Tab.Entity = value;
					if ((value != null))
					{
						value.dnn_TabPermissions.Add(this);
						this._TabID = value.TabID;
					}
					else
					{
						this._TabID = default(int);
					}
					this.SendPropertyChanged("dnn_Tab");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_TabPermission", Storage="_dnn_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public dnn_User dnn_User
		{
			get
			{
				return this._dnn_User.Entity;
			}
			set
			{
				dnn_User previousValue = this._dnn_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_User.Entity = null;
						previousValue.dnn_TabPermissions.Remove(this);
					}
					this._dnn_User.Entity = value;
					if ((value != null))
					{
						value.dnn_TabPermissions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Tabs")]
	public partial class dnn_Tab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TabID;
		
		private int _TabOrder;
		
		private System.Nullable<int> _PortalID;
		
		private string _TabName;
		
		private bool _IsVisible;
		
		private System.Nullable<int> _ParentId;
		
		private int _Level;
		
		private string _IconFile;
		
		private bool _DisableLink;
		
		private string _Title;
		
		private string _Description;
		
		private string _KeyWords;
		
		private bool _IsDeleted;
		
		private string _Url;
		
		private string _SkinSrc;
		
		private string _ContainerSrc;
		
		private string _TabPath;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _RefreshInterval;
		
		private string _PageHeadText;
		
		private bool _IsSecure;
		
		private bool _PermanentRedirect;
		
		private double _SiteMapPriority;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private string _IconFileLarge;
		
		private string _CultureCode;
		
		private System.Nullable<int> _ContentItemID;
		
		private System.Guid _UniqueId;
		
		private System.Guid _VersionGuid;
		
		private System.Nullable<System.Guid> _DefaultLanguageGuid;
		
		private System.Guid _LocalizedVersionGuid;
		
		private EntitySet<dnn_TabModule> _dnn_TabModules;
		
		private EntitySet<dnn_TabPermission> _dnn_TabPermissions;
		
		private EntitySet<dnn_Tab> _dnn_Tabs;
		
		private EntityRef<dnn_ContentItem> _dnn_ContentItem;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
		private EntityRef<dnn_Tab> _dnn_Tab1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnTabOrderChanging(int value);
    partial void OnTabOrderChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnTabNameChanging(string value);
    partial void OnTabNameChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnIconFileChanging(string value);
    partial void OnIconFileChanged();
    partial void OnDisableLinkChanging(bool value);
    partial void OnDisableLinkChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSkinSrcChanging(string value);
    partial void OnSkinSrcChanged();
    partial void OnContainerSrcChanging(string value);
    partial void OnContainerSrcChanged();
    partial void OnTabPathChanging(string value);
    partial void OnTabPathChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnRefreshIntervalChanging(System.Nullable<int> value);
    partial void OnRefreshIntervalChanged();
    partial void OnPageHeadTextChanging(string value);
    partial void OnPageHeadTextChanged();
    partial void OnIsSecureChanging(bool value);
    partial void OnIsSecureChanged();
    partial void OnPermanentRedirectChanging(bool value);
    partial void OnPermanentRedirectChanged();
    partial void OnSiteMapPriorityChanging(double value);
    partial void OnSiteMapPriorityChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnIconFileLargeChanging(string value);
    partial void OnIconFileLargeChanged();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnContentItemIDChanging(System.Nullable<int> value);
    partial void OnContentItemIDChanged();
    partial void OnUniqueIdChanging(System.Guid value);
    partial void OnUniqueIdChanged();
    partial void OnVersionGuidChanging(System.Guid value);
    partial void OnVersionGuidChanged();
    partial void OnDefaultLanguageGuidChanging(System.Nullable<System.Guid> value);
    partial void OnDefaultLanguageGuidChanged();
    partial void OnLocalizedVersionGuidChanging(System.Guid value);
    partial void OnLocalizedVersionGuidChanged();
    #endregion
		
		public dnn_Tab()
		{
			this._dnn_TabModules = new EntitySet<dnn_TabModule>(new Action<dnn_TabModule>(this.attach_dnn_TabModules), new Action<dnn_TabModule>(this.detach_dnn_TabModules));
			this._dnn_TabPermissions = new EntitySet<dnn_TabPermission>(new Action<dnn_TabPermission>(this.attach_dnn_TabPermissions), new Action<dnn_TabPermission>(this.detach_dnn_TabPermissions));
			this._dnn_Tabs = new EntitySet<dnn_Tab>(new Action<dnn_Tab>(this.attach_dnn_Tabs), new Action<dnn_Tab>(this.detach_dnn_Tabs));
			this._dnn_ContentItem = default(EntityRef<dnn_ContentItem>);
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			this._dnn_Tab1 = default(EntityRef<dnn_Tab>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabOrder", DbType="Int NOT NULL")]
		public int TabOrder
		{
			get
			{
				return this._TabOrder;
			}
			set
			{
				if ((this._TabOrder != value))
				{
					this.OnTabOrderChanging(value);
					this.SendPropertyChanging();
					this._TabOrder = value;
					this.SendPropertyChanged("TabOrder");
					this.OnTabOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TabName
		{
			get
			{
				return this._TabName;
			}
			set
			{
				if ((this._TabName != value))
				{
					this.OnTabNameChanging(value);
					this.SendPropertyChanging();
					this._TabName = value;
					this.SendPropertyChanged("TabName");
					this.OnTabNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._dnn_Tab1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this.OnIconFileChanging(value);
					this.SendPropertyChanging();
					this._IconFile = value;
					this.SendPropertyChanged("IconFile");
					this.OnIconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableLink", DbType="Bit NOT NULL")]
		public bool DisableLink
		{
			get
			{
				return this._DisableLink;
			}
			set
			{
				if ((this._DisableLink != value))
				{
					this.OnDisableLinkChanging(value);
					this.SendPropertyChanging();
					this._DisableLink = value;
					this.SendPropertyChanged("DisableLink");
					this.OnDisableLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="NVarChar(500)")]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkinSrc", DbType="NVarChar(200)")]
		public string SkinSrc
		{
			get
			{
				return this._SkinSrc;
			}
			set
			{
				if ((this._SkinSrc != value))
				{
					this.OnSkinSrcChanging(value);
					this.SendPropertyChanging();
					this._SkinSrc = value;
					this.SendPropertyChanged("SkinSrc");
					this.OnSkinSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerSrc", DbType="NVarChar(200)")]
		public string ContainerSrc
		{
			get
			{
				return this._ContainerSrc;
			}
			set
			{
				if ((this._ContainerSrc != value))
				{
					this.OnContainerSrcChanging(value);
					this.SendPropertyChanging();
					this._ContainerSrc = value;
					this.SendPropertyChanged("ContainerSrc");
					this.OnContainerSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabPath", DbType="NVarChar(255)")]
		public string TabPath
		{
			get
			{
				return this._TabPath;
			}
			set
			{
				if ((this._TabPath != value))
				{
					this.OnTabPathChanging(value);
					this.SendPropertyChanging();
					this._TabPath = value;
					this.SendPropertyChanged("TabPath");
					this.OnTabPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshInterval", DbType="Int")]
		public System.Nullable<int> RefreshInterval
		{
			get
			{
				return this._RefreshInterval;
			}
			set
			{
				if ((this._RefreshInterval != value))
				{
					this.OnRefreshIntervalChanging(value);
					this.SendPropertyChanging();
					this._RefreshInterval = value;
					this.SendPropertyChanged("RefreshInterval");
					this.OnRefreshIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageHeadText", DbType="NVarChar(MAX)")]
		public string PageHeadText
		{
			get
			{
				return this._PageHeadText;
			}
			set
			{
				if ((this._PageHeadText != value))
				{
					this.OnPageHeadTextChanging(value);
					this.SendPropertyChanging();
					this._PageHeadText = value;
					this.SendPropertyChanged("PageHeadText");
					this.OnPageHeadTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSecure", DbType="Bit NOT NULL")]
		public bool IsSecure
		{
			get
			{
				return this._IsSecure;
			}
			set
			{
				if ((this._IsSecure != value))
				{
					this.OnIsSecureChanging(value);
					this.SendPropertyChanging();
					this._IsSecure = value;
					this.SendPropertyChanged("IsSecure");
					this.OnIsSecureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentRedirect", DbType="Bit NOT NULL")]
		public bool PermanentRedirect
		{
			get
			{
				return this._PermanentRedirect;
			}
			set
			{
				if ((this._PermanentRedirect != value))
				{
					this.OnPermanentRedirectChanging(value);
					this.SendPropertyChanging();
					this._PermanentRedirect = value;
					this.SendPropertyChanged("PermanentRedirect");
					this.OnPermanentRedirectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapPriority", DbType="Float NOT NULL")]
		public double SiteMapPriority
		{
			get
			{
				return this._SiteMapPriority;
			}
			set
			{
				if ((this._SiteMapPriority != value))
				{
					this.OnSiteMapPriorityChanging(value);
					this.SendPropertyChanging();
					this._SiteMapPriority = value;
					this.SendPropertyChanged("SiteMapPriority");
					this.OnSiteMapPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFileLarge", DbType="NVarChar(100)")]
		public string IconFileLarge
		{
			get
			{
				return this._IconFileLarge;
			}
			set
			{
				if ((this._IconFileLarge != value))
				{
					this.OnIconFileLargeChanging(value);
					this.SendPropertyChanging();
					this._IconFileLarge = value;
					this.SendPropertyChanged("IconFileLarge");
					this.OnIconFileLargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(10)")]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentItemID", DbType="Int")]
		public System.Nullable<int> ContentItemID
		{
			get
			{
				return this._ContentItemID;
			}
			set
			{
				if ((this._ContentItemID != value))
				{
					if (this._dnn_ContentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentItemIDChanging(value);
					this.SendPropertyChanging();
					this._ContentItemID = value;
					this.SendPropertyChanged("ContentItemID");
					this.OnContentItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueId
		{
			get
			{
				return this._UniqueId;
			}
			set
			{
				if ((this._UniqueId != value))
				{
					this.OnUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._UniqueId = value;
					this.SendPropertyChanged("UniqueId");
					this.OnUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionGuid
		{
			get
			{
				return this._VersionGuid;
			}
			set
			{
				if ((this._VersionGuid != value))
				{
					this.OnVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._VersionGuid = value;
					this.SendPropertyChanged("VersionGuid");
					this.OnVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLanguageGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DefaultLanguageGuid
		{
			get
			{
				return this._DefaultLanguageGuid;
			}
			set
			{
				if ((this._DefaultLanguageGuid != value))
				{
					this.OnDefaultLanguageGuidChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguageGuid = value;
					this.SendPropertyChanged("DefaultLanguageGuid");
					this.OnDefaultLanguageGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalizedVersionGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocalizedVersionGuid
		{
			get
			{
				return this._LocalizedVersionGuid;
			}
			set
			{
				if ((this._LocalizedVersionGuid != value))
				{
					this.OnLocalizedVersionGuidChanging(value);
					this.SendPropertyChanging();
					this._LocalizedVersionGuid = value;
					this.SendPropertyChanged("LocalizedVersionGuid");
					this.OnLocalizedVersionGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Tab_dnn_TabModule", Storage="_dnn_TabModules", ThisKey="TabID", OtherKey="TabID")]
		public EntitySet<dnn_TabModule> dnn_TabModules
		{
			get
			{
				return this._dnn_TabModules;
			}
			set
			{
				this._dnn_TabModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Tab_dnn_TabPermission", Storage="_dnn_TabPermissions", ThisKey="TabID", OtherKey="TabID")]
		public EntitySet<dnn_TabPermission> dnn_TabPermissions
		{
			get
			{
				return this._dnn_TabPermissions;
			}
			set
			{
				this._dnn_TabPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Tab_dnn_Tab", Storage="_dnn_Tabs", ThisKey="TabID", OtherKey="ParentId")]
		public EntitySet<dnn_Tab> dnn_Tabs
		{
			get
			{
				return this._dnn_Tabs;
			}
			set
			{
				this._dnn_Tabs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ContentItem_dnn_Tab", Storage="_dnn_ContentItem", ThisKey="ContentItemID", OtherKey="ContentItemID", IsForeignKey=true)]
		public dnn_ContentItem dnn_ContentItem
		{
			get
			{
				return this._dnn_ContentItem.Entity;
			}
			set
			{
				dnn_ContentItem previousValue = this._dnn_ContentItem.Entity;
				if (((previousValue != value) 
							|| (this._dnn_ContentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_ContentItem.Entity = null;
						previousValue.dnn_Tabs.Remove(this);
					}
					this._dnn_ContentItem.Entity = value;
					if ((value != null))
					{
						value.dnn_Tabs.Add(this);
						this._ContentItemID = value.ContentItemID;
					}
					else
					{
						this._ContentItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_ContentItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Tab", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_Tabs.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_Tabs.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Tab_dnn_Tab", Storage="_dnn_Tab1", ThisKey="ParentId", OtherKey="TabID", IsForeignKey=true)]
		public dnn_Tab dnn_Tab1
		{
			get
			{
				return this._dnn_Tab1.Entity;
			}
			set
			{
				dnn_Tab previousValue = this._dnn_Tab1.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Tab1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Tab1.Entity = null;
						previousValue.dnn_Tabs.Remove(this);
					}
					this._dnn_Tab1.Entity = value;
					if ((value != null))
					{
						value.dnn_Tabs.Add(this);
						this._ParentId = value.TabID;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Tab1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_TabModules(dnn_TabModule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Tab = this;
		}
		
		private void detach_dnn_TabModules(dnn_TabModule entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Tab = null;
		}
		
		private void attach_dnn_TabPermissions(dnn_TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Tab = this;
		}
		
		private void detach_dnn_TabPermissions(dnn_TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Tab = null;
		}
		
		private void attach_dnn_Tabs(dnn_Tab entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Tab1 = this;
		}
		
		private void detach_dnn_Tabs(dnn_Tab entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Tab1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_TabSettings")]
	public partial class dnn_TabSetting
	{
		
		private int _TabID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		public dnn_TabSetting()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this._TabID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this._SettingName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this._SettingValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this._CreatedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this._CreatedOnDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this._LastModifiedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this._LastModifiedOnDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Taxonomy_ScopeTypes")]
	public partial class dnn_Taxonomy_ScopeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScopeTypeID;
		
		private string _ScopeType;
		
		private EntitySet<dnn_Taxonomy_Vocabulary> _dnn_Taxonomy_Vocabularies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScopeTypeIDChanging(int value);
    partial void OnScopeTypeIDChanged();
    partial void OnScopeTypeChanging(string value);
    partial void OnScopeTypeChanged();
    #endregion
		
		public dnn_Taxonomy_ScopeType()
		{
			this._dnn_Taxonomy_Vocabularies = new EntitySet<dnn_Taxonomy_Vocabulary>(new Action<dnn_Taxonomy_Vocabulary>(this.attach_dnn_Taxonomy_Vocabularies), new Action<dnn_Taxonomy_Vocabulary>(this.detach_dnn_Taxonomy_Vocabularies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScopeTypeID
		{
			get
			{
				return this._ScopeTypeID;
			}
			set
			{
				if ((this._ScopeTypeID != value))
				{
					this.OnScopeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ScopeTypeID = value;
					this.SendPropertyChanged("ScopeTypeID");
					this.OnScopeTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeType", DbType="NVarChar(250)")]
		public string ScopeType
		{
			get
			{
				return this._ScopeType;
			}
			set
			{
				if ((this._ScopeType != value))
				{
					this.OnScopeTypeChanging(value);
					this.SendPropertyChanging();
					this._ScopeType = value;
					this.SendPropertyChanged("ScopeType");
					this.OnScopeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Taxonomy_ScopeType_dnn_Taxonomy_Vocabulary", Storage="_dnn_Taxonomy_Vocabularies", ThisKey="ScopeTypeID", OtherKey="ScopeTypeID")]
		public EntitySet<dnn_Taxonomy_Vocabulary> dnn_Taxonomy_Vocabularies
		{
			get
			{
				return this._dnn_Taxonomy_Vocabularies;
			}
			set
			{
				this._dnn_Taxonomy_Vocabularies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_Taxonomy_Vocabularies(dnn_Taxonomy_Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Taxonomy_ScopeType = this;
		}
		
		private void detach_dnn_Taxonomy_Vocabularies(dnn_Taxonomy_Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Taxonomy_ScopeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Taxonomy_Terms")]
	public partial class dnn_Taxonomy_Term : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TermID;
		
		private int _VocabularyID;
		
		private System.Nullable<int> _ParentTermID;
		
		private string _Name;
		
		private string _Description;
		
		private int _Weight;
		
		private int _TermLeft;
		
		private int _TermRight;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn_ContentItems_Tag> _dnn_ContentItems_Tags;
		
		private EntitySet<dnn_Taxonomy_Term> _dnn_Taxonomy_Terms;
		
		private EntityRef<dnn_Taxonomy_Term> _dnn_Taxonomy_Term1;
		
		private EntityRef<dnn_Taxonomy_Vocabulary> _dnn_Taxonomy_Vocabulary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTermIDChanging(int value);
    partial void OnTermIDChanged();
    partial void OnVocabularyIDChanging(int value);
    partial void OnVocabularyIDChanged();
    partial void OnParentTermIDChanging(System.Nullable<int> value);
    partial void OnParentTermIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnTermLeftChanging(int value);
    partial void OnTermLeftChanged();
    partial void OnTermRightChanging(int value);
    partial void OnTermRightChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_Taxonomy_Term()
		{
			this._dnn_ContentItems_Tags = new EntitySet<dnn_ContentItems_Tag>(new Action<dnn_ContentItems_Tag>(this.attach_dnn_ContentItems_Tags), new Action<dnn_ContentItems_Tag>(this.detach_dnn_ContentItems_Tags));
			this._dnn_Taxonomy_Terms = new EntitySet<dnn_Taxonomy_Term>(new Action<dnn_Taxonomy_Term>(this.attach_dnn_Taxonomy_Terms), new Action<dnn_Taxonomy_Term>(this.detach_dnn_Taxonomy_Terms));
			this._dnn_Taxonomy_Term1 = default(EntityRef<dnn_Taxonomy_Term>);
			this._dnn_Taxonomy_Vocabulary = default(EntityRef<dnn_Taxonomy_Vocabulary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					this.OnTermIDChanging(value);
					this.SendPropertyChanging();
					this._TermID = value;
					this.SendPropertyChanged("TermID");
					this.OnTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyID", DbType="Int NOT NULL")]
		public int VocabularyID
		{
			get
			{
				return this._VocabularyID;
			}
			set
			{
				if ((this._VocabularyID != value))
				{
					if (this._dnn_Taxonomy_Vocabulary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVocabularyIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyID = value;
					this.SendPropertyChanged("VocabularyID");
					this.OnVocabularyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTermID", DbType="Int")]
		public System.Nullable<int> ParentTermID
		{
			get
			{
				return this._ParentTermID;
			}
			set
			{
				if ((this._ParentTermID != value))
				{
					if (this._dnn_Taxonomy_Term1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentTermIDChanging(value);
					this.SendPropertyChanging();
					this._ParentTermID = value;
					this.SendPropertyChanged("ParentTermID");
					this.OnParentTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int NOT NULL")]
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermLeft", DbType="Int NOT NULL")]
		public int TermLeft
		{
			get
			{
				return this._TermLeft;
			}
			set
			{
				if ((this._TermLeft != value))
				{
					this.OnTermLeftChanging(value);
					this.SendPropertyChanging();
					this._TermLeft = value;
					this.SendPropertyChanged("TermLeft");
					this.OnTermLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermRight", DbType="Int NOT NULL")]
		public int TermRight
		{
			get
			{
				return this._TermRight;
			}
			set
			{
				if ((this._TermRight != value))
				{
					this.OnTermRightChanging(value);
					this.SendPropertyChanging();
					this._TermRight = value;
					this.SendPropertyChanged("TermRight");
					this.OnTermRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Taxonomy_Term_dnn_ContentItems_Tag", Storage="_dnn_ContentItems_Tags", ThisKey="TermID", OtherKey="TermID")]
		public EntitySet<dnn_ContentItems_Tag> dnn_ContentItems_Tags
		{
			get
			{
				return this._dnn_ContentItems_Tags;
			}
			set
			{
				this._dnn_ContentItems_Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Taxonomy_Term_dnn_Taxonomy_Term", Storage="_dnn_Taxonomy_Terms", ThisKey="TermID", OtherKey="ParentTermID")]
		public EntitySet<dnn_Taxonomy_Term> dnn_Taxonomy_Terms
		{
			get
			{
				return this._dnn_Taxonomy_Terms;
			}
			set
			{
				this._dnn_Taxonomy_Terms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Taxonomy_Term_dnn_Taxonomy_Term", Storage="_dnn_Taxonomy_Term1", ThisKey="ParentTermID", OtherKey="TermID", IsForeignKey=true)]
		public dnn_Taxonomy_Term dnn_Taxonomy_Term1
		{
			get
			{
				return this._dnn_Taxonomy_Term1.Entity;
			}
			set
			{
				dnn_Taxonomy_Term previousValue = this._dnn_Taxonomy_Term1.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Taxonomy_Term1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Taxonomy_Term1.Entity = null;
						previousValue.dnn_Taxonomy_Terms.Remove(this);
					}
					this._dnn_Taxonomy_Term1.Entity = value;
					if ((value != null))
					{
						value.dnn_Taxonomy_Terms.Add(this);
						this._ParentTermID = value.TermID;
					}
					else
					{
						this._ParentTermID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Taxonomy_Term1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Taxonomy_Vocabulary_dnn_Taxonomy_Term", Storage="_dnn_Taxonomy_Vocabulary", ThisKey="VocabularyID", OtherKey="VocabularyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Taxonomy_Vocabulary dnn_Taxonomy_Vocabulary
		{
			get
			{
				return this._dnn_Taxonomy_Vocabulary.Entity;
			}
			set
			{
				dnn_Taxonomy_Vocabulary previousValue = this._dnn_Taxonomy_Vocabulary.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Taxonomy_Vocabulary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Taxonomy_Vocabulary.Entity = null;
						previousValue.dnn_Taxonomy_Terms.Remove(this);
					}
					this._dnn_Taxonomy_Vocabulary.Entity = value;
					if ((value != null))
					{
						value.dnn_Taxonomy_Terms.Add(this);
						this._VocabularyID = value.VocabularyID;
					}
					else
					{
						this._VocabularyID = default(int);
					}
					this.SendPropertyChanged("dnn_Taxonomy_Vocabulary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_ContentItems_Tags(dnn_ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Taxonomy_Term = this;
		}
		
		private void detach_dnn_ContentItems_Tags(dnn_ContentItems_Tag entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Taxonomy_Term = null;
		}
		
		private void attach_dnn_Taxonomy_Terms(dnn_Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Taxonomy_Term1 = this;
		}
		
		private void detach_dnn_Taxonomy_Terms(dnn_Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Taxonomy_Term1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Taxonomy_Vocabularies")]
	public partial class dnn_Taxonomy_Vocabulary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VocabularyID;
		
		private int _VocabularyTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private int _Weight;
		
		private System.Nullable<int> _ScopeID;
		
		private int _ScopeTypeID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private bool _IsSystem;
		
		private EntitySet<dnn_Taxonomy_Term> _dnn_Taxonomy_Terms;
		
		private EntityRef<dnn_Taxonomy_ScopeType> _dnn_Taxonomy_ScopeType;
		
		private EntityRef<dnn_Taxonomy_VocabularyType> _dnn_Taxonomy_VocabularyType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVocabularyIDChanging(int value);
    partial void OnVocabularyIDChanged();
    partial void OnVocabularyTypeIDChanging(int value);
    partial void OnVocabularyTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnScopeIDChanging(System.Nullable<int> value);
    partial void OnScopeIDChanged();
    partial void OnScopeTypeIDChanging(int value);
    partial void OnScopeTypeIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    #endregion
		
		public dnn_Taxonomy_Vocabulary()
		{
			this._dnn_Taxonomy_Terms = new EntitySet<dnn_Taxonomy_Term>(new Action<dnn_Taxonomy_Term>(this.attach_dnn_Taxonomy_Terms), new Action<dnn_Taxonomy_Term>(this.detach_dnn_Taxonomy_Terms));
			this._dnn_Taxonomy_ScopeType = default(EntityRef<dnn_Taxonomy_ScopeType>);
			this._dnn_Taxonomy_VocabularyType = default(EntityRef<dnn_Taxonomy_VocabularyType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VocabularyID
		{
			get
			{
				return this._VocabularyID;
			}
			set
			{
				if ((this._VocabularyID != value))
				{
					this.OnVocabularyIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyID = value;
					this.SendPropertyChanged("VocabularyID");
					this.OnVocabularyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyTypeID", DbType="Int NOT NULL")]
		public int VocabularyTypeID
		{
			get
			{
				return this._VocabularyTypeID;
			}
			set
			{
				if ((this._VocabularyTypeID != value))
				{
					if (this._dnn_Taxonomy_VocabularyType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVocabularyTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyTypeID = value;
					this.SendPropertyChanged("VocabularyTypeID");
					this.OnVocabularyTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int NOT NULL")]
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeID", DbType="Int")]
		public System.Nullable<int> ScopeID
		{
			get
			{
				return this._ScopeID;
			}
			set
			{
				if ((this._ScopeID != value))
				{
					this.OnScopeIDChanging(value);
					this.SendPropertyChanging();
					this._ScopeID = value;
					this.SendPropertyChanged("ScopeID");
					this.OnScopeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeTypeID", DbType="Int NOT NULL")]
		public int ScopeTypeID
		{
			get
			{
				return this._ScopeTypeID;
			}
			set
			{
				if ((this._ScopeTypeID != value))
				{
					if (this._dnn_Taxonomy_ScopeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScopeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ScopeTypeID = value;
					this.SendPropertyChanged("ScopeTypeID");
					this.OnScopeTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystem", DbType="Bit NOT NULL")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Taxonomy_Vocabulary_dnn_Taxonomy_Term", Storage="_dnn_Taxonomy_Terms", ThisKey="VocabularyID", OtherKey="VocabularyID")]
		public EntitySet<dnn_Taxonomy_Term> dnn_Taxonomy_Terms
		{
			get
			{
				return this._dnn_Taxonomy_Terms;
			}
			set
			{
				this._dnn_Taxonomy_Terms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Taxonomy_ScopeType_dnn_Taxonomy_Vocabulary", Storage="_dnn_Taxonomy_ScopeType", ThisKey="ScopeTypeID", OtherKey="ScopeTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Taxonomy_ScopeType dnn_Taxonomy_ScopeType
		{
			get
			{
				return this._dnn_Taxonomy_ScopeType.Entity;
			}
			set
			{
				dnn_Taxonomy_ScopeType previousValue = this._dnn_Taxonomy_ScopeType.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Taxonomy_ScopeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Taxonomy_ScopeType.Entity = null;
						previousValue.dnn_Taxonomy_Vocabularies.Remove(this);
					}
					this._dnn_Taxonomy_ScopeType.Entity = value;
					if ((value != null))
					{
						value.dnn_Taxonomy_Vocabularies.Add(this);
						this._ScopeTypeID = value.ScopeTypeID;
					}
					else
					{
						this._ScopeTypeID = default(int);
					}
					this.SendPropertyChanged("dnn_Taxonomy_ScopeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Taxonomy_VocabularyType_dnn_Taxonomy_Vocabulary", Storage="_dnn_Taxonomy_VocabularyType", ThisKey="VocabularyTypeID", OtherKey="VocabularyTypeID", IsForeignKey=true)]
		public dnn_Taxonomy_VocabularyType dnn_Taxonomy_VocabularyType
		{
			get
			{
				return this._dnn_Taxonomy_VocabularyType.Entity;
			}
			set
			{
				dnn_Taxonomy_VocabularyType previousValue = this._dnn_Taxonomy_VocabularyType.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Taxonomy_VocabularyType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Taxonomy_VocabularyType.Entity = null;
						previousValue.dnn_Taxonomy_Vocabularies.Remove(this);
					}
					this._dnn_Taxonomy_VocabularyType.Entity = value;
					if ((value != null))
					{
						value.dnn_Taxonomy_Vocabularies.Add(this);
						this._VocabularyTypeID = value.VocabularyTypeID;
					}
					else
					{
						this._VocabularyTypeID = default(int);
					}
					this.SendPropertyChanged("dnn_Taxonomy_VocabularyType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_Taxonomy_Terms(dnn_Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Taxonomy_Vocabulary = this;
		}
		
		private void detach_dnn_Taxonomy_Terms(dnn_Taxonomy_Term entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Taxonomy_Vocabulary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Taxonomy_VocabularyTypes")]
	public partial class dnn_Taxonomy_VocabularyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VocabularyTypeID;
		
		private string _VocabularyType;
		
		private EntitySet<dnn_Taxonomy_Vocabulary> _dnn_Taxonomy_Vocabularies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVocabularyTypeIDChanging(int value);
    partial void OnVocabularyTypeIDChanged();
    partial void OnVocabularyTypeChanging(string value);
    partial void OnVocabularyTypeChanged();
    #endregion
		
		public dnn_Taxonomy_VocabularyType()
		{
			this._dnn_Taxonomy_Vocabularies = new EntitySet<dnn_Taxonomy_Vocabulary>(new Action<dnn_Taxonomy_Vocabulary>(this.attach_dnn_Taxonomy_Vocabularies), new Action<dnn_Taxonomy_Vocabulary>(this.detach_dnn_Taxonomy_Vocabularies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VocabularyTypeID
		{
			get
			{
				return this._VocabularyTypeID;
			}
			set
			{
				if ((this._VocabularyTypeID != value))
				{
					this.OnVocabularyTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VocabularyTypeID = value;
					this.SendPropertyChanged("VocabularyTypeID");
					this.OnVocabularyTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocabularyType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VocabularyType
		{
			get
			{
				return this._VocabularyType;
			}
			set
			{
				if ((this._VocabularyType != value))
				{
					this.OnVocabularyTypeChanging(value);
					this.SendPropertyChanging();
					this._VocabularyType = value;
					this.SendPropertyChanged("VocabularyType");
					this.OnVocabularyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Taxonomy_VocabularyType_dnn_Taxonomy_Vocabulary", Storage="_dnn_Taxonomy_Vocabularies", ThisKey="VocabularyTypeID", OtherKey="VocabularyTypeID")]
		public EntitySet<dnn_Taxonomy_Vocabulary> dnn_Taxonomy_Vocabularies
		{
			get
			{
				return this._dnn_Taxonomy_Vocabularies;
			}
			set
			{
				this._dnn_Taxonomy_Vocabularies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_Taxonomy_Vocabularies(dnn_Taxonomy_Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Taxonomy_VocabularyType = this;
		}
		
		private void detach_dnn_Taxonomy_Vocabularies(dnn_Taxonomy_Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Taxonomy_VocabularyType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_UrlLog")]
	public partial class dnn_UrlLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UrlLogID;
		
		private int _UrlTrackingID;
		
		private System.DateTime _ClickDate;
		
		private System.Nullable<int> _UserID;
		
		private EntityRef<dnn_UrlTracking> _dnn_UrlTracking;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlLogIDChanging(int value);
    partial void OnUrlLogIDChanged();
    partial void OnUrlTrackingIDChanging(int value);
    partial void OnUrlTrackingIDChanged();
    partial void OnClickDateChanging(System.DateTime value);
    partial void OnClickDateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public dnn_UrlLog()
		{
			this._dnn_UrlTracking = default(EntityRef<dnn_UrlTracking>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UrlLogID
		{
			get
			{
				return this._UrlLogID;
			}
			set
			{
				if ((this._UrlLogID != value))
				{
					this.OnUrlLogIDChanging(value);
					this.SendPropertyChanging();
					this._UrlLogID = value;
					this.SendPropertyChanged("UrlLogID");
					this.OnUrlLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlTrackingID", DbType="Int NOT NULL")]
		public int UrlTrackingID
		{
			get
			{
				return this._UrlTrackingID;
			}
			set
			{
				if ((this._UrlTrackingID != value))
				{
					if (this._dnn_UrlTracking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUrlTrackingIDChanging(value);
					this.SendPropertyChanging();
					this._UrlTrackingID = value;
					this.SendPropertyChanged("UrlTrackingID");
					this.OnUrlTrackingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickDate", DbType="DateTime NOT NULL")]
		public System.DateTime ClickDate
		{
			get
			{
				return this._ClickDate;
			}
			set
			{
				if ((this._ClickDate != value))
				{
					this.OnClickDateChanging(value);
					this.SendPropertyChanging();
					this._ClickDate = value;
					this.SendPropertyChanged("ClickDate");
					this.OnClickDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_UrlTracking_dnn_UrlLog", Storage="_dnn_UrlTracking", ThisKey="UrlTrackingID", OtherKey="UrlTrackingID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_UrlTracking dnn_UrlTracking
		{
			get
			{
				return this._dnn_UrlTracking.Entity;
			}
			set
			{
				dnn_UrlTracking previousValue = this._dnn_UrlTracking.Entity;
				if (((previousValue != value) 
							|| (this._dnn_UrlTracking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_UrlTracking.Entity = null;
						previousValue.dnn_UrlLogs.Remove(this);
					}
					this._dnn_UrlTracking.Entity = value;
					if ((value != null))
					{
						value.dnn_UrlLogs.Add(this);
						this._UrlTrackingID = value.UrlTrackingID;
					}
					else
					{
						this._UrlTrackingID = default(int);
					}
					this.SendPropertyChanged("dnn_UrlTracking");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Urls")]
	public partial class dnn_Url : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UrlID;
		
		private System.Nullable<int> _PortalID;
		
		private string _Url;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlIDChanging(int value);
    partial void OnUrlIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public dnn_Url()
		{
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UrlID
		{
			get
			{
				return this._UrlID;
			}
			set
			{
				if ((this._UrlID != value))
				{
					this.OnUrlIDChanging(value);
					this.SendPropertyChanging();
					this._UrlID = value;
					this.SendPropertyChanged("UrlID");
					this.OnUrlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Url", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_Urls.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_Urls.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_UrlTracking")]
	public partial class dnn_UrlTracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UrlTrackingID;
		
		private System.Nullable<int> _PortalID;
		
		private string _Url;
		
		private char _UrlType;
		
		private int _Clicks;
		
		private System.Nullable<System.DateTime> _LastClick;
		
		private System.DateTime _CreatedDate;
		
		private bool _LogActivity;
		
		private bool _TrackClicks;
		
		private System.Nullable<int> _ModuleId;
		
		private bool _NewWindow;
		
		private EntitySet<dnn_UrlLog> _dnn_UrlLogs;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlTrackingIDChanging(int value);
    partial void OnUrlTrackingIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUrlTypeChanging(char value);
    partial void OnUrlTypeChanged();
    partial void OnClicksChanging(int value);
    partial void OnClicksChanged();
    partial void OnLastClickChanging(System.Nullable<System.DateTime> value);
    partial void OnLastClickChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLogActivityChanging(bool value);
    partial void OnLogActivityChanged();
    partial void OnTrackClicksChanging(bool value);
    partial void OnTrackClicksChanged();
    partial void OnModuleIdChanging(System.Nullable<int> value);
    partial void OnModuleIdChanged();
    partial void OnNewWindowChanging(bool value);
    partial void OnNewWindowChanged();
    #endregion
		
		public dnn_UrlTracking()
		{
			this._dnn_UrlLogs = new EntitySet<dnn_UrlLog>(new Action<dnn_UrlLog>(this.attach_dnn_UrlLogs), new Action<dnn_UrlLog>(this.detach_dnn_UrlLogs));
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlTrackingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UrlTrackingID
		{
			get
			{
				return this._UrlTrackingID;
			}
			set
			{
				if ((this._UrlTrackingID != value))
				{
					this.OnUrlTrackingIDChanging(value);
					this.SendPropertyChanging();
					this._UrlTrackingID = value;
					this.SendPropertyChanged("UrlTrackingID");
					this.OnUrlTrackingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlType", DbType="Char(1) NOT NULL")]
		public char UrlType
		{
			get
			{
				return this._UrlType;
			}
			set
			{
				if ((this._UrlType != value))
				{
					this.OnUrlTypeChanging(value);
					this.SendPropertyChanging();
					this._UrlType = value;
					this.SendPropertyChanged("UrlType");
					this.OnUrlTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clicks", DbType="Int NOT NULL")]
		public int Clicks
		{
			get
			{
				return this._Clicks;
			}
			set
			{
				if ((this._Clicks != value))
				{
					this.OnClicksChanging(value);
					this.SendPropertyChanging();
					this._Clicks = value;
					this.SendPropertyChanged("Clicks");
					this.OnClicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastClick", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastClick
		{
			get
			{
				return this._LastClick;
			}
			set
			{
				if ((this._LastClick != value))
				{
					this.OnLastClickChanging(value);
					this.SendPropertyChanging();
					this._LastClick = value;
					this.SendPropertyChanged("LastClick");
					this.OnLastClickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogActivity", DbType="Bit NOT NULL")]
		public bool LogActivity
		{
			get
			{
				return this._LogActivity;
			}
			set
			{
				if ((this._LogActivity != value))
				{
					this.OnLogActivityChanging(value);
					this.SendPropertyChanging();
					this._LogActivity = value;
					this.SendPropertyChanged("LogActivity");
					this.OnLogActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackClicks", DbType="Bit NOT NULL")]
		public bool TrackClicks
		{
			get
			{
				return this._TrackClicks;
			}
			set
			{
				if ((this._TrackClicks != value))
				{
					this.OnTrackClicksChanging(value);
					this.SendPropertyChanging();
					this._TrackClicks = value;
					this.SendPropertyChanged("TrackClicks");
					this.OnTrackClicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int")]
		public System.Nullable<int> ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewWindow", DbType="Bit NOT NULL")]
		public bool NewWindow
		{
			get
			{
				return this._NewWindow;
			}
			set
			{
				if ((this._NewWindow != value))
				{
					this.OnNewWindowChanging(value);
					this.SendPropertyChanging();
					this._NewWindow = value;
					this.SendPropertyChanged("NewWindow");
					this.OnNewWindowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_UrlTracking_dnn_UrlLog", Storage="_dnn_UrlLogs", ThisKey="UrlTrackingID", OtherKey="UrlTrackingID")]
		public EntitySet<dnn_UrlLog> dnn_UrlLogs
		{
			get
			{
				return this._dnn_UrlLogs;
			}
			set
			{
				this._dnn_UrlLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_UrlTracking", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_UrlTrackings.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_UrlTrackings.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_UrlLogs(dnn_UrlLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_UrlTracking = this;
		}
		
		private void detach_dnn_UrlLogs(dnn_UrlLog entity)
		{
			this.SendPropertyChanging();
			entity.dnn_UrlTracking = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_UserAuthentication")]
	public partial class dnn_UserAuthentication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserAuthenticationID;
		
		private int _UserID;
		
		private string _AuthenticationType;
		
		private string _AuthenticationToken;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_User> _dnn_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAuthenticationIDChanging(int value);
    partial void OnUserAuthenticationIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnAuthenticationTypeChanging(string value);
    partial void OnAuthenticationTypeChanged();
    partial void OnAuthenticationTokenChanging(string value);
    partial void OnAuthenticationTokenChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_UserAuthentication()
		{
			this._dnn_User = default(EntityRef<dnn_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAuthenticationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserAuthenticationID
		{
			get
			{
				return this._UserAuthenticationID;
			}
			set
			{
				if ((this._UserAuthenticationID != value))
				{
					this.OnUserAuthenticationIDChanging(value);
					this.SendPropertyChanging();
					this._UserAuthenticationID = value;
					this.SendPropertyChanged("UserAuthenticationID");
					this.OnUserAuthenticationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._dnn_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AuthenticationType
		{
			get
			{
				return this._AuthenticationType;
			}
			set
			{
				if ((this._AuthenticationType != value))
				{
					this.OnAuthenticationTypeChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationType = value;
					this.SendPropertyChanged("AuthenticationType");
					this.OnAuthenticationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationToken", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string AuthenticationToken
		{
			get
			{
				return this._AuthenticationToken;
			}
			set
			{
				if ((this._AuthenticationToken != value))
				{
					this.OnAuthenticationTokenChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationToken = value;
					this.SendPropertyChanged("AuthenticationToken");
					this.OnAuthenticationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_UserAuthentication", Storage="_dnn_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_User dnn_User
		{
			get
			{
				return this._dnn_User.Entity;
			}
			set
			{
				dnn_User previousValue = this._dnn_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_User.Entity = null;
						previousValue.dnn_UserAuthentications.Remove(this);
					}
					this._dnn_User.Entity = value;
					if ((value != null))
					{
						value.dnn_UserAuthentications.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("dnn_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_UserPortals")]
	public partial class dnn_UserPortal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _PortalId;
		
		private int _UserPortalId;
		
		private System.DateTime _CreatedDate;
		
		private bool _Authorised;
		
		private bool _IsDeleted;
		
		private bool _RefreshRoles;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
		private EntityRef<dnn_User> _dnn_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnUserPortalIdChanging(int value);
    partial void OnUserPortalIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnAuthorisedChanging(bool value);
    partial void OnAuthorisedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRefreshRolesChanging(bool value);
    partial void OnRefreshRolesChanged();
    #endregion
		
		public dnn_UserPortal()
		{
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			this._dnn_User = default(EntityRef<dnn_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._dnn_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPortalId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int UserPortalId
		{
			get
			{
				return this._UserPortalId;
			}
			set
			{
				if ((this._UserPortalId != value))
				{
					this.OnUserPortalIdChanging(value);
					this.SendPropertyChanging();
					this._UserPortalId = value;
					this.SendPropertyChanged("UserPortalId");
					this.OnUserPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorised", DbType="Bit NOT NULL")]
		public bool Authorised
		{
			get
			{
				return this._Authorised;
			}
			set
			{
				if ((this._Authorised != value))
				{
					this.OnAuthorisedChanging(value);
					this.SendPropertyChanging();
					this._Authorised = value;
					this.SendPropertyChanged("Authorised");
					this.OnAuthorisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshRoles", DbType="Bit NOT NULL")]
		public bool RefreshRoles
		{
			get
			{
				return this._RefreshRoles;
			}
			set
			{
				if ((this._RefreshRoles != value))
				{
					this.OnRefreshRolesChanging(value);
					this.SendPropertyChanging();
					this._RefreshRoles = value;
					this.SendPropertyChanged("RefreshRoles");
					this.OnRefreshRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_UserPortal", Storage="_dnn_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_UserPortals.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_UserPortals.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_UserPortal", Storage="_dnn_User", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_User dnn_User
		{
			get
			{
				return this._dnn_User.Entity;
			}
			set
			{
				dnn_User previousValue = this._dnn_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_User.Entity = null;
						previousValue.dnn_UserPortals.Remove(this);
					}
					this._dnn_User.Entity = value;
					if ((value != null))
					{
						value.dnn_UserPortals.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("dnn_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_UserProfile")]
	public partial class dnn_UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfileID;
		
		private int _UserID;
		
		private int _PropertyDefinitionID;
		
		private string _PropertyValue;
		
		private string _PropertyText;
		
		private int _Visibility;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<dnn_ProfilePropertyDefinition> _dnn_ProfilePropertyDefinition;
		
		private EntityRef<dnn_User> _dnn_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPropertyDefinitionIDChanging(int value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnPropertyValueChanging(string value);
    partial void OnPropertyValueChanged();
    partial void OnPropertyTextChanging(string value);
    partial void OnPropertyTextChanged();
    partial void OnVisibilityChanging(int value);
    partial void OnVisibilityChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public dnn_UserProfile()
		{
			this._dnn_ProfilePropertyDefinition = default(EntityRef<dnn_ProfilePropertyDefinition>);
			this._dnn_User = default(EntityRef<dnn_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._dnn_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", DbType="Int NOT NULL")]
		public int PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					if (this._dnn_ProfilePropertyDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="NVarChar(3750)")]
		public string PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string PropertyText
		{
			get
			{
				return this._PropertyText;
			}
			set
			{
				if ((this._PropertyText != value))
				{
					this.OnPropertyTextChanging(value);
					this.SendPropertyChanging();
					this._PropertyText = value;
					this.SendPropertyChanged("PropertyText");
					this.OnPropertyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Int NOT NULL")]
		public int Visibility
		{
			get
			{
				return this._Visibility;
			}
			set
			{
				if ((this._Visibility != value))
				{
					this.OnVisibilityChanging(value);
					this.SendPropertyChanging();
					this._Visibility = value;
					this.SendPropertyChanged("Visibility");
					this.OnVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_ProfilePropertyDefinition_dnn_UserProfile", Storage="_dnn_ProfilePropertyDefinition", ThisKey="PropertyDefinitionID", OtherKey="PropertyDefinitionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_ProfilePropertyDefinition dnn_ProfilePropertyDefinition
		{
			get
			{
				return this._dnn_ProfilePropertyDefinition.Entity;
			}
			set
			{
				dnn_ProfilePropertyDefinition previousValue = this._dnn_ProfilePropertyDefinition.Entity;
				if (((previousValue != value) 
							|| (this._dnn_ProfilePropertyDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_ProfilePropertyDefinition.Entity = null;
						previousValue.dnn_UserProfiles.Remove(this);
					}
					this._dnn_ProfilePropertyDefinition.Entity = value;
					if ((value != null))
					{
						value.dnn_UserProfiles.Add(this);
						this._PropertyDefinitionID = value.PropertyDefinitionID;
					}
					else
					{
						this._PropertyDefinitionID = default(int);
					}
					this.SendPropertyChanged("dnn_ProfilePropertyDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_UserProfile", Storage="_dnn_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_User dnn_User
		{
			get
			{
				return this._dnn_User.Entity;
			}
			set
			{
				dnn_User previousValue = this._dnn_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_User.Entity = null;
						previousValue.dnn_UserProfiles.Remove(this);
					}
					this._dnn_User.Entity = value;
					if ((value != null))
					{
						value.dnn_UserProfiles.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("dnn_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_UserRoles")]
	public partial class dnn_UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserRoleID;
		
		private int _UserID;
		
		private int _RoleID;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private System.Nullable<bool> _IsTrialUsed;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn_Role> _dnn_Role;
		
		private EntityRef<dnn_User> _dnn_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRoleIDChanging(int value);
    partial void OnUserRoleIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnIsTrialUsedChanging(System.Nullable<bool> value);
    partial void OnIsTrialUsedChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_UserRole()
		{
			this._dnn_Role = default(EntityRef<dnn_Role>);
			this._dnn_User = default(EntityRef<dnn_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserRoleID
		{
			get
			{
				return this._UserRoleID;
			}
			set
			{
				if ((this._UserRoleID != value))
				{
					this.OnUserRoleIDChanging(value);
					this.SendPropertyChanging();
					this._UserRoleID = value;
					this.SendPropertyChanged("UserRoleID");
					this.OnUserRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._dnn_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._dnn_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrialUsed", DbType="Bit")]
		public System.Nullable<bool> IsTrialUsed
		{
			get
			{
				return this._IsTrialUsed;
			}
			set
			{
				if ((this._IsTrialUsed != value))
				{
					this.OnIsTrialUsedChanging(value);
					this.SendPropertyChanging();
					this._IsTrialUsed = value;
					this.SendPropertyChanged("IsTrialUsed");
					this.OnIsTrialUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Role_dnn_UserRole", Storage="_dnn_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Role dnn_Role
		{
			get
			{
				return this._dnn_Role.Entity;
			}
			set
			{
				dnn_Role previousValue = this._dnn_Role.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Role.Entity = null;
						previousValue.dnn_UserRoles.Remove(this);
					}
					this._dnn_Role.Entity = value;
					if ((value != null))
					{
						value.dnn_UserRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("dnn_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_UserRole", Storage="_dnn_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_User dnn_User
		{
			get
			{
				return this._dnn_User.Entity;
			}
			set
			{
				dnn_User previousValue = this._dnn_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_User.Entity = null;
						previousValue.dnn_UserRoles.Remove(this);
					}
					this._dnn_User.Entity = value;
					if ((value != null))
					{
						value.dnn_UserRoles.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("dnn_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Users")]
	public partial class dnn_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn_DesktopModulePermission> _dnn_DesktopModulePermissions;
		
		private EntitySet<dnn_FolderPermission> _dnn_FolderPermissions;
		
		private EntitySet<dnn_ModulePermission> _dnn_ModulePermissions;
		
		private EntitySet<dnn_Profile> _dnn_Profiles;
		
		private EntitySet<dnn_TabPermission> _dnn_TabPermissions;
		
		private EntitySet<dnn_UserAuthentication> _dnn_UserAuthentications;
		
		private EntitySet<dnn_UserPortal> _dnn_UserPortals;
		
		private EntitySet<dnn_UserProfile> _dnn_UserProfiles;
		
		private EntitySet<dnn_UserRole> _dnn_UserRoles;
		
		private EntitySet<dnn_UsersOnline> _dnn_UsersOnlines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn_User()
		{
			this._dnn_DesktopModulePermissions = new EntitySet<dnn_DesktopModulePermission>(new Action<dnn_DesktopModulePermission>(this.attach_dnn_DesktopModulePermissions), new Action<dnn_DesktopModulePermission>(this.detach_dnn_DesktopModulePermissions));
			this._dnn_FolderPermissions = new EntitySet<dnn_FolderPermission>(new Action<dnn_FolderPermission>(this.attach_dnn_FolderPermissions), new Action<dnn_FolderPermission>(this.detach_dnn_FolderPermissions));
			this._dnn_ModulePermissions = new EntitySet<dnn_ModulePermission>(new Action<dnn_ModulePermission>(this.attach_dnn_ModulePermissions), new Action<dnn_ModulePermission>(this.detach_dnn_ModulePermissions));
			this._dnn_Profiles = new EntitySet<dnn_Profile>(new Action<dnn_Profile>(this.attach_dnn_Profiles), new Action<dnn_Profile>(this.detach_dnn_Profiles));
			this._dnn_TabPermissions = new EntitySet<dnn_TabPermission>(new Action<dnn_TabPermission>(this.attach_dnn_TabPermissions), new Action<dnn_TabPermission>(this.detach_dnn_TabPermissions));
			this._dnn_UserAuthentications = new EntitySet<dnn_UserAuthentication>(new Action<dnn_UserAuthentication>(this.attach_dnn_UserAuthentications), new Action<dnn_UserAuthentication>(this.detach_dnn_UserAuthentications));
			this._dnn_UserPortals = new EntitySet<dnn_UserPortal>(new Action<dnn_UserPortal>(this.attach_dnn_UserPortals), new Action<dnn_UserPortal>(this.detach_dnn_UserPortals));
			this._dnn_UserProfiles = new EntitySet<dnn_UserProfile>(new Action<dnn_UserProfile>(this.attach_dnn_UserProfiles), new Action<dnn_UserProfile>(this.detach_dnn_UserProfiles));
			this._dnn_UserRoles = new EntitySet<dnn_UserRole>(new Action<dnn_UserRole>(this.attach_dnn_UserRoles), new Action<dnn_UserRole>(this.detach_dnn_UserRoles));
			this._dnn_UsersOnlines = new EntitySet<dnn_UsersOnline>(new Action<dnn_UsersOnline>(this.attach_dnn_UsersOnlines), new Action<dnn_UsersOnline>(this.detach_dnn_UsersOnlines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_DesktopModulePermission", Storage="_dnn_DesktopModulePermissions", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<dnn_DesktopModulePermission> dnn_DesktopModulePermissions
		{
			get
			{
				return this._dnn_DesktopModulePermissions;
			}
			set
			{
				this._dnn_DesktopModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_FolderPermission", Storage="_dnn_FolderPermissions", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<dnn_FolderPermission> dnn_FolderPermissions
		{
			get
			{
				return this._dnn_FolderPermissions;
			}
			set
			{
				this._dnn_FolderPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_ModulePermission", Storage="_dnn_ModulePermissions", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<dnn_ModulePermission> dnn_ModulePermissions
		{
			get
			{
				return this._dnn_ModulePermissions;
			}
			set
			{
				this._dnn_ModulePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_Profile", Storage="_dnn_Profiles", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<dnn_Profile> dnn_Profiles
		{
			get
			{
				return this._dnn_Profiles;
			}
			set
			{
				this._dnn_Profiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_TabPermission", Storage="_dnn_TabPermissions", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<dnn_TabPermission> dnn_TabPermissions
		{
			get
			{
				return this._dnn_TabPermissions;
			}
			set
			{
				this._dnn_TabPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_UserAuthentication", Storage="_dnn_UserAuthentications", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<dnn_UserAuthentication> dnn_UserAuthentications
		{
			get
			{
				return this._dnn_UserAuthentications;
			}
			set
			{
				this._dnn_UserAuthentications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_UserPortal", Storage="_dnn_UserPortals", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<dnn_UserPortal> dnn_UserPortals
		{
			get
			{
				return this._dnn_UserPortals;
			}
			set
			{
				this._dnn_UserPortals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_UserProfile", Storage="_dnn_UserProfiles", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<dnn_UserProfile> dnn_UserProfiles
		{
			get
			{
				return this._dnn_UserProfiles;
			}
			set
			{
				this._dnn_UserProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_UserRole", Storage="_dnn_UserRoles", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<dnn_UserRole> dnn_UserRoles
		{
			get
			{
				return this._dnn_UserRoles;
			}
			set
			{
				this._dnn_UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_UsersOnline", Storage="_dnn_UsersOnlines", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<dnn_UsersOnline> dnn_UsersOnlines
		{
			get
			{
				return this._dnn_UsersOnlines;
			}
			set
			{
				this._dnn_UsersOnlines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_DesktopModulePermissions(dnn_DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = this;
		}
		
		private void detach_dnn_DesktopModulePermissions(dnn_DesktopModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = null;
		}
		
		private void attach_dnn_FolderPermissions(dnn_FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = this;
		}
		
		private void detach_dnn_FolderPermissions(dnn_FolderPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = null;
		}
		
		private void attach_dnn_ModulePermissions(dnn_ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = this;
		}
		
		private void detach_dnn_ModulePermissions(dnn_ModulePermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = null;
		}
		
		private void attach_dnn_Profiles(dnn_Profile entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = this;
		}
		
		private void detach_dnn_Profiles(dnn_Profile entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = null;
		}
		
		private void attach_dnn_TabPermissions(dnn_TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = this;
		}
		
		private void detach_dnn_TabPermissions(dnn_TabPermission entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = null;
		}
		
		private void attach_dnn_UserAuthentications(dnn_UserAuthentication entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = this;
		}
		
		private void detach_dnn_UserAuthentications(dnn_UserAuthentication entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = null;
		}
		
		private void attach_dnn_UserPortals(dnn_UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = this;
		}
		
		private void detach_dnn_UserPortals(dnn_UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = null;
		}
		
		private void attach_dnn_UserProfiles(dnn_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = this;
		}
		
		private void detach_dnn_UserProfiles(dnn_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = null;
		}
		
		private void attach_dnn_UserRoles(dnn_UserRole entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = this;
		}
		
		private void detach_dnn_UserRoles(dnn_UserRole entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = null;
		}
		
		private void attach_dnn_UsersOnlines(dnn_UsersOnline entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = this;
		}
		
		private void detach_dnn_UsersOnlines(dnn_UsersOnline entity)
		{
			this.SendPropertyChanging();
			entity.dnn_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_UsersOnline")]
	public partial class dnn_UsersOnline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _PortalID;
		
		private int _TabID;
		
		private System.DateTime _CreationDate;
		
		private System.DateTime _LastActiveDate;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
		private EntityRef<dnn_User> _dnn_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnLastActiveDateChanging(System.DateTime value);
    partial void OnLastActiveDateChanged();
    #endregion
		
		public dnn_UsersOnline()
		{
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			this._dnn_User = default(EntityRef<dnn_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._dnn_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActiveDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActiveDate
		{
			get
			{
				return this._LastActiveDate;
			}
			set
			{
				if ((this._LastActiveDate != value))
				{
					this.OnLastActiveDateChanging(value);
					this.SendPropertyChanging();
					this._LastActiveDate = value;
					this.SendPropertyChanged("LastActiveDate");
					this.OnLastActiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_UsersOnline", Storage="_dnn_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_UsersOnlines.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_UsersOnlines.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_User_dnn_UsersOnline", Storage="_dnn_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_User dnn_User
		{
			get
			{
				return this._dnn_User.Entity;
			}
			set
			{
				dnn_User previousValue = this._dnn_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_User.Entity = null;
						previousValue.dnn_UsersOnlines.Remove(this);
					}
					this._dnn_User.Entity = value;
					if ((value != null))
					{
						value.dnn_UsersOnlines.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("dnn_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_VendorClassification")]
	public partial class dnn_VendorClassification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VendorClassificationId;
		
		private int _VendorId;
		
		private int _ClassificationId;
		
		private EntityRef<dnn_Classification> _dnn_Classification;
		
		private EntityRef<dnn_Vendor> _dnn_Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorClassificationIdChanging(int value);
    partial void OnVendorClassificationIdChanged();
    partial void OnVendorIdChanging(int value);
    partial void OnVendorIdChanged();
    partial void OnClassificationIdChanging(int value);
    partial void OnClassificationIdChanged();
    #endregion
		
		public dnn_VendorClassification()
		{
			this._dnn_Classification = default(EntityRef<dnn_Classification>);
			this._dnn_Vendor = default(EntityRef<dnn_Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorClassificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VendorClassificationId
		{
			get
			{
				return this._VendorClassificationId;
			}
			set
			{
				if ((this._VendorClassificationId != value))
				{
					this.OnVendorClassificationIdChanging(value);
					this.SendPropertyChanging();
					this._VendorClassificationId = value;
					this.SendPropertyChanged("VendorClassificationId");
					this.OnVendorClassificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", DbType="Int NOT NULL")]
		public int VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					if (this._dnn_Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationId", DbType="Int NOT NULL")]
		public int ClassificationId
		{
			get
			{
				return this._ClassificationId;
			}
			set
			{
				if ((this._ClassificationId != value))
				{
					if (this._dnn_Classification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassificationIdChanging(value);
					this.SendPropertyChanging();
					this._ClassificationId = value;
					this.SendPropertyChanged("ClassificationId");
					this.OnClassificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Classification_dnn_VendorClassification", Storage="_dnn_Classification", ThisKey="ClassificationId", OtherKey="ClassificationId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Classification dnn_Classification
		{
			get
			{
				return this._dnn_Classification.Entity;
			}
			set
			{
				dnn_Classification previousValue = this._dnn_Classification.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Classification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Classification.Entity = null;
						previousValue.dnn_VendorClassifications.Remove(this);
					}
					this._dnn_Classification.Entity = value;
					if ((value != null))
					{
						value.dnn_VendorClassifications.Add(this);
						this._ClassificationId = value.ClassificationId;
					}
					else
					{
						this._ClassificationId = default(int);
					}
					this.SendPropertyChanged("dnn_Classification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Vendor_dnn_VendorClassification", Storage="_dnn_Vendor", ThisKey="VendorId", OtherKey="VendorId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn_Vendor dnn_Vendor
		{
			get
			{
				return this._dnn_Vendor.Entity;
			}
			set
			{
				dnn_Vendor previousValue = this._dnn_Vendor.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Vendor.Entity = null;
						previousValue.dnn_VendorClassifications.Remove(this);
					}
					this._dnn_Vendor.Entity = value;
					if ((value != null))
					{
						value.dnn_VendorClassifications.Add(this);
						this._VendorId = value.VendorId;
					}
					else
					{
						this._VendorId = default(int);
					}
					this.SendPropertyChanged("dnn_Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Vendors")]
	public partial class dnn_Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VendorId;
		
		private string _VendorName;
		
		private string _Street;
		
		private string _City;
		
		private string _Region;
		
		private string _Country;
		
		private string _PostalCode;
		
		private string _Telephone;
		
		private System.Nullable<int> _PortalId;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Website;
		
		private int _ClickThroughs;
		
		private int _Views;
		
		private string _CreatedByUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _LogoFile;
		
		private string _KeyWords;
		
		private string _Unit;
		
		private bool _Authorized;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Cell;
		
		private EntitySet<dnn_Affiliate> _dnn_Affiliates;
		
		private EntitySet<dnn_Banner> _dnn_Banners;
		
		private EntitySet<dnn_VendorClassification> _dnn_VendorClassifications;
		
		private EntityRef<dnn_Portal> _dnn_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorIdChanging(int value);
    partial void OnVendorIdChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnClickThroughsChanging(int value);
    partial void OnClickThroughsChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnLogoFileChanging(string value);
    partial void OnLogoFileChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnAuthorizedChanging(bool value);
    partial void OnAuthorizedChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCellChanging(string value);
    partial void OnCellChanged();
    #endregion
		
		public dnn_Vendor()
		{
			this._dnn_Affiliates = new EntitySet<dnn_Affiliate>(new Action<dnn_Affiliate>(this.attach_dnn_Affiliates), new Action<dnn_Affiliate>(this.detach_dnn_Affiliates));
			this._dnn_Banners = new EntitySet<dnn_Banner>(new Action<dnn_Banner>(this.attach_dnn_Banners), new Action<dnn_Banner>(this.detach_dnn_Banners));
			this._dnn_VendorClassifications = new EntitySet<dnn_VendorClassification>(new Action<dnn_VendorClassification>(this.attach_dnn_VendorClassifications), new Action<dnn_VendorClassification>(this.detach_dnn_VendorClassifications));
			this._dnn_Portal = default(EntityRef<dnn_Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(50)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(50)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(50)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._dnn_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(100)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickThroughs", DbType="Int NOT NULL")]
		public int ClickThroughs
		{
			get
			{
				return this._ClickThroughs;
			}
			set
			{
				if ((this._ClickThroughs != value))
				{
					this.OnClickThroughsChanging(value);
					this.SendPropertyChanging();
					this._ClickThroughs = value;
					this.SendPropertyChanged("ClickThroughs");
					this.OnClickThroughsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int NOT NULL")]
		public int Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="NVarChar(100)")]
		public string CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoFile", DbType="NVarChar(100)")]
		public string LogoFile
		{
			get
			{
				return this._LogoFile;
			}
			set
			{
				if ((this._LogoFile != value))
				{
					this.OnLogoFileChanging(value);
					this.SendPropertyChanging();
					this._LogoFile = value;
					this.SendPropertyChanged("LogoFile");
					this.OnLogoFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorized", DbType="Bit NOT NULL")]
		public bool Authorized
		{
			get
			{
				return this._Authorized;
			}
			set
			{
				if ((this._Authorized != value))
				{
					this.OnAuthorizedChanging(value);
					this.SendPropertyChanging();
					this._Authorized = value;
					this.SendPropertyChanged("Authorized");
					this.OnAuthorizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell", DbType="VarChar(50)")]
		public string Cell
		{
			get
			{
				return this._Cell;
			}
			set
			{
				if ((this._Cell != value))
				{
					this.OnCellChanging(value);
					this.SendPropertyChanging();
					this._Cell = value;
					this.SendPropertyChanged("Cell");
					this.OnCellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Vendor_dnn_Affiliate", Storage="_dnn_Affiliates", ThisKey="VendorId", OtherKey="VendorId")]
		public EntitySet<dnn_Affiliate> dnn_Affiliates
		{
			get
			{
				return this._dnn_Affiliates;
			}
			set
			{
				this._dnn_Affiliates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Vendor_dnn_Banner", Storage="_dnn_Banners", ThisKey="VendorId", OtherKey="VendorId")]
		public EntitySet<dnn_Banner> dnn_Banners
		{
			get
			{
				return this._dnn_Banners;
			}
			set
			{
				this._dnn_Banners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Vendor_dnn_VendorClassification", Storage="_dnn_VendorClassifications", ThisKey="VendorId", OtherKey="VendorId")]
		public EntitySet<dnn_VendorClassification> dnn_VendorClassifications
		{
			get
			{
				return this._dnn_VendorClassifications;
			}
			set
			{
				this._dnn_VendorClassifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Portal_dnn_Vendor", Storage="_dnn_Portal", ThisKey="PortalId", OtherKey="PortalID", IsForeignKey=true, DeleteRule="CASCADE")]
		public dnn_Portal dnn_Portal
		{
			get
			{
				return this._dnn_Portal.Entity;
			}
			set
			{
				dnn_Portal previousValue = this._dnn_Portal.Entity;
				if (((previousValue != value) 
							|| (this._dnn_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn_Portal.Entity = null;
						previousValue.dnn_Vendors.Remove(this);
					}
					this._dnn_Portal.Entity = value;
					if ((value != null))
					{
						value.dnn_Vendors.Add(this);
						this._PortalId = value.PortalID;
					}
					else
					{
						this._PortalId = default(Nullable<int>);
					}
					this.SendPropertyChanged("dnn_Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_Affiliates(dnn_Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Vendor = this;
		}
		
		private void detach_dnn_Affiliates(dnn_Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Vendor = null;
		}
		
		private void attach_dnn_Banners(dnn_Banner entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Vendor = this;
		}
		
		private void detach_dnn_Banners(dnn_Banner entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Vendor = null;
		}
		
		private void attach_dnn_VendorClassifications(dnn_VendorClassification entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Vendor = this;
		}
		
		private void detach_dnn_VendorClassifications(dnn_VendorClassification entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Vendor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Version")]
	public partial class dnn_Version : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VersionId;
		
		private int _Major;
		
		private int _Minor;
		
		private int _Build;
		
		private string _Name;
		
		private System.DateTime _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIdChanging(int value);
    partial void OnVersionIdChanged();
    partial void OnMajorChanging(int value);
    partial void OnMajorChanged();
    partial void OnMinorChanging(int value);
    partial void OnMinorChanged();
    partial void OnBuildChanging(int value);
    partial void OnBuildChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public dnn_Version()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VersionId
		{
			get
			{
				return this._VersionId;
			}
			set
			{
				if ((this._VersionId != value))
				{
					this.OnVersionIdChanging(value);
					this.SendPropertyChanging();
					this._VersionId = value;
					this.SendPropertyChanged("VersionId");
					this.OnVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="Int NOT NULL")]
		public int Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this.OnMajorChanging(value);
					this.SendPropertyChanging();
					this._Major = value;
					this.SendPropertyChanged("Major");
					this.OnMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minor", DbType="Int NOT NULL")]
		public int Minor
		{
			get
			{
				return this._Minor;
			}
			set
			{
				if ((this._Minor != value))
				{
					this.OnMinorChanging(value);
					this.SendPropertyChanging();
					this._Minor = value;
					this.SendPropertyChanged("Minor");
					this.OnMinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Build", DbType="Int NOT NULL")]
		public int Build
		{
			get
			{
				return this._Build;
			}
			set
			{
				if ((this._Build != value))
				{
					this.OnBuildChanging(value);
					this.SendPropertyChanging();
					this._Build = value;
					this.SendPropertyChanged("Build");
					this.OnBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_WebServers")]
	public partial class dnn_WebServer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServerID;
		
		private string _ServerName;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _LastActivityDate;
		
		private string _URL;
		
		private string _IISAppName;
		
		private bool _Enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServerIDChanging(int value);
    partial void OnServerIDChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnIISAppNameChanging(string value);
    partial void OnIISAppNameChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
		
		public dnn_WebServer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServerID
		{
			get
			{
				return this._ServerID;
			}
			set
			{
				if ((this._ServerID != value))
				{
					this.OnServerIDChanging(value);
					this.SendPropertyChanging();
					this._ServerID = value;
					this.SendPropertyChanged("ServerID");
					this.OnServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(255)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IISAppName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string IISAppName
		{
			get
			{
				return this._IISAppName;
			}
			set
			{
				if ((this._IISAppName != value))
				{
					this.OnIISAppNameChanging(value);
					this.SendPropertyChanging();
					this._IISAppName = value;
					this.SendPropertyChanged("IISAppName");
					this.OnIISAppNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn_Workflow")]
	public partial class dnn_Workflow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkflowID;
		
		private System.Nullable<int> _PortalID;
		
		private string _WorkflowName;
		
		private string _Description;
		
		private bool _IsDeleted;
		
		private EntitySet<dnn_WorkflowState> _dnn_WorkflowStates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowIDChanging(int value);
    partial void OnWorkflowIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnWorkflowNameChanging(string value);
    partial void OnWorkflowNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public dnn_Workflow()
		{
			this._dnn_WorkflowStates = new EntitySet<dnn_WorkflowState>(new Action<dnn_WorkflowState>(this.attach_dnn_WorkflowStates), new Action<dnn_WorkflowState>(this.detach_dnn_WorkflowStates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkflowID
		{
			get
			{
				return this._WorkflowID;
			}
			set
			{
				if ((this._WorkflowID != value))
				{
					this.OnWorkflowIDChanging(value);
					this.SendPropertyChanging();
					this._WorkflowID = value;
					this.SendPropertyChanged("WorkflowID");
					this.OnWorkflowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkflowName
		{
			get
			{
				return this._WorkflowName;
			}
			set
			{
				if ((this._WorkflowName != value))
				{
					this.OnWorkflowNameChanging(value);
					this.SendPropertyChanging();
					this._WorkflowName = value;
					this.SendPropertyChanged("WorkflowName");
					this.OnWorkflowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn_Workflow_dnn_WorkflowState", Storage="_dnn_WorkflowStates", ThisKey="WorkflowID", OtherKey="WorkflowID")]
		public EntitySet<dnn_WorkflowState> dnn_WorkflowStates
		{
			get
			{
				return this._dnn_WorkflowStates;
			}
			set
			{
				this._dnn_WorkflowStates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn_WorkflowStates(dnn_WorkflowState entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Workflow = this;
		}
		
		private void detach_dnn_WorkflowStates(dnn_WorkflowState entity)
		{
			this.SendPropertyChanging();
			entity.dnn_Workflow = null;
		}
	}
}
#pragma warning restore 1591
